/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"time"
)

// checks if the BackgroundJobGetModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackgroundJobGetModel{}

// BackgroundJobGetModel struct for BackgroundJobGetModel
type BackgroundJobGetModel struct {
	Id string `json:"id"`
	JobId string `json:"jobId"`
	JobType BackgroundJobType `json:"jobType"`
	State BackgroundJobState `json:"state"`
	IsDeleted bool `json:"isDeleted"`
	Progress int64 `json:"progress"`
	CreatedDate time.Time `json:"createdDate"`
	StartDate NullableTime `json:"startDate,omitempty"`
	EndDate NullableTime `json:"endDate,omitempty"`
	Error NullableString `json:"error,omitempty"`
	Attachments []BackgroundJobAttachmentModel `json:"attachments"`
}

// NewBackgroundJobGetModel instantiates a new BackgroundJobGetModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackgroundJobGetModel(id string, jobId string, jobType BackgroundJobType, state BackgroundJobState, isDeleted bool, progress int64, createdDate time.Time, attachments []BackgroundJobAttachmentModel) *BackgroundJobGetModel {
	this := BackgroundJobGetModel{}
	this.Id = id
	this.JobId = jobId
	this.JobType = jobType
	this.State = state
	this.IsDeleted = isDeleted
	this.Progress = progress
	this.CreatedDate = createdDate
	this.Attachments = attachments
	return &this
}

// NewBackgroundJobGetModelWithDefaults instantiates a new BackgroundJobGetModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackgroundJobGetModelWithDefaults() *BackgroundJobGetModel {
	this := BackgroundJobGetModel{}
	return &this
}

// GetId returns the Id field value
func (o *BackgroundJobGetModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BackgroundJobGetModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BackgroundJobGetModel) SetId(v string) {
	o.Id = v
}

// GetJobId returns the JobId field value
func (o *BackgroundJobGetModel) GetJobId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value
// and a boolean to check if the value has been set.
func (o *BackgroundJobGetModel) GetJobIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobId, true
}

// SetJobId sets field value
func (o *BackgroundJobGetModel) SetJobId(v string) {
	o.JobId = v
}

// GetJobType returns the JobType field value
func (o *BackgroundJobGetModel) GetJobType() BackgroundJobType {
	if o == nil {
		var ret BackgroundJobType
		return ret
	}

	return o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value
// and a boolean to check if the value has been set.
func (o *BackgroundJobGetModel) GetJobTypeOk() (*BackgroundJobType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobType, true
}

// SetJobType sets field value
func (o *BackgroundJobGetModel) SetJobType(v BackgroundJobType) {
	o.JobType = v
}

// GetState returns the State field value
func (o *BackgroundJobGetModel) GetState() BackgroundJobState {
	if o == nil {
		var ret BackgroundJobState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *BackgroundJobGetModel) GetStateOk() (*BackgroundJobState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *BackgroundJobGetModel) SetState(v BackgroundJobState) {
	o.State = v
}

// GetIsDeleted returns the IsDeleted field value
func (o *BackgroundJobGetModel) GetIsDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value
// and a boolean to check if the value has been set.
func (o *BackgroundJobGetModel) GetIsDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDeleted, true
}

// SetIsDeleted sets field value
func (o *BackgroundJobGetModel) SetIsDeleted(v bool) {
	o.IsDeleted = v
}

// GetProgress returns the Progress field value
func (o *BackgroundJobGetModel) GetProgress() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Progress
}

// GetProgressOk returns a tuple with the Progress field value
// and a boolean to check if the value has been set.
func (o *BackgroundJobGetModel) GetProgressOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Progress, true
}

// SetProgress sets field value
func (o *BackgroundJobGetModel) SetProgress(v int64) {
	o.Progress = v
}

// GetCreatedDate returns the CreatedDate field value
func (o *BackgroundJobGetModel) GetCreatedDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value
// and a boolean to check if the value has been set.
func (o *BackgroundJobGetModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedDate, true
}

// SetCreatedDate sets field value
func (o *BackgroundJobGetModel) SetCreatedDate(v time.Time) {
	o.CreatedDate = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackgroundJobGetModel) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartDate.Get()
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackgroundJobGetModel) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartDate.Get(), o.StartDate.IsSet()
}

// HasStartDate returns a boolean if a field has been set.
func (o *BackgroundJobGetModel) HasStartDate() bool {
	if o != nil && o.StartDate.IsSet() {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given NullableTime and assigns it to the StartDate field.
func (o *BackgroundJobGetModel) SetStartDate(v time.Time) {
	o.StartDate.Set(&v)
}
// SetStartDateNil sets the value for StartDate to be an explicit nil
func (o *BackgroundJobGetModel) SetStartDateNil() {
	o.StartDate.Set(nil)
}

// UnsetStartDate ensures that no value is present for StartDate, not even an explicit nil
func (o *BackgroundJobGetModel) UnsetStartDate() {
	o.StartDate.Unset()
}

// GetEndDate returns the EndDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackgroundJobGetModel) GetEndDate() time.Time {
	if o == nil || IsNil(o.EndDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.EndDate.Get()
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackgroundJobGetModel) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndDate.Get(), o.EndDate.IsSet()
}

// HasEndDate returns a boolean if a field has been set.
func (o *BackgroundJobGetModel) HasEndDate() bool {
	if o != nil && o.EndDate.IsSet() {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given NullableTime and assigns it to the EndDate field.
func (o *BackgroundJobGetModel) SetEndDate(v time.Time) {
	o.EndDate.Set(&v)
}
// SetEndDateNil sets the value for EndDate to be an explicit nil
func (o *BackgroundJobGetModel) SetEndDateNil() {
	o.EndDate.Set(nil)
}

// UnsetEndDate ensures that no value is present for EndDate, not even an explicit nil
func (o *BackgroundJobGetModel) UnsetEndDate() {
	o.EndDate.Unset()
}

// GetError returns the Error field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BackgroundJobGetModel) GetError() string {
	if o == nil || IsNil(o.Error.Get()) {
		var ret string
		return ret
	}
	return *o.Error.Get()
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BackgroundJobGetModel) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Error.Get(), o.Error.IsSet()
}

// HasError returns a boolean if a field has been set.
func (o *BackgroundJobGetModel) HasError() bool {
	if o != nil && o.Error.IsSet() {
		return true
	}

	return false
}

// SetError gets a reference to the given NullableString and assigns it to the Error field.
func (o *BackgroundJobGetModel) SetError(v string) {
	o.Error.Set(&v)
}
// SetErrorNil sets the value for Error to be an explicit nil
func (o *BackgroundJobGetModel) SetErrorNil() {
	o.Error.Set(nil)
}

// UnsetError ensures that no value is present for Error, not even an explicit nil
func (o *BackgroundJobGetModel) UnsetError() {
	o.Error.Unset()
}

// GetAttachments returns the Attachments field value
func (o *BackgroundJobGetModel) GetAttachments() []BackgroundJobAttachmentModel {
	if o == nil {
		var ret []BackgroundJobAttachmentModel
		return ret
	}

	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value
// and a boolean to check if the value has been set.
func (o *BackgroundJobGetModel) GetAttachmentsOk() ([]BackgroundJobAttachmentModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attachments, true
}

// SetAttachments sets field value
func (o *BackgroundJobGetModel) SetAttachments(v []BackgroundJobAttachmentModel) {
	o.Attachments = v
}

func (o BackgroundJobGetModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackgroundJobGetModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["jobId"] = o.JobId
	toSerialize["jobType"] = o.JobType
	toSerialize["state"] = o.State
	toSerialize["isDeleted"] = o.IsDeleted
	toSerialize["progress"] = o.Progress
	toSerialize["createdDate"] = o.CreatedDate
	if o.StartDate.IsSet() {
		toSerialize["startDate"] = o.StartDate.Get()
	}
	if o.EndDate.IsSet() {
		toSerialize["endDate"] = o.EndDate.Get()
	}
	if o.Error.IsSet() {
		toSerialize["error"] = o.Error.Get()
	}
	toSerialize["attachments"] = o.Attachments
	return toSerialize, nil
}

type NullableBackgroundJobGetModel struct {
	value *BackgroundJobGetModel
	isSet bool
}

func (v NullableBackgroundJobGetModel) Get() *BackgroundJobGetModel {
	return v.value
}

func (v *NullableBackgroundJobGetModel) Set(val *BackgroundJobGetModel) {
	v.value = val
	v.isSet = true
}

func (v NullableBackgroundJobGetModel) IsSet() bool {
	return v.isSet
}

func (v *NullableBackgroundJobGetModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackgroundJobGetModel(val *BackgroundJobGetModel) *NullableBackgroundJobGetModel {
	return &NullableBackgroundJobGetModel{value: val, isSet: true}
}

func (v NullableBackgroundJobGetModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackgroundJobGetModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


