/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateProjectApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateProjectApiModel{}

// CreateProjectApiModel struct for CreateProjectApiModel
type CreateProjectApiModel struct {
	// Name of the project
	Name string `json:"name"`
	// Description of the project
	Description NullableString `json:"description,omitempty"`
	// Indicates if the project is marked as favorite
	IsFavorite NullableBool `json:"isFavorite,omitempty"`
	// Identifier of the workflow project should use
	WorkflowId NullableString `json:"workflowId,omitempty"`
}

type _CreateProjectApiModel CreateProjectApiModel

// NewCreateProjectApiModel instantiates a new CreateProjectApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProjectApiModel(name string) *CreateProjectApiModel {
	this := CreateProjectApiModel{}
	this.Name = name
	return &this
}

// NewCreateProjectApiModelWithDefaults instantiates a new CreateProjectApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProjectApiModelWithDefaults() *CreateProjectApiModel {
	this := CreateProjectApiModel{}
	return &this
}

// GetName returns the Name field value
func (o *CreateProjectApiModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateProjectApiModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateProjectApiModel) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectApiModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectApiModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateProjectApiModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateProjectApiModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateProjectApiModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateProjectApiModel) UnsetDescription() {
	o.Description.Unset()
}

// GetIsFavorite returns the IsFavorite field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectApiModel) GetIsFavorite() bool {
	if o == nil || IsNil(o.IsFavorite.Get()) {
		var ret bool
		return ret
	}
	return *o.IsFavorite.Get()
}

// GetIsFavoriteOk returns a tuple with the IsFavorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectApiModel) GetIsFavoriteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsFavorite.Get(), o.IsFavorite.IsSet()
}

// HasIsFavorite returns a boolean if a field has been set.
func (o *CreateProjectApiModel) HasIsFavorite() bool {
	if o != nil && o.IsFavorite.IsSet() {
		return true
	}

	return false
}

// SetIsFavorite gets a reference to the given NullableBool and assigns it to the IsFavorite field.
func (o *CreateProjectApiModel) SetIsFavorite(v bool) {
	o.IsFavorite.Set(&v)
}
// SetIsFavoriteNil sets the value for IsFavorite to be an explicit nil
func (o *CreateProjectApiModel) SetIsFavoriteNil() {
	o.IsFavorite.Set(nil)
}

// UnsetIsFavorite ensures that no value is present for IsFavorite, not even an explicit nil
func (o *CreateProjectApiModel) UnsetIsFavorite() {
	o.IsFavorite.Unset()
}

// GetWorkflowId returns the WorkflowId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateProjectApiModel) GetWorkflowId() string {
	if o == nil || IsNil(o.WorkflowId.Get()) {
		var ret string
		return ret
	}
	return *o.WorkflowId.Get()
}

// GetWorkflowIdOk returns a tuple with the WorkflowId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateProjectApiModel) GetWorkflowIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkflowId.Get(), o.WorkflowId.IsSet()
}

// HasWorkflowId returns a boolean if a field has been set.
func (o *CreateProjectApiModel) HasWorkflowId() bool {
	if o != nil && o.WorkflowId.IsSet() {
		return true
	}

	return false
}

// SetWorkflowId gets a reference to the given NullableString and assigns it to the WorkflowId field.
func (o *CreateProjectApiModel) SetWorkflowId(v string) {
	o.WorkflowId.Set(&v)
}
// SetWorkflowIdNil sets the value for WorkflowId to be an explicit nil
func (o *CreateProjectApiModel) SetWorkflowIdNil() {
	o.WorkflowId.Set(nil)
}

// UnsetWorkflowId ensures that no value is present for WorkflowId, not even an explicit nil
func (o *CreateProjectApiModel) UnsetWorkflowId() {
	o.WorkflowId.Unset()
}

func (o CreateProjectApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateProjectApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.IsFavorite.IsSet() {
		toSerialize["isFavorite"] = o.IsFavorite.Get()
	}
	if o.WorkflowId.IsSet() {
		toSerialize["workflowId"] = o.WorkflowId.Get()
	}
	return toSerialize, nil
}

func (o *CreateProjectApiModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateProjectApiModel := _CreateProjectApiModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateProjectApiModel)

	if err != nil {
		return err
	}

	*o = CreateProjectApiModel(varCreateProjectApiModel)

	return err
}

type NullableCreateProjectApiModel struct {
	value *CreateProjectApiModel
	isSet bool
}

func (v NullableCreateProjectApiModel) Get() *CreateProjectApiModel {
	return v.value
}

func (v *NullableCreateProjectApiModel) Set(val *CreateProjectApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProjectApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProjectApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProjectApiModel(val *CreateProjectApiModel) *NullableCreateProjectApiModel {
	return &NullableCreateProjectApiModel{value: val, isSet: true}
}

func (v NullableCreateProjectApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProjectApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


