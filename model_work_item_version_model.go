/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"time"
)

// checks if the WorkItemVersionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkItemVersionModel{}

// WorkItemVersionModel struct for WorkItemVersionModel
type WorkItemVersionModel struct {
	// used for versioning changes in workitem
	VersionId *string `json:"versionId,omitempty"`
	// used for define chronology of workitem state in each version
	VersionNumber *int32 `json:"versionNumber,omitempty"`
	ModifiedDate NullableTime `json:"modifiedDate,omitempty"`
	ModifiedById NullableString `json:"modifiedById,omitempty"`
}

// NewWorkItemVersionModel instantiates a new WorkItemVersionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkItemVersionModel() *WorkItemVersionModel {
	this := WorkItemVersionModel{}
	return &this
}

// NewWorkItemVersionModelWithDefaults instantiates a new WorkItemVersionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkItemVersionModelWithDefaults() *WorkItemVersionModel {
	this := WorkItemVersionModel{}
	return &this
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *WorkItemVersionModel) GetVersionId() string {
	if o == nil || IsNil(o.VersionId) {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkItemVersionModel) GetVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.VersionId) {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *WorkItemVersionModel) HasVersionId() bool {
	if o != nil && !IsNil(o.VersionId) {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *WorkItemVersionModel) SetVersionId(v string) {
	o.VersionId = &v
}

// GetVersionNumber returns the VersionNumber field value if set, zero value otherwise.
func (o *WorkItemVersionModel) GetVersionNumber() int32 {
	if o == nil || IsNil(o.VersionNumber) {
		var ret int32
		return ret
	}
	return *o.VersionNumber
}

// GetVersionNumberOk returns a tuple with the VersionNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkItemVersionModel) GetVersionNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.VersionNumber) {
		return nil, false
	}
	return o.VersionNumber, true
}

// HasVersionNumber returns a boolean if a field has been set.
func (o *WorkItemVersionModel) HasVersionNumber() bool {
	if o != nil && !IsNil(o.VersionNumber) {
		return true
	}

	return false
}

// SetVersionNumber gets a reference to the given int32 and assigns it to the VersionNumber field.
func (o *WorkItemVersionModel) SetVersionNumber(v int32) {
	o.VersionNumber = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemVersionModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate.Get()
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemVersionModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedDate.Get(), o.ModifiedDate.IsSet()
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *WorkItemVersionModel) HasModifiedDate() bool {
	if o != nil && o.ModifiedDate.IsSet() {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given NullableTime and assigns it to the ModifiedDate field.
func (o *WorkItemVersionModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate.Set(&v)
}
// SetModifiedDateNil sets the value for ModifiedDate to be an explicit nil
func (o *WorkItemVersionModel) SetModifiedDateNil() {
	o.ModifiedDate.Set(nil)
}

// UnsetModifiedDate ensures that no value is present for ModifiedDate, not even an explicit nil
func (o *WorkItemVersionModel) UnsetModifiedDate() {
	o.ModifiedDate.Unset()
}

// GetModifiedById returns the ModifiedById field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemVersionModel) GetModifiedById() string {
	if o == nil || IsNil(o.ModifiedById.Get()) {
		var ret string
		return ret
	}
	return *o.ModifiedById.Get()
}

// GetModifiedByIdOk returns a tuple with the ModifiedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemVersionModel) GetModifiedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedById.Get(), o.ModifiedById.IsSet()
}

// HasModifiedById returns a boolean if a field has been set.
func (o *WorkItemVersionModel) HasModifiedById() bool {
	if o != nil && o.ModifiedById.IsSet() {
		return true
	}

	return false
}

// SetModifiedById gets a reference to the given NullableString and assigns it to the ModifiedById field.
func (o *WorkItemVersionModel) SetModifiedById(v string) {
	o.ModifiedById.Set(&v)
}
// SetModifiedByIdNil sets the value for ModifiedById to be an explicit nil
func (o *WorkItemVersionModel) SetModifiedByIdNil() {
	o.ModifiedById.Set(nil)
}

// UnsetModifiedById ensures that no value is present for ModifiedById, not even an explicit nil
func (o *WorkItemVersionModel) UnsetModifiedById() {
	o.ModifiedById.Unset()
}

func (o WorkItemVersionModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkItemVersionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VersionId) {
		toSerialize["versionId"] = o.VersionId
	}
	if !IsNil(o.VersionNumber) {
		toSerialize["versionNumber"] = o.VersionNumber
	}
	if o.ModifiedDate.IsSet() {
		toSerialize["modifiedDate"] = o.ModifiedDate.Get()
	}
	if o.ModifiedById.IsSet() {
		toSerialize["modifiedById"] = o.ModifiedById.Get()
	}
	return toSerialize, nil
}

type NullableWorkItemVersionModel struct {
	value *WorkItemVersionModel
	isSet bool
}

func (v NullableWorkItemVersionModel) Get() *WorkItemVersionModel {
	return v.value
}

func (v *NullableWorkItemVersionModel) Set(val *WorkItemVersionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkItemVersionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkItemVersionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkItemVersionModel(val *WorkItemVersionModel) *NullableWorkItemVersionModel {
	return &NullableWorkItemVersionModel{value: val, isSet: true}
}

func (v NullableWorkItemVersionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkItemVersionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


