/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TestStatusCreateModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestStatusCreateModel{}

// TestStatusCreateModel struct for TestStatusCreateModel
type TestStatusCreateModel struct {
	Name string `json:"name"`
	Type TestStatusType `json:"type"`
	Code string `json:"code"`
	Description NullableString `json:"description,omitempty"`
}

type _TestStatusCreateModel TestStatusCreateModel

// NewTestStatusCreateModel instantiates a new TestStatusCreateModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestStatusCreateModel(name string, type_ TestStatusType, code string) *TestStatusCreateModel {
	this := TestStatusCreateModel{}
	this.Name = name
	this.Type = type_
	this.Code = code
	return &this
}

// NewTestStatusCreateModelWithDefaults instantiates a new TestStatusCreateModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestStatusCreateModelWithDefaults() *TestStatusCreateModel {
	this := TestStatusCreateModel{}
	return &this
}

// GetName returns the Name field value
func (o *TestStatusCreateModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TestStatusCreateModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TestStatusCreateModel) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *TestStatusCreateModel) GetType() TestStatusType {
	if o == nil {
		var ret TestStatusType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TestStatusCreateModel) GetTypeOk() (*TestStatusType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TestStatusCreateModel) SetType(v TestStatusType) {
	o.Type = v
}

// GetCode returns the Code field value
func (o *TestStatusCreateModel) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *TestStatusCreateModel) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *TestStatusCreateModel) SetCode(v string) {
	o.Code = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestStatusCreateModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestStatusCreateModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *TestStatusCreateModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *TestStatusCreateModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *TestStatusCreateModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *TestStatusCreateModel) UnsetDescription() {
	o.Description.Unset()
}

func (o TestStatusCreateModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestStatusCreateModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	toSerialize["code"] = o.Code
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	return toSerialize, nil
}

func (o *TestStatusCreateModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"type",
		"code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestStatusCreateModel := _TestStatusCreateModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestStatusCreateModel)

	if err != nil {
		return err
	}

	*o = TestStatusCreateModel(varTestStatusCreateModel)

	return err
}

type NullableTestStatusCreateModel struct {
	value *TestStatusCreateModel
	isSet bool
}

func (v NullableTestStatusCreateModel) Get() *TestStatusCreateModel {
	return v.value
}

func (v *NullableTestStatusCreateModel) Set(val *TestStatusCreateModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestStatusCreateModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestStatusCreateModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestStatusCreateModel(val *TestStatusCreateModel) *NullableTestStatusCreateModel {
	return &NullableTestStatusCreateModel{value: val, isSet: true}
}

func (v NullableTestStatusCreateModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestStatusCreateModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


