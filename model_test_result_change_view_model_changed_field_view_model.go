/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the TestResultChangeViewModelChangedFieldViewModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestResultChangeViewModelChangedFieldViewModel{}

// TestResultChangeViewModelChangedFieldViewModel struct for TestResultChangeViewModelChangedFieldViewModel
type TestResultChangeViewModelChangedFieldViewModel struct {
	OldValue NullableTestResultChangeViewModel `json:"oldValue,omitempty"`
	NewValue NullableTestResultChangeViewModel `json:"newValue,omitempty"`
}

// NewTestResultChangeViewModelChangedFieldViewModel instantiates a new TestResultChangeViewModelChangedFieldViewModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestResultChangeViewModelChangedFieldViewModel() *TestResultChangeViewModelChangedFieldViewModel {
	this := TestResultChangeViewModelChangedFieldViewModel{}
	return &this
}

// NewTestResultChangeViewModelChangedFieldViewModelWithDefaults instantiates a new TestResultChangeViewModelChangedFieldViewModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestResultChangeViewModelChangedFieldViewModelWithDefaults() *TestResultChangeViewModelChangedFieldViewModel {
	this := TestResultChangeViewModelChangedFieldViewModel{}
	return &this
}

// GetOldValue returns the OldValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultChangeViewModelChangedFieldViewModel) GetOldValue() TestResultChangeViewModel {
	if o == nil || IsNil(o.OldValue.Get()) {
		var ret TestResultChangeViewModel
		return ret
	}
	return *o.OldValue.Get()
}

// GetOldValueOk returns a tuple with the OldValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultChangeViewModelChangedFieldViewModel) GetOldValueOk() (*TestResultChangeViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.OldValue.Get(), o.OldValue.IsSet()
}

// HasOldValue returns a boolean if a field has been set.
func (o *TestResultChangeViewModelChangedFieldViewModel) HasOldValue() bool {
	if o != nil && o.OldValue.IsSet() {
		return true
	}

	return false
}

// SetOldValue gets a reference to the given NullableTestResultChangeViewModel and assigns it to the OldValue field.
func (o *TestResultChangeViewModelChangedFieldViewModel) SetOldValue(v TestResultChangeViewModel) {
	o.OldValue.Set(&v)
}
// SetOldValueNil sets the value for OldValue to be an explicit nil
func (o *TestResultChangeViewModelChangedFieldViewModel) SetOldValueNil() {
	o.OldValue.Set(nil)
}

// UnsetOldValue ensures that no value is present for OldValue, not even an explicit nil
func (o *TestResultChangeViewModelChangedFieldViewModel) UnsetOldValue() {
	o.OldValue.Unset()
}

// GetNewValue returns the NewValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultChangeViewModelChangedFieldViewModel) GetNewValue() TestResultChangeViewModel {
	if o == nil || IsNil(o.NewValue.Get()) {
		var ret TestResultChangeViewModel
		return ret
	}
	return *o.NewValue.Get()
}

// GetNewValueOk returns a tuple with the NewValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultChangeViewModelChangedFieldViewModel) GetNewValueOk() (*TestResultChangeViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.NewValue.Get(), o.NewValue.IsSet()
}

// HasNewValue returns a boolean if a field has been set.
func (o *TestResultChangeViewModelChangedFieldViewModel) HasNewValue() bool {
	if o != nil && o.NewValue.IsSet() {
		return true
	}

	return false
}

// SetNewValue gets a reference to the given NullableTestResultChangeViewModel and assigns it to the NewValue field.
func (o *TestResultChangeViewModelChangedFieldViewModel) SetNewValue(v TestResultChangeViewModel) {
	o.NewValue.Set(&v)
}
// SetNewValueNil sets the value for NewValue to be an explicit nil
func (o *TestResultChangeViewModelChangedFieldViewModel) SetNewValueNil() {
	o.NewValue.Set(nil)
}

// UnsetNewValue ensures that no value is present for NewValue, not even an explicit nil
func (o *TestResultChangeViewModelChangedFieldViewModel) UnsetNewValue() {
	o.NewValue.Unset()
}

func (o TestResultChangeViewModelChangedFieldViewModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestResultChangeViewModelChangedFieldViewModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OldValue.IsSet() {
		toSerialize["oldValue"] = o.OldValue.Get()
	}
	if o.NewValue.IsSet() {
		toSerialize["newValue"] = o.NewValue.Get()
	}
	return toSerialize, nil
}

type NullableTestResultChangeViewModelChangedFieldViewModel struct {
	value *TestResultChangeViewModelChangedFieldViewModel
	isSet bool
}

func (v NullableTestResultChangeViewModelChangedFieldViewModel) Get() *TestResultChangeViewModelChangedFieldViewModel {
	return v.value
}

func (v *NullableTestResultChangeViewModelChangedFieldViewModel) Set(val *TestResultChangeViewModelChangedFieldViewModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestResultChangeViewModelChangedFieldViewModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestResultChangeViewModelChangedFieldViewModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestResultChangeViewModelChangedFieldViewModel(val *TestResultChangeViewModelChangedFieldViewModel) *NullableTestResultChangeViewModelChangedFieldViewModel {
	return &NullableTestResultChangeViewModelChangedFieldViewModel{value: val, isSet: true}
}

func (v NullableTestResultChangeViewModelChangedFieldViewModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestResultChangeViewModelChangedFieldViewModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


