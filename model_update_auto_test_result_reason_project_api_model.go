/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateAutoTestResultReasonProjectApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAutoTestResultReasonProjectApiModel{}

// UpdateAutoTestResultReasonProjectApiModel struct for UpdateAutoTestResultReasonProjectApiModel
type UpdateAutoTestResultReasonProjectApiModel struct {
	// Failure category identifier
	Id string `json:"id"`
	// Failure category name
	Name string `json:"name"`
	// Category type
	FailureCategory FailureCategory `json:"failureCategory"`
	// Failure category regexes
	FailureClassRegexes []UpdateFailureClassRegexApiModel `json:"failureClassRegexes,omitempty"`
	// Projects identifiers
	ProjectIds []string `json:"projectIds,omitempty"`
}

type _UpdateAutoTestResultReasonProjectApiModel UpdateAutoTestResultReasonProjectApiModel

// NewUpdateAutoTestResultReasonProjectApiModel instantiates a new UpdateAutoTestResultReasonProjectApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAutoTestResultReasonProjectApiModel(id string, name string, failureCategory FailureCategory) *UpdateAutoTestResultReasonProjectApiModel {
	this := UpdateAutoTestResultReasonProjectApiModel{}
	this.Id = id
	this.Name = name
	this.FailureCategory = failureCategory
	return &this
}

// NewUpdateAutoTestResultReasonProjectApiModelWithDefaults instantiates a new UpdateAutoTestResultReasonProjectApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAutoTestResultReasonProjectApiModelWithDefaults() *UpdateAutoTestResultReasonProjectApiModel {
	this := UpdateAutoTestResultReasonProjectApiModel{}
	return &this
}

// GetId returns the Id field value
func (o *UpdateAutoTestResultReasonProjectApiModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UpdateAutoTestResultReasonProjectApiModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UpdateAutoTestResultReasonProjectApiModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *UpdateAutoTestResultReasonProjectApiModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateAutoTestResultReasonProjectApiModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateAutoTestResultReasonProjectApiModel) SetName(v string) {
	o.Name = v
}

// GetFailureCategory returns the FailureCategory field value
func (o *UpdateAutoTestResultReasonProjectApiModel) GetFailureCategory() FailureCategory {
	if o == nil {
		var ret FailureCategory
		return ret
	}

	return o.FailureCategory
}

// GetFailureCategoryOk returns a tuple with the FailureCategory field value
// and a boolean to check if the value has been set.
func (o *UpdateAutoTestResultReasonProjectApiModel) GetFailureCategoryOk() (*FailureCategory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailureCategory, true
}

// SetFailureCategory sets field value
func (o *UpdateAutoTestResultReasonProjectApiModel) SetFailureCategory(v FailureCategory) {
	o.FailureCategory = v
}

// GetFailureClassRegexes returns the FailureClassRegexes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAutoTestResultReasonProjectApiModel) GetFailureClassRegexes() []UpdateFailureClassRegexApiModel {
	if o == nil {
		var ret []UpdateFailureClassRegexApiModel
		return ret
	}
	return o.FailureClassRegexes
}

// GetFailureClassRegexesOk returns a tuple with the FailureClassRegexes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAutoTestResultReasonProjectApiModel) GetFailureClassRegexesOk() ([]UpdateFailureClassRegexApiModel, bool) {
	if o == nil || IsNil(o.FailureClassRegexes) {
		return nil, false
	}
	return o.FailureClassRegexes, true
}

// HasFailureClassRegexes returns a boolean if a field has been set.
func (o *UpdateAutoTestResultReasonProjectApiModel) HasFailureClassRegexes() bool {
	if o != nil && !IsNil(o.FailureClassRegexes) {
		return true
	}

	return false
}

// SetFailureClassRegexes gets a reference to the given []UpdateFailureClassRegexApiModel and assigns it to the FailureClassRegexes field.
func (o *UpdateAutoTestResultReasonProjectApiModel) SetFailureClassRegexes(v []UpdateFailureClassRegexApiModel) {
	o.FailureClassRegexes = v
}

// GetProjectIds returns the ProjectIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateAutoTestResultReasonProjectApiModel) GetProjectIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ProjectIds
}

// GetProjectIdsOk returns a tuple with the ProjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateAutoTestResultReasonProjectApiModel) GetProjectIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProjectIds) {
		return nil, false
	}
	return o.ProjectIds, true
}

// HasProjectIds returns a boolean if a field has been set.
func (o *UpdateAutoTestResultReasonProjectApiModel) HasProjectIds() bool {
	if o != nil && !IsNil(o.ProjectIds) {
		return true
	}

	return false
}

// SetProjectIds gets a reference to the given []string and assigns it to the ProjectIds field.
func (o *UpdateAutoTestResultReasonProjectApiModel) SetProjectIds(v []string) {
	o.ProjectIds = v
}

func (o UpdateAutoTestResultReasonProjectApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAutoTestResultReasonProjectApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["failureCategory"] = o.FailureCategory
	if o.FailureClassRegexes != nil {
		toSerialize["failureClassRegexes"] = o.FailureClassRegexes
	}
	if o.ProjectIds != nil {
		toSerialize["projectIds"] = o.ProjectIds
	}
	return toSerialize, nil
}

func (o *UpdateAutoTestResultReasonProjectApiModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"failureCategory",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateAutoTestResultReasonProjectApiModel := _UpdateAutoTestResultReasonProjectApiModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateAutoTestResultReasonProjectApiModel)

	if err != nil {
		return err
	}

	*o = UpdateAutoTestResultReasonProjectApiModel(varUpdateAutoTestResultReasonProjectApiModel)

	return err
}

type NullableUpdateAutoTestResultReasonProjectApiModel struct {
	value *UpdateAutoTestResultReasonProjectApiModel
	isSet bool
}

func (v NullableUpdateAutoTestResultReasonProjectApiModel) Get() *UpdateAutoTestResultReasonProjectApiModel {
	return v.value
}

func (v *NullableUpdateAutoTestResultReasonProjectApiModel) Set(val *UpdateAutoTestResultReasonProjectApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAutoTestResultReasonProjectApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAutoTestResultReasonProjectApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAutoTestResultReasonProjectApiModel(val *UpdateAutoTestResultReasonProjectApiModel) *NullableUpdateAutoTestResultReasonProjectApiModel {
	return &NullableUpdateAutoTestResultReasonProjectApiModel{value: val, isSet: true}
}

func (v NullableUpdateAutoTestResultReasonProjectApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAutoTestResultReasonProjectApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


