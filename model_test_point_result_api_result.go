/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TestPointResultApiResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestPointResultApiResult{}

// TestPointResultApiResult struct for TestPointResultApiResult
type TestPointResultApiResult struct {
	TestPointId NullableString `json:"testPointId,omitempty"`
	// Deprecated
	AggregatedOutcome NullableString `json:"aggregatedOutcome,omitempty"`
	AggregatedStatus NullableTestStatusApiResult `json:"aggregatedStatus,omitempty"`
	WorkItemGlobalId NullableInt64 `json:"workItemGlobalId,omitempty"`
	WorkItemName NullableString `json:"workItemName,omitempty"`
	ConfigurationName NullableString `json:"configurationName,omitempty"`
	TestResults []TestResultShortApiResult `json:"testResults"`
}

type _TestPointResultApiResult TestPointResultApiResult

// NewTestPointResultApiResult instantiates a new TestPointResultApiResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestPointResultApiResult(testResults []TestResultShortApiResult) *TestPointResultApiResult {
	this := TestPointResultApiResult{}
	this.TestResults = testResults
	return &this
}

// NewTestPointResultApiResultWithDefaults instantiates a new TestPointResultApiResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestPointResultApiResultWithDefaults() *TestPointResultApiResult {
	this := TestPointResultApiResult{}
	return &this
}

// GetTestPointId returns the TestPointId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPointResultApiResult) GetTestPointId() string {
	if o == nil || IsNil(o.TestPointId.Get()) {
		var ret string
		return ret
	}
	return *o.TestPointId.Get()
}

// GetTestPointIdOk returns a tuple with the TestPointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPointResultApiResult) GetTestPointIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TestPointId.Get(), o.TestPointId.IsSet()
}

// HasTestPointId returns a boolean if a field has been set.
func (o *TestPointResultApiResult) HasTestPointId() bool {
	if o != nil && o.TestPointId.IsSet() {
		return true
	}

	return false
}

// SetTestPointId gets a reference to the given NullableString and assigns it to the TestPointId field.
func (o *TestPointResultApiResult) SetTestPointId(v string) {
	o.TestPointId.Set(&v)
}
// SetTestPointIdNil sets the value for TestPointId to be an explicit nil
func (o *TestPointResultApiResult) SetTestPointIdNil() {
	o.TestPointId.Set(nil)
}

// UnsetTestPointId ensures that no value is present for TestPointId, not even an explicit nil
func (o *TestPointResultApiResult) UnsetTestPointId() {
	o.TestPointId.Unset()
}

// GetAggregatedOutcome returns the AggregatedOutcome field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *TestPointResultApiResult) GetAggregatedOutcome() string {
	if o == nil || IsNil(o.AggregatedOutcome.Get()) {
		var ret string
		return ret
	}
	return *o.AggregatedOutcome.Get()
}

// GetAggregatedOutcomeOk returns a tuple with the AggregatedOutcome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *TestPointResultApiResult) GetAggregatedOutcomeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AggregatedOutcome.Get(), o.AggregatedOutcome.IsSet()
}

// HasAggregatedOutcome returns a boolean if a field has been set.
func (o *TestPointResultApiResult) HasAggregatedOutcome() bool {
	if o != nil && o.AggregatedOutcome.IsSet() {
		return true
	}

	return false
}

// SetAggregatedOutcome gets a reference to the given NullableString and assigns it to the AggregatedOutcome field.
// Deprecated
func (o *TestPointResultApiResult) SetAggregatedOutcome(v string) {
	o.AggregatedOutcome.Set(&v)
}
// SetAggregatedOutcomeNil sets the value for AggregatedOutcome to be an explicit nil
func (o *TestPointResultApiResult) SetAggregatedOutcomeNil() {
	o.AggregatedOutcome.Set(nil)
}

// UnsetAggregatedOutcome ensures that no value is present for AggregatedOutcome, not even an explicit nil
func (o *TestPointResultApiResult) UnsetAggregatedOutcome() {
	o.AggregatedOutcome.Unset()
}

// GetAggregatedStatus returns the AggregatedStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPointResultApiResult) GetAggregatedStatus() TestStatusApiResult {
	if o == nil || IsNil(o.AggregatedStatus.Get()) {
		var ret TestStatusApiResult
		return ret
	}
	return *o.AggregatedStatus.Get()
}

// GetAggregatedStatusOk returns a tuple with the AggregatedStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPointResultApiResult) GetAggregatedStatusOk() (*TestStatusApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.AggregatedStatus.Get(), o.AggregatedStatus.IsSet()
}

// HasAggregatedStatus returns a boolean if a field has been set.
func (o *TestPointResultApiResult) HasAggregatedStatus() bool {
	if o != nil && o.AggregatedStatus.IsSet() {
		return true
	}

	return false
}

// SetAggregatedStatus gets a reference to the given NullableTestStatusApiResult and assigns it to the AggregatedStatus field.
func (o *TestPointResultApiResult) SetAggregatedStatus(v TestStatusApiResult) {
	o.AggregatedStatus.Set(&v)
}
// SetAggregatedStatusNil sets the value for AggregatedStatus to be an explicit nil
func (o *TestPointResultApiResult) SetAggregatedStatusNil() {
	o.AggregatedStatus.Set(nil)
}

// UnsetAggregatedStatus ensures that no value is present for AggregatedStatus, not even an explicit nil
func (o *TestPointResultApiResult) UnsetAggregatedStatus() {
	o.AggregatedStatus.Unset()
}

// GetWorkItemGlobalId returns the WorkItemGlobalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPointResultApiResult) GetWorkItemGlobalId() int64 {
	if o == nil || IsNil(o.WorkItemGlobalId.Get()) {
		var ret int64
		return ret
	}
	return *o.WorkItemGlobalId.Get()
}

// GetWorkItemGlobalIdOk returns a tuple with the WorkItemGlobalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPointResultApiResult) GetWorkItemGlobalIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkItemGlobalId.Get(), o.WorkItemGlobalId.IsSet()
}

// HasWorkItemGlobalId returns a boolean if a field has been set.
func (o *TestPointResultApiResult) HasWorkItemGlobalId() bool {
	if o != nil && o.WorkItemGlobalId.IsSet() {
		return true
	}

	return false
}

// SetWorkItemGlobalId gets a reference to the given NullableInt64 and assigns it to the WorkItemGlobalId field.
func (o *TestPointResultApiResult) SetWorkItemGlobalId(v int64) {
	o.WorkItemGlobalId.Set(&v)
}
// SetWorkItemGlobalIdNil sets the value for WorkItemGlobalId to be an explicit nil
func (o *TestPointResultApiResult) SetWorkItemGlobalIdNil() {
	o.WorkItemGlobalId.Set(nil)
}

// UnsetWorkItemGlobalId ensures that no value is present for WorkItemGlobalId, not even an explicit nil
func (o *TestPointResultApiResult) UnsetWorkItemGlobalId() {
	o.WorkItemGlobalId.Unset()
}

// GetWorkItemName returns the WorkItemName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPointResultApiResult) GetWorkItemName() string {
	if o == nil || IsNil(o.WorkItemName.Get()) {
		var ret string
		return ret
	}
	return *o.WorkItemName.Get()
}

// GetWorkItemNameOk returns a tuple with the WorkItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPointResultApiResult) GetWorkItemNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkItemName.Get(), o.WorkItemName.IsSet()
}

// HasWorkItemName returns a boolean if a field has been set.
func (o *TestPointResultApiResult) HasWorkItemName() bool {
	if o != nil && o.WorkItemName.IsSet() {
		return true
	}

	return false
}

// SetWorkItemName gets a reference to the given NullableString and assigns it to the WorkItemName field.
func (o *TestPointResultApiResult) SetWorkItemName(v string) {
	o.WorkItemName.Set(&v)
}
// SetWorkItemNameNil sets the value for WorkItemName to be an explicit nil
func (o *TestPointResultApiResult) SetWorkItemNameNil() {
	o.WorkItemName.Set(nil)
}

// UnsetWorkItemName ensures that no value is present for WorkItemName, not even an explicit nil
func (o *TestPointResultApiResult) UnsetWorkItemName() {
	o.WorkItemName.Unset()
}

// GetConfigurationName returns the ConfigurationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPointResultApiResult) GetConfigurationName() string {
	if o == nil || IsNil(o.ConfigurationName.Get()) {
		var ret string
		return ret
	}
	return *o.ConfigurationName.Get()
}

// GetConfigurationNameOk returns a tuple with the ConfigurationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPointResultApiResult) GetConfigurationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfigurationName.Get(), o.ConfigurationName.IsSet()
}

// HasConfigurationName returns a boolean if a field has been set.
func (o *TestPointResultApiResult) HasConfigurationName() bool {
	if o != nil && o.ConfigurationName.IsSet() {
		return true
	}

	return false
}

// SetConfigurationName gets a reference to the given NullableString and assigns it to the ConfigurationName field.
func (o *TestPointResultApiResult) SetConfigurationName(v string) {
	o.ConfigurationName.Set(&v)
}
// SetConfigurationNameNil sets the value for ConfigurationName to be an explicit nil
func (o *TestPointResultApiResult) SetConfigurationNameNil() {
	o.ConfigurationName.Set(nil)
}

// UnsetConfigurationName ensures that no value is present for ConfigurationName, not even an explicit nil
func (o *TestPointResultApiResult) UnsetConfigurationName() {
	o.ConfigurationName.Unset()
}

// GetTestResults returns the TestResults field value
func (o *TestPointResultApiResult) GetTestResults() []TestResultShortApiResult {
	if o == nil {
		var ret []TestResultShortApiResult
		return ret
	}

	return o.TestResults
}

// GetTestResultsOk returns a tuple with the TestResults field value
// and a boolean to check if the value has been set.
func (o *TestPointResultApiResult) GetTestResultsOk() ([]TestResultShortApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.TestResults, true
}

// SetTestResults sets field value
func (o *TestPointResultApiResult) SetTestResults(v []TestResultShortApiResult) {
	o.TestResults = v
}

func (o TestPointResultApiResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestPointResultApiResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TestPointId.IsSet() {
		toSerialize["testPointId"] = o.TestPointId.Get()
	}
	if o.AggregatedOutcome.IsSet() {
		toSerialize["aggregatedOutcome"] = o.AggregatedOutcome.Get()
	}
	if o.AggregatedStatus.IsSet() {
		toSerialize["aggregatedStatus"] = o.AggregatedStatus.Get()
	}
	if o.WorkItemGlobalId.IsSet() {
		toSerialize["workItemGlobalId"] = o.WorkItemGlobalId.Get()
	}
	if o.WorkItemName.IsSet() {
		toSerialize["workItemName"] = o.WorkItemName.Get()
	}
	if o.ConfigurationName.IsSet() {
		toSerialize["configurationName"] = o.ConfigurationName.Get()
	}
	toSerialize["testResults"] = o.TestResults
	return toSerialize, nil
}

func (o *TestPointResultApiResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"testResults",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestPointResultApiResult := _TestPointResultApiResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestPointResultApiResult)

	if err != nil {
		return err
	}

	*o = TestPointResultApiResult(varTestPointResultApiResult)

	return err
}

type NullableTestPointResultApiResult struct {
	value *TestPointResultApiResult
	isSet bool
}

func (v NullableTestPointResultApiResult) Get() *TestPointResultApiResult {
	return v.value
}

func (v *NullableTestPointResultApiResult) Set(val *TestPointResultApiResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTestPointResultApiResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTestPointResultApiResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestPointResultApiResult(val *TestPointResultApiResult) *NullableTestPointResultApiResult {
	return &NullableTestPointResultApiResult{value: val, isSet: true}
}

func (v NullableTestPointResultApiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestPointResultApiResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


