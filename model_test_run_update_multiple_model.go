/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TestRunUpdateMultipleModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestRunUpdateMultipleModel{}

// TestRunUpdateMultipleModel struct for TestRunUpdateMultipleModel
type TestRunUpdateMultipleModel struct {
	SelectModel TestRunSelectModel `json:"selectModel"`
	Description NullableString `json:"description,omitempty"`
	AttachmentUpdateScheme UpdateAttachmentShortModel `json:"attachmentUpdateScheme"`
	LinkUpdateScheme UpdateLinkShortModel `json:"linkUpdateScheme"`
}

type _TestRunUpdateMultipleModel TestRunUpdateMultipleModel

// NewTestRunUpdateMultipleModel instantiates a new TestRunUpdateMultipleModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestRunUpdateMultipleModel(selectModel TestRunSelectModel, attachmentUpdateScheme UpdateAttachmentShortModel, linkUpdateScheme UpdateLinkShortModel) *TestRunUpdateMultipleModel {
	this := TestRunUpdateMultipleModel{}
	this.SelectModel = selectModel
	this.AttachmentUpdateScheme = attachmentUpdateScheme
	this.LinkUpdateScheme = linkUpdateScheme
	return &this
}

// NewTestRunUpdateMultipleModelWithDefaults instantiates a new TestRunUpdateMultipleModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestRunUpdateMultipleModelWithDefaults() *TestRunUpdateMultipleModel {
	this := TestRunUpdateMultipleModel{}
	return &this
}

// GetSelectModel returns the SelectModel field value
func (o *TestRunUpdateMultipleModel) GetSelectModel() TestRunSelectModel {
	if o == nil {
		var ret TestRunSelectModel
		return ret
	}

	return o.SelectModel
}

// GetSelectModelOk returns a tuple with the SelectModel field value
// and a boolean to check if the value has been set.
func (o *TestRunUpdateMultipleModel) GetSelectModelOk() (*TestRunSelectModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SelectModel, true
}

// SetSelectModel sets field value
func (o *TestRunUpdateMultipleModel) SetSelectModel(v TestRunSelectModel) {
	o.SelectModel = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunUpdateMultipleModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunUpdateMultipleModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *TestRunUpdateMultipleModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *TestRunUpdateMultipleModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *TestRunUpdateMultipleModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *TestRunUpdateMultipleModel) UnsetDescription() {
	o.Description.Unset()
}

// GetAttachmentUpdateScheme returns the AttachmentUpdateScheme field value
func (o *TestRunUpdateMultipleModel) GetAttachmentUpdateScheme() UpdateAttachmentShortModel {
	if o == nil {
		var ret UpdateAttachmentShortModel
		return ret
	}

	return o.AttachmentUpdateScheme
}

// GetAttachmentUpdateSchemeOk returns a tuple with the AttachmentUpdateScheme field value
// and a boolean to check if the value has been set.
func (o *TestRunUpdateMultipleModel) GetAttachmentUpdateSchemeOk() (*UpdateAttachmentShortModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttachmentUpdateScheme, true
}

// SetAttachmentUpdateScheme sets field value
func (o *TestRunUpdateMultipleModel) SetAttachmentUpdateScheme(v UpdateAttachmentShortModel) {
	o.AttachmentUpdateScheme = v
}

// GetLinkUpdateScheme returns the LinkUpdateScheme field value
func (o *TestRunUpdateMultipleModel) GetLinkUpdateScheme() UpdateLinkShortModel {
	if o == nil {
		var ret UpdateLinkShortModel
		return ret
	}

	return o.LinkUpdateScheme
}

// GetLinkUpdateSchemeOk returns a tuple with the LinkUpdateScheme field value
// and a boolean to check if the value has been set.
func (o *TestRunUpdateMultipleModel) GetLinkUpdateSchemeOk() (*UpdateLinkShortModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LinkUpdateScheme, true
}

// SetLinkUpdateScheme sets field value
func (o *TestRunUpdateMultipleModel) SetLinkUpdateScheme(v UpdateLinkShortModel) {
	o.LinkUpdateScheme = v
}

func (o TestRunUpdateMultipleModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestRunUpdateMultipleModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["selectModel"] = o.SelectModel
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["attachmentUpdateScheme"] = o.AttachmentUpdateScheme
	toSerialize["linkUpdateScheme"] = o.LinkUpdateScheme
	return toSerialize, nil
}

func (o *TestRunUpdateMultipleModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"selectModel",
		"attachmentUpdateScheme",
		"linkUpdateScheme",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestRunUpdateMultipleModel := _TestRunUpdateMultipleModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestRunUpdateMultipleModel)

	if err != nil {
		return err
	}

	*o = TestRunUpdateMultipleModel(varTestRunUpdateMultipleModel)

	return err
}

type NullableTestRunUpdateMultipleModel struct {
	value *TestRunUpdateMultipleModel
	isSet bool
}

func (v NullableTestRunUpdateMultipleModel) Get() *TestRunUpdateMultipleModel {
	return v.value
}

func (v *NullableTestRunUpdateMultipleModel) Set(val *TestRunUpdateMultipleModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestRunUpdateMultipleModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestRunUpdateMultipleModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestRunUpdateMultipleModel(val *TestRunUpdateMultipleModel) *NullableTestRunUpdateMultipleModel {
	return &NullableTestRunUpdateMultipleModel{value: val, isSet: true}
}

func (v NullableTestRunUpdateMultipleModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestRunUpdateMultipleModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


