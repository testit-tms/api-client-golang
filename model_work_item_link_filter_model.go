/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the WorkItemLinkFilterModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkItemLinkFilterModel{}

// WorkItemLinkFilterModel struct for WorkItemLinkFilterModel
type WorkItemLinkFilterModel struct {
	Types []LinkType `json:"types,omitempty"`
	Title NullableString `json:"title,omitempty"`
	Urls []string `json:"urls,omitempty"`
	OnlyWithoutLinks NullableBool `json:"onlyWithoutLinks,omitempty"`
}

// NewWorkItemLinkFilterModel instantiates a new WorkItemLinkFilterModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkItemLinkFilterModel() *WorkItemLinkFilterModel {
	this := WorkItemLinkFilterModel{}
	return &this
}

// NewWorkItemLinkFilterModelWithDefaults instantiates a new WorkItemLinkFilterModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkItemLinkFilterModelWithDefaults() *WorkItemLinkFilterModel {
	this := WorkItemLinkFilterModel{}
	return &this
}

// GetTypes returns the Types field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemLinkFilterModel) GetTypes() []LinkType {
	if o == nil {
		var ret []LinkType
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemLinkFilterModel) GetTypesOk() ([]LinkType, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *WorkItemLinkFilterModel) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []LinkType and assigns it to the Types field.
func (o *WorkItemLinkFilterModel) SetTypes(v []LinkType) {
	o.Types = v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemLinkFilterModel) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemLinkFilterModel) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *WorkItemLinkFilterModel) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *WorkItemLinkFilterModel) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *WorkItemLinkFilterModel) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *WorkItemLinkFilterModel) UnsetTitle() {
	o.Title.Unset()
}

// GetUrls returns the Urls field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemLinkFilterModel) GetUrls() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemLinkFilterModel) GetUrlsOk() ([]string, bool) {
	if o == nil || IsNil(o.Urls) {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *WorkItemLinkFilterModel) HasUrls() bool {
	if o != nil && !IsNil(o.Urls) {
		return true
	}

	return false
}

// SetUrls gets a reference to the given []string and assigns it to the Urls field.
func (o *WorkItemLinkFilterModel) SetUrls(v []string) {
	o.Urls = v
}

// GetOnlyWithoutLinks returns the OnlyWithoutLinks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemLinkFilterModel) GetOnlyWithoutLinks() bool {
	if o == nil || IsNil(o.OnlyWithoutLinks.Get()) {
		var ret bool
		return ret
	}
	return *o.OnlyWithoutLinks.Get()
}

// GetOnlyWithoutLinksOk returns a tuple with the OnlyWithoutLinks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemLinkFilterModel) GetOnlyWithoutLinksOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.OnlyWithoutLinks.Get(), o.OnlyWithoutLinks.IsSet()
}

// HasOnlyWithoutLinks returns a boolean if a field has been set.
func (o *WorkItemLinkFilterModel) HasOnlyWithoutLinks() bool {
	if o != nil && o.OnlyWithoutLinks.IsSet() {
		return true
	}

	return false
}

// SetOnlyWithoutLinks gets a reference to the given NullableBool and assigns it to the OnlyWithoutLinks field.
func (o *WorkItemLinkFilterModel) SetOnlyWithoutLinks(v bool) {
	o.OnlyWithoutLinks.Set(&v)
}
// SetOnlyWithoutLinksNil sets the value for OnlyWithoutLinks to be an explicit nil
func (o *WorkItemLinkFilterModel) SetOnlyWithoutLinksNil() {
	o.OnlyWithoutLinks.Set(nil)
}

// UnsetOnlyWithoutLinks ensures that no value is present for OnlyWithoutLinks, not even an explicit nil
func (o *WorkItemLinkFilterModel) UnsetOnlyWithoutLinks() {
	o.OnlyWithoutLinks.Unset()
}

func (o WorkItemLinkFilterModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkItemLinkFilterModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Types != nil {
		toSerialize["types"] = o.Types
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Urls != nil {
		toSerialize["urls"] = o.Urls
	}
	if o.OnlyWithoutLinks.IsSet() {
		toSerialize["onlyWithoutLinks"] = o.OnlyWithoutLinks.Get()
	}
	return toSerialize, nil
}

type NullableWorkItemLinkFilterModel struct {
	value *WorkItemLinkFilterModel
	isSet bool
}

func (v NullableWorkItemLinkFilterModel) Get() *WorkItemLinkFilterModel {
	return v.value
}

func (v *NullableWorkItemLinkFilterModel) Set(val *WorkItemLinkFilterModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkItemLinkFilterModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkItemLinkFilterModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkItemLinkFilterModel(val *WorkItemLinkFilterModel) *NullableWorkItemLinkFilterModel {
	return &NullableWorkItemLinkFilterModel{value: val, isSet: true}
}

func (v NullableWorkItemLinkFilterModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkItemLinkFilterModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


