/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"time"
)

// checks if the StepCommentModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StepCommentModel{}

// StepCommentModel struct for StepCommentModel
type StepCommentModel struct {
	Id *string `json:"id,omitempty"`
	Text NullableString `json:"text,omitempty"`
	StepId string `json:"stepId"`
	ParentStepId NullableString `json:"parentStepId,omitempty"`
	Attachments []AttachmentModel `json:"attachments,omitempty"`
	TestResultId string `json:"testResultId"`
	CreatedById *string `json:"createdById,omitempty"`
	ModifiedById NullableString `json:"modifiedById,omitempty"`
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	ModifiedDate NullableTime `json:"modifiedDate,omitempty"`
}

// NewStepCommentModel instantiates a new StepCommentModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStepCommentModel(stepId string, testResultId string) *StepCommentModel {
	this := StepCommentModel{}
	this.StepId = stepId
	this.TestResultId = testResultId
	return &this
}

// NewStepCommentModelWithDefaults instantiates a new StepCommentModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStepCommentModelWithDefaults() *StepCommentModel {
	this := StepCommentModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StepCommentModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StepCommentModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StepCommentModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *StepCommentModel) SetId(v string) {
	o.Id = &v
}

// GetText returns the Text field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StepCommentModel) GetText() string {
	if o == nil || IsNil(o.Text.Get()) {
		var ret string
		return ret
	}
	return *o.Text.Get()
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StepCommentModel) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Text.Get(), o.Text.IsSet()
}

// HasText returns a boolean if a field has been set.
func (o *StepCommentModel) HasText() bool {
	if o != nil && o.Text.IsSet() {
		return true
	}

	return false
}

// SetText gets a reference to the given NullableString and assigns it to the Text field.
func (o *StepCommentModel) SetText(v string) {
	o.Text.Set(&v)
}
// SetTextNil sets the value for Text to be an explicit nil
func (o *StepCommentModel) SetTextNil() {
	o.Text.Set(nil)
}

// UnsetText ensures that no value is present for Text, not even an explicit nil
func (o *StepCommentModel) UnsetText() {
	o.Text.Unset()
}

// GetStepId returns the StepId field value
func (o *StepCommentModel) GetStepId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StepId
}

// GetStepIdOk returns a tuple with the StepId field value
// and a boolean to check if the value has been set.
func (o *StepCommentModel) GetStepIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StepId, true
}

// SetStepId sets field value
func (o *StepCommentModel) SetStepId(v string) {
	o.StepId = v
}

// GetParentStepId returns the ParentStepId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StepCommentModel) GetParentStepId() string {
	if o == nil || IsNil(o.ParentStepId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentStepId.Get()
}

// GetParentStepIdOk returns a tuple with the ParentStepId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StepCommentModel) GetParentStepIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentStepId.Get(), o.ParentStepId.IsSet()
}

// HasParentStepId returns a boolean if a field has been set.
func (o *StepCommentModel) HasParentStepId() bool {
	if o != nil && o.ParentStepId.IsSet() {
		return true
	}

	return false
}

// SetParentStepId gets a reference to the given NullableString and assigns it to the ParentStepId field.
func (o *StepCommentModel) SetParentStepId(v string) {
	o.ParentStepId.Set(&v)
}
// SetParentStepIdNil sets the value for ParentStepId to be an explicit nil
func (o *StepCommentModel) SetParentStepIdNil() {
	o.ParentStepId.Set(nil)
}

// UnsetParentStepId ensures that no value is present for ParentStepId, not even an explicit nil
func (o *StepCommentModel) UnsetParentStepId() {
	o.ParentStepId.Unset()
}

// GetAttachments returns the Attachments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StepCommentModel) GetAttachments() []AttachmentModel {
	if o == nil {
		var ret []AttachmentModel
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StepCommentModel) GetAttachmentsOk() ([]AttachmentModel, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *StepCommentModel) HasAttachments() bool {
	if o != nil && IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []AttachmentModel and assigns it to the Attachments field.
func (o *StepCommentModel) SetAttachments(v []AttachmentModel) {
	o.Attachments = v
}

// GetTestResultId returns the TestResultId field value
func (o *StepCommentModel) GetTestResultId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TestResultId
}

// GetTestResultIdOk returns a tuple with the TestResultId field value
// and a boolean to check if the value has been set.
func (o *StepCommentModel) GetTestResultIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TestResultId, true
}

// SetTestResultId sets field value
func (o *StepCommentModel) SetTestResultId(v string) {
	o.TestResultId = v
}

// GetCreatedById returns the CreatedById field value if set, zero value otherwise.
func (o *StepCommentModel) GetCreatedById() string {
	if o == nil || IsNil(o.CreatedById) {
		var ret string
		return ret
	}
	return *o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StepCommentModel) GetCreatedByIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedById) {
		return nil, false
	}
	return o.CreatedById, true
}

// HasCreatedById returns a boolean if a field has been set.
func (o *StepCommentModel) HasCreatedById() bool {
	if o != nil && !IsNil(o.CreatedById) {
		return true
	}

	return false
}

// SetCreatedById gets a reference to the given string and assigns it to the CreatedById field.
func (o *StepCommentModel) SetCreatedById(v string) {
	o.CreatedById = &v
}

// GetModifiedById returns the ModifiedById field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StepCommentModel) GetModifiedById() string {
	if o == nil || IsNil(o.ModifiedById.Get()) {
		var ret string
		return ret
	}
	return *o.ModifiedById.Get()
}

// GetModifiedByIdOk returns a tuple with the ModifiedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StepCommentModel) GetModifiedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedById.Get(), o.ModifiedById.IsSet()
}

// HasModifiedById returns a boolean if a field has been set.
func (o *StepCommentModel) HasModifiedById() bool {
	if o != nil && o.ModifiedById.IsSet() {
		return true
	}

	return false
}

// SetModifiedById gets a reference to the given NullableString and assigns it to the ModifiedById field.
func (o *StepCommentModel) SetModifiedById(v string) {
	o.ModifiedById.Set(&v)
}
// SetModifiedByIdNil sets the value for ModifiedById to be an explicit nil
func (o *StepCommentModel) SetModifiedByIdNil() {
	o.ModifiedById.Set(nil)
}

// UnsetModifiedById ensures that no value is present for ModifiedById, not even an explicit nil
func (o *StepCommentModel) UnsetModifiedById() {
	o.ModifiedById.Unset()
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *StepCommentModel) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StepCommentModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *StepCommentModel) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *StepCommentModel) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *StepCommentModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate.Get()
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *StepCommentModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedDate.Get(), o.ModifiedDate.IsSet()
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *StepCommentModel) HasModifiedDate() bool {
	if o != nil && o.ModifiedDate.IsSet() {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given NullableTime and assigns it to the ModifiedDate field.
func (o *StepCommentModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate.Set(&v)
}
// SetModifiedDateNil sets the value for ModifiedDate to be an explicit nil
func (o *StepCommentModel) SetModifiedDateNil() {
	o.ModifiedDate.Set(nil)
}

// UnsetModifiedDate ensures that no value is present for ModifiedDate, not even an explicit nil
func (o *StepCommentModel) UnsetModifiedDate() {
	o.ModifiedDate.Unset()
}

func (o StepCommentModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StepCommentModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Text.IsSet() {
		toSerialize["text"] = o.Text.Get()
	}
	toSerialize["stepId"] = o.StepId
	if o.ParentStepId.IsSet() {
		toSerialize["parentStepId"] = o.ParentStepId.Get()
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	toSerialize["testResultId"] = o.TestResultId
	if !IsNil(o.CreatedById) {
		toSerialize["createdById"] = o.CreatedById
	}
	if o.ModifiedById.IsSet() {
		toSerialize["modifiedById"] = o.ModifiedById.Get()
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if o.ModifiedDate.IsSet() {
		toSerialize["modifiedDate"] = o.ModifiedDate.Get()
	}
	return toSerialize, nil
}

type NullableStepCommentModel struct {
	value *StepCommentModel
	isSet bool
}

func (v NullableStepCommentModel) Get() *StepCommentModel {
	return v.value
}

func (v *NullableStepCommentModel) Set(val *StepCommentModel) {
	v.value = val
	v.isSet = true
}

func (v NullableStepCommentModel) IsSet() bool {
	return v.isSet
}

func (v *NullableStepCommentModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStepCommentModel(val *StepCommentModel) *NullableStepCommentModel {
	return &NullableStepCommentModel{value: val, isSet: true}
}

func (v NullableStepCommentModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStepCommentModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


