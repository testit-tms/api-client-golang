/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the TestResultsFilterApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestResultsFilterApiModel{}

// TestResultsFilterApiModel struct for TestResultsFilterApiModel
type TestResultsFilterApiModel struct {
	// Specifies a test result configuration IDs to search for
	ConfigurationIds []string `json:"configurationIds,omitempty"`
	// Specifies a test result outcomes to search for
	// Deprecated
	Outcomes []TestResultOutcome `json:"outcomes,omitempty"`
	// Specifies a test result status codes to search for
	StatusCodes []string `json:"statusCodes,omitempty"`
	// Specifies a test result failure categories to search for
	FailureCategories []FailureCategoryModel `json:"failureCategories,omitempty"`
	// Specifies a test result namespace to search for
	Namespace NullableString `json:"namespace,omitempty"`
	// Specifies a test result class name to search for
	ClassName NullableString `json:"className,omitempty"`
	// Specifies an autotest global IDs to search results for
	AutoTestGlobalIds []int64 `json:"autoTestGlobalIds,omitempty"`
	// Specifies an autotest name to search results for
	Name NullableString `json:"name,omitempty"`
	// Specifies a test result creation date and time range to search for
	CreatedDate NullableDateTimeRangeSelectorModel `json:"createdDate,omitempty"`
	// Specifies a test result modified date and time range to search for
	ModifiedDate NullableDateTimeRangeSelectorModel `json:"modifiedDate,omitempty"`
	// Specifies a test result started on date and time range to search for
	StartedOn NullableDateTimeRangeSelectorModel `json:"startedOn,omitempty"`
	// Specifies a test result completed on date and time range to search for
	CompletedOn NullableDateTimeRangeSelectorModel `json:"completedOn,omitempty"`
	// Specifies a test result duration range to search for
	Duration NullableInt64RangeSelectorModel `json:"duration,omitempty"`
	// Specifies result reasons for searching test results
	ResultReasons []string `json:"resultReasons,omitempty"`
	// Specifies a test result test run IDs to search for
	TestRunIds []string `json:"testRunIds,omitempty"`
}

// NewTestResultsFilterApiModel instantiates a new TestResultsFilterApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestResultsFilterApiModel() *TestResultsFilterApiModel {
	this := TestResultsFilterApiModel{}
	return &this
}

// NewTestResultsFilterApiModelWithDefaults instantiates a new TestResultsFilterApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestResultsFilterApiModelWithDefaults() *TestResultsFilterApiModel {
	this := TestResultsFilterApiModel{}
	return &this
}

// GetConfigurationIds returns the ConfigurationIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultsFilterApiModel) GetConfigurationIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ConfigurationIds
}

// GetConfigurationIdsOk returns a tuple with the ConfigurationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultsFilterApiModel) GetConfigurationIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ConfigurationIds) {
		return nil, false
	}
	return o.ConfigurationIds, true
}

// HasConfigurationIds returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasConfigurationIds() bool {
	if o != nil && !IsNil(o.ConfigurationIds) {
		return true
	}

	return false
}

// SetConfigurationIds gets a reference to the given []string and assigns it to the ConfigurationIds field.
func (o *TestResultsFilterApiModel) SetConfigurationIds(v []string) {
	o.ConfigurationIds = v
}

// GetOutcomes returns the Outcomes field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *TestResultsFilterApiModel) GetOutcomes() []TestResultOutcome {
	if o == nil {
		var ret []TestResultOutcome
		return ret
	}
	return o.Outcomes
}

// GetOutcomesOk returns a tuple with the Outcomes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *TestResultsFilterApiModel) GetOutcomesOk() ([]TestResultOutcome, bool) {
	if o == nil || IsNil(o.Outcomes) {
		return nil, false
	}
	return o.Outcomes, true
}

// HasOutcomes returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasOutcomes() bool {
	if o != nil && !IsNil(o.Outcomes) {
		return true
	}

	return false
}

// SetOutcomes gets a reference to the given []TestResultOutcome and assigns it to the Outcomes field.
// Deprecated
func (o *TestResultsFilterApiModel) SetOutcomes(v []TestResultOutcome) {
	o.Outcomes = v
}

// GetStatusCodes returns the StatusCodes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultsFilterApiModel) GetStatusCodes() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.StatusCodes
}

// GetStatusCodesOk returns a tuple with the StatusCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultsFilterApiModel) GetStatusCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.StatusCodes) {
		return nil, false
	}
	return o.StatusCodes, true
}

// HasStatusCodes returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasStatusCodes() bool {
	if o != nil && !IsNil(o.StatusCodes) {
		return true
	}

	return false
}

// SetStatusCodes gets a reference to the given []string and assigns it to the StatusCodes field.
func (o *TestResultsFilterApiModel) SetStatusCodes(v []string) {
	o.StatusCodes = v
}

// GetFailureCategories returns the FailureCategories field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultsFilterApiModel) GetFailureCategories() []FailureCategoryModel {
	if o == nil {
		var ret []FailureCategoryModel
		return ret
	}
	return o.FailureCategories
}

// GetFailureCategoriesOk returns a tuple with the FailureCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultsFilterApiModel) GetFailureCategoriesOk() ([]FailureCategoryModel, bool) {
	if o == nil || IsNil(o.FailureCategories) {
		return nil, false
	}
	return o.FailureCategories, true
}

// HasFailureCategories returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasFailureCategories() bool {
	if o != nil && !IsNil(o.FailureCategories) {
		return true
	}

	return false
}

// SetFailureCategories gets a reference to the given []FailureCategoryModel and assigns it to the FailureCategories field.
func (o *TestResultsFilterApiModel) SetFailureCategories(v []FailureCategoryModel) {
	o.FailureCategories = v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultsFilterApiModel) GetNamespace() string {
	if o == nil || IsNil(o.Namespace.Get()) {
		var ret string
		return ret
	}
	return *o.Namespace.Get()
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultsFilterApiModel) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Namespace.Get(), o.Namespace.IsSet()
}

// HasNamespace returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasNamespace() bool {
	if o != nil && o.Namespace.IsSet() {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given NullableString and assigns it to the Namespace field.
func (o *TestResultsFilterApiModel) SetNamespace(v string) {
	o.Namespace.Set(&v)
}
// SetNamespaceNil sets the value for Namespace to be an explicit nil
func (o *TestResultsFilterApiModel) SetNamespaceNil() {
	o.Namespace.Set(nil)
}

// UnsetNamespace ensures that no value is present for Namespace, not even an explicit nil
func (o *TestResultsFilterApiModel) UnsetNamespace() {
	o.Namespace.Unset()
}

// GetClassName returns the ClassName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultsFilterApiModel) GetClassName() string {
	if o == nil || IsNil(o.ClassName.Get()) {
		var ret string
		return ret
	}
	return *o.ClassName.Get()
}

// GetClassNameOk returns a tuple with the ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultsFilterApiModel) GetClassNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClassName.Get(), o.ClassName.IsSet()
}

// HasClassName returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasClassName() bool {
	if o != nil && o.ClassName.IsSet() {
		return true
	}

	return false
}

// SetClassName gets a reference to the given NullableString and assigns it to the ClassName field.
func (o *TestResultsFilterApiModel) SetClassName(v string) {
	o.ClassName.Set(&v)
}
// SetClassNameNil sets the value for ClassName to be an explicit nil
func (o *TestResultsFilterApiModel) SetClassNameNil() {
	o.ClassName.Set(nil)
}

// UnsetClassName ensures that no value is present for ClassName, not even an explicit nil
func (o *TestResultsFilterApiModel) UnsetClassName() {
	o.ClassName.Unset()
}

// GetAutoTestGlobalIds returns the AutoTestGlobalIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultsFilterApiModel) GetAutoTestGlobalIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.AutoTestGlobalIds
}

// GetAutoTestGlobalIdsOk returns a tuple with the AutoTestGlobalIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultsFilterApiModel) GetAutoTestGlobalIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.AutoTestGlobalIds) {
		return nil, false
	}
	return o.AutoTestGlobalIds, true
}

// HasAutoTestGlobalIds returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasAutoTestGlobalIds() bool {
	if o != nil && !IsNil(o.AutoTestGlobalIds) {
		return true
	}

	return false
}

// SetAutoTestGlobalIds gets a reference to the given []int64 and assigns it to the AutoTestGlobalIds field.
func (o *TestResultsFilterApiModel) SetAutoTestGlobalIds(v []int64) {
	o.AutoTestGlobalIds = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultsFilterApiModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultsFilterApiModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *TestResultsFilterApiModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *TestResultsFilterApiModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *TestResultsFilterApiModel) UnsetName() {
	o.Name.Unset()
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultsFilterApiModel) GetCreatedDate() DateTimeRangeSelectorModel {
	if o == nil || IsNil(o.CreatedDate.Get()) {
		var ret DateTimeRangeSelectorModel
		return ret
	}
	return *o.CreatedDate.Get()
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultsFilterApiModel) GetCreatedDateOk() (*DateTimeRangeSelectorModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedDate.Get(), o.CreatedDate.IsSet()
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasCreatedDate() bool {
	if o != nil && o.CreatedDate.IsSet() {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given NullableDateTimeRangeSelectorModel and assigns it to the CreatedDate field.
func (o *TestResultsFilterApiModel) SetCreatedDate(v DateTimeRangeSelectorModel) {
	o.CreatedDate.Set(&v)
}
// SetCreatedDateNil sets the value for CreatedDate to be an explicit nil
func (o *TestResultsFilterApiModel) SetCreatedDateNil() {
	o.CreatedDate.Set(nil)
}

// UnsetCreatedDate ensures that no value is present for CreatedDate, not even an explicit nil
func (o *TestResultsFilterApiModel) UnsetCreatedDate() {
	o.CreatedDate.Unset()
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultsFilterApiModel) GetModifiedDate() DateTimeRangeSelectorModel {
	if o == nil || IsNil(o.ModifiedDate.Get()) {
		var ret DateTimeRangeSelectorModel
		return ret
	}
	return *o.ModifiedDate.Get()
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultsFilterApiModel) GetModifiedDateOk() (*DateTimeRangeSelectorModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedDate.Get(), o.ModifiedDate.IsSet()
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasModifiedDate() bool {
	if o != nil && o.ModifiedDate.IsSet() {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given NullableDateTimeRangeSelectorModel and assigns it to the ModifiedDate field.
func (o *TestResultsFilterApiModel) SetModifiedDate(v DateTimeRangeSelectorModel) {
	o.ModifiedDate.Set(&v)
}
// SetModifiedDateNil sets the value for ModifiedDate to be an explicit nil
func (o *TestResultsFilterApiModel) SetModifiedDateNil() {
	o.ModifiedDate.Set(nil)
}

// UnsetModifiedDate ensures that no value is present for ModifiedDate, not even an explicit nil
func (o *TestResultsFilterApiModel) UnsetModifiedDate() {
	o.ModifiedDate.Unset()
}

// GetStartedOn returns the StartedOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultsFilterApiModel) GetStartedOn() DateTimeRangeSelectorModel {
	if o == nil || IsNil(o.StartedOn.Get()) {
		var ret DateTimeRangeSelectorModel
		return ret
	}
	return *o.StartedOn.Get()
}

// GetStartedOnOk returns a tuple with the StartedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultsFilterApiModel) GetStartedOnOk() (*DateTimeRangeSelectorModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedOn.Get(), o.StartedOn.IsSet()
}

// HasStartedOn returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasStartedOn() bool {
	if o != nil && o.StartedOn.IsSet() {
		return true
	}

	return false
}

// SetStartedOn gets a reference to the given NullableDateTimeRangeSelectorModel and assigns it to the StartedOn field.
func (o *TestResultsFilterApiModel) SetStartedOn(v DateTimeRangeSelectorModel) {
	o.StartedOn.Set(&v)
}
// SetStartedOnNil sets the value for StartedOn to be an explicit nil
func (o *TestResultsFilterApiModel) SetStartedOnNil() {
	o.StartedOn.Set(nil)
}

// UnsetStartedOn ensures that no value is present for StartedOn, not even an explicit nil
func (o *TestResultsFilterApiModel) UnsetStartedOn() {
	o.StartedOn.Unset()
}

// GetCompletedOn returns the CompletedOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultsFilterApiModel) GetCompletedOn() DateTimeRangeSelectorModel {
	if o == nil || IsNil(o.CompletedOn.Get()) {
		var ret DateTimeRangeSelectorModel
		return ret
	}
	return *o.CompletedOn.Get()
}

// GetCompletedOnOk returns a tuple with the CompletedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultsFilterApiModel) GetCompletedOnOk() (*DateTimeRangeSelectorModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedOn.Get(), o.CompletedOn.IsSet()
}

// HasCompletedOn returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasCompletedOn() bool {
	if o != nil && o.CompletedOn.IsSet() {
		return true
	}

	return false
}

// SetCompletedOn gets a reference to the given NullableDateTimeRangeSelectorModel and assigns it to the CompletedOn field.
func (o *TestResultsFilterApiModel) SetCompletedOn(v DateTimeRangeSelectorModel) {
	o.CompletedOn.Set(&v)
}
// SetCompletedOnNil sets the value for CompletedOn to be an explicit nil
func (o *TestResultsFilterApiModel) SetCompletedOnNil() {
	o.CompletedOn.Set(nil)
}

// UnsetCompletedOn ensures that no value is present for CompletedOn, not even an explicit nil
func (o *TestResultsFilterApiModel) UnsetCompletedOn() {
	o.CompletedOn.Unset()
}

// GetDuration returns the Duration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultsFilterApiModel) GetDuration() Int64RangeSelectorModel {
	if o == nil || IsNil(o.Duration.Get()) {
		var ret Int64RangeSelectorModel
		return ret
	}
	return *o.Duration.Get()
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultsFilterApiModel) GetDurationOk() (*Int64RangeSelectorModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duration.Get(), o.Duration.IsSet()
}

// HasDuration returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasDuration() bool {
	if o != nil && o.Duration.IsSet() {
		return true
	}

	return false
}

// SetDuration gets a reference to the given NullableInt64RangeSelectorModel and assigns it to the Duration field.
func (o *TestResultsFilterApiModel) SetDuration(v Int64RangeSelectorModel) {
	o.Duration.Set(&v)
}
// SetDurationNil sets the value for Duration to be an explicit nil
func (o *TestResultsFilterApiModel) SetDurationNil() {
	o.Duration.Set(nil)
}

// UnsetDuration ensures that no value is present for Duration, not even an explicit nil
func (o *TestResultsFilterApiModel) UnsetDuration() {
	o.Duration.Unset()
}

// GetResultReasons returns the ResultReasons field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultsFilterApiModel) GetResultReasons() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ResultReasons
}

// GetResultReasonsOk returns a tuple with the ResultReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultsFilterApiModel) GetResultReasonsOk() ([]string, bool) {
	if o == nil || IsNil(o.ResultReasons) {
		return nil, false
	}
	return o.ResultReasons, true
}

// HasResultReasons returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasResultReasons() bool {
	if o != nil && !IsNil(o.ResultReasons) {
		return true
	}

	return false
}

// SetResultReasons gets a reference to the given []string and assigns it to the ResultReasons field.
func (o *TestResultsFilterApiModel) SetResultReasons(v []string) {
	o.ResultReasons = v
}

// GetTestRunIds returns the TestRunIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultsFilterApiModel) GetTestRunIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.TestRunIds
}

// GetTestRunIdsOk returns a tuple with the TestRunIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultsFilterApiModel) GetTestRunIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TestRunIds) {
		return nil, false
	}
	return o.TestRunIds, true
}

// HasTestRunIds returns a boolean if a field has been set.
func (o *TestResultsFilterApiModel) HasTestRunIds() bool {
	if o != nil && !IsNil(o.TestRunIds) {
		return true
	}

	return false
}

// SetTestRunIds gets a reference to the given []string and assigns it to the TestRunIds field.
func (o *TestResultsFilterApiModel) SetTestRunIds(v []string) {
	o.TestRunIds = v
}

func (o TestResultsFilterApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestResultsFilterApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ConfigurationIds != nil {
		toSerialize["configurationIds"] = o.ConfigurationIds
	}
	if o.Outcomes != nil {
		toSerialize["outcomes"] = o.Outcomes
	}
	if o.StatusCodes != nil {
		toSerialize["statusCodes"] = o.StatusCodes
	}
	if o.FailureCategories != nil {
		toSerialize["failureCategories"] = o.FailureCategories
	}
	if o.Namespace.IsSet() {
		toSerialize["namespace"] = o.Namespace.Get()
	}
	if o.ClassName.IsSet() {
		toSerialize["className"] = o.ClassName.Get()
	}
	if o.AutoTestGlobalIds != nil {
		toSerialize["autoTestGlobalIds"] = o.AutoTestGlobalIds
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.CreatedDate.IsSet() {
		toSerialize["createdDate"] = o.CreatedDate.Get()
	}
	if o.ModifiedDate.IsSet() {
		toSerialize["modifiedDate"] = o.ModifiedDate.Get()
	}
	if o.StartedOn.IsSet() {
		toSerialize["startedOn"] = o.StartedOn.Get()
	}
	if o.CompletedOn.IsSet() {
		toSerialize["completedOn"] = o.CompletedOn.Get()
	}
	if o.Duration.IsSet() {
		toSerialize["duration"] = o.Duration.Get()
	}
	if o.ResultReasons != nil {
		toSerialize["resultReasons"] = o.ResultReasons
	}
	if o.TestRunIds != nil {
		toSerialize["testRunIds"] = o.TestRunIds
	}
	return toSerialize, nil
}

type NullableTestResultsFilterApiModel struct {
	value *TestResultsFilterApiModel
	isSet bool
}

func (v NullableTestResultsFilterApiModel) Get() *TestResultsFilterApiModel {
	return v.value
}

func (v *NullableTestResultsFilterApiModel) Set(val *TestResultsFilterApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestResultsFilterApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestResultsFilterApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestResultsFilterApiModel(val *TestResultsFilterApiModel) *NullableTestResultsFilterApiModel {
	return &NullableTestResultsFilterApiModel{value: val, isSet: true}
}

func (v NullableTestResultsFilterApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestResultsFilterApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


