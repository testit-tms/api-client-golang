/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhooksUpdateApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhooksUpdateApiModel{}

// WebhooksUpdateApiModel struct for WebhooksUpdateApiModel
type WebhooksUpdateApiModel struct {
	Filter WebhooksFilterApiModel `json:"filter"`
	Model WebhookBulkUpdateApiModel `json:"model"`
	Extractor WebhooksExtractionApiModel `json:"extractor"`
}

type _WebhooksUpdateApiModel WebhooksUpdateApiModel

// NewWebhooksUpdateApiModel instantiates a new WebhooksUpdateApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhooksUpdateApiModel(filter WebhooksFilterApiModel, model WebhookBulkUpdateApiModel, extractor WebhooksExtractionApiModel) *WebhooksUpdateApiModel {
	this := WebhooksUpdateApiModel{}
	this.Filter = filter
	this.Model = model
	this.Extractor = extractor
	return &this
}

// NewWebhooksUpdateApiModelWithDefaults instantiates a new WebhooksUpdateApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhooksUpdateApiModelWithDefaults() *WebhooksUpdateApiModel {
	this := WebhooksUpdateApiModel{}
	return &this
}

// GetFilter returns the Filter field value
func (o *WebhooksUpdateApiModel) GetFilter() WebhooksFilterApiModel {
	if o == nil {
		var ret WebhooksFilterApiModel
		return ret
	}

	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value
// and a boolean to check if the value has been set.
func (o *WebhooksUpdateApiModel) GetFilterOk() (*WebhooksFilterApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filter, true
}

// SetFilter sets field value
func (o *WebhooksUpdateApiModel) SetFilter(v WebhooksFilterApiModel) {
	o.Filter = v
}

// GetModel returns the Model field value
func (o *WebhooksUpdateApiModel) GetModel() WebhookBulkUpdateApiModel {
	if o == nil {
		var ret WebhookBulkUpdateApiModel
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *WebhooksUpdateApiModel) GetModelOk() (*WebhookBulkUpdateApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *WebhooksUpdateApiModel) SetModel(v WebhookBulkUpdateApiModel) {
	o.Model = v
}

// GetExtractor returns the Extractor field value
func (o *WebhooksUpdateApiModel) GetExtractor() WebhooksExtractionApiModel {
	if o == nil {
		var ret WebhooksExtractionApiModel
		return ret
	}

	return o.Extractor
}

// GetExtractorOk returns a tuple with the Extractor field value
// and a boolean to check if the value has been set.
func (o *WebhooksUpdateApiModel) GetExtractorOk() (*WebhooksExtractionApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Extractor, true
}

// SetExtractor sets field value
func (o *WebhooksUpdateApiModel) SetExtractor(v WebhooksExtractionApiModel) {
	o.Extractor = v
}

func (o WebhooksUpdateApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhooksUpdateApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["filter"] = o.Filter
	toSerialize["model"] = o.Model
	toSerialize["extractor"] = o.Extractor
	return toSerialize, nil
}

func (o *WebhooksUpdateApiModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"filter",
		"model",
		"extractor",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhooksUpdateApiModel := _WebhooksUpdateApiModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhooksUpdateApiModel)

	if err != nil {
		return err
	}

	*o = WebhooksUpdateApiModel(varWebhooksUpdateApiModel)

	return err
}

type NullableWebhooksUpdateApiModel struct {
	value *WebhooksUpdateApiModel
	isSet bool
}

func (v NullableWebhooksUpdateApiModel) Get() *WebhooksUpdateApiModel {
	return v.value
}

func (v *NullableWebhooksUpdateApiModel) Set(val *WebhooksUpdateApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhooksUpdateApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhooksUpdateApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhooksUpdateApiModel(val *WebhooksUpdateApiModel) *NullableWebhooksUpdateApiModel {
	return &NullableWebhooksUpdateApiModel{value: val, isSet: true}
}

func (v NullableWebhooksUpdateApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhooksUpdateApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


