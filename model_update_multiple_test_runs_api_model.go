/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateMultipleTestRunsApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMultipleTestRunsApiModel{}

// UpdateMultipleTestRunsApiModel struct for UpdateMultipleTestRunsApiModel
type UpdateMultipleTestRunsApiModel struct {
	// Test run selection model
	SelectModel TestRunSelectApiModel `json:"selectModel"`
	// Test run description
	Description NullableString `json:"description,omitempty"`
	// Set of attachment ids
	AttachmentUpdateScheme NullableUpdateMultipleAttachmentsApiModel `json:"attachmentUpdateScheme,omitempty"`
	// Set of links
	LinkUpdateScheme NullableUpdateMultipleLinksApiModel `json:"linkUpdateScheme,omitempty"`
}

type _UpdateMultipleTestRunsApiModel UpdateMultipleTestRunsApiModel

// NewUpdateMultipleTestRunsApiModel instantiates a new UpdateMultipleTestRunsApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMultipleTestRunsApiModel(selectModel TestRunSelectApiModel) *UpdateMultipleTestRunsApiModel {
	this := UpdateMultipleTestRunsApiModel{}
	this.SelectModel = selectModel
	return &this
}

// NewUpdateMultipleTestRunsApiModelWithDefaults instantiates a new UpdateMultipleTestRunsApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMultipleTestRunsApiModelWithDefaults() *UpdateMultipleTestRunsApiModel {
	this := UpdateMultipleTestRunsApiModel{}
	return &this
}

// GetSelectModel returns the SelectModel field value
func (o *UpdateMultipleTestRunsApiModel) GetSelectModel() TestRunSelectApiModel {
	if o == nil {
		var ret TestRunSelectApiModel
		return ret
	}

	return o.SelectModel
}

// GetSelectModelOk returns a tuple with the SelectModel field value
// and a boolean to check if the value has been set.
func (o *UpdateMultipleTestRunsApiModel) GetSelectModelOk() (*TestRunSelectApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SelectModel, true
}

// SetSelectModel sets field value
func (o *UpdateMultipleTestRunsApiModel) SetSelectModel(v TestRunSelectApiModel) {
	o.SelectModel = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMultipleTestRunsApiModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMultipleTestRunsApiModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateMultipleTestRunsApiModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *UpdateMultipleTestRunsApiModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *UpdateMultipleTestRunsApiModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *UpdateMultipleTestRunsApiModel) UnsetDescription() {
	o.Description.Unset()
}

// GetAttachmentUpdateScheme returns the AttachmentUpdateScheme field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMultipleTestRunsApiModel) GetAttachmentUpdateScheme() UpdateMultipleAttachmentsApiModel {
	if o == nil || IsNil(o.AttachmentUpdateScheme.Get()) {
		var ret UpdateMultipleAttachmentsApiModel
		return ret
	}
	return *o.AttachmentUpdateScheme.Get()
}

// GetAttachmentUpdateSchemeOk returns a tuple with the AttachmentUpdateScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMultipleTestRunsApiModel) GetAttachmentUpdateSchemeOk() (*UpdateMultipleAttachmentsApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttachmentUpdateScheme.Get(), o.AttachmentUpdateScheme.IsSet()
}

// HasAttachmentUpdateScheme returns a boolean if a field has been set.
func (o *UpdateMultipleTestRunsApiModel) HasAttachmentUpdateScheme() bool {
	if o != nil && o.AttachmentUpdateScheme.IsSet() {
		return true
	}

	return false
}

// SetAttachmentUpdateScheme gets a reference to the given NullableUpdateMultipleAttachmentsApiModel and assigns it to the AttachmentUpdateScheme field.
func (o *UpdateMultipleTestRunsApiModel) SetAttachmentUpdateScheme(v UpdateMultipleAttachmentsApiModel) {
	o.AttachmentUpdateScheme.Set(&v)
}
// SetAttachmentUpdateSchemeNil sets the value for AttachmentUpdateScheme to be an explicit nil
func (o *UpdateMultipleTestRunsApiModel) SetAttachmentUpdateSchemeNil() {
	o.AttachmentUpdateScheme.Set(nil)
}

// UnsetAttachmentUpdateScheme ensures that no value is present for AttachmentUpdateScheme, not even an explicit nil
func (o *UpdateMultipleTestRunsApiModel) UnsetAttachmentUpdateScheme() {
	o.AttachmentUpdateScheme.Unset()
}

// GetLinkUpdateScheme returns the LinkUpdateScheme field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateMultipleTestRunsApiModel) GetLinkUpdateScheme() UpdateMultipleLinksApiModel {
	if o == nil || IsNil(o.LinkUpdateScheme.Get()) {
		var ret UpdateMultipleLinksApiModel
		return ret
	}
	return *o.LinkUpdateScheme.Get()
}

// GetLinkUpdateSchemeOk returns a tuple with the LinkUpdateScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateMultipleTestRunsApiModel) GetLinkUpdateSchemeOk() (*UpdateMultipleLinksApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.LinkUpdateScheme.Get(), o.LinkUpdateScheme.IsSet()
}

// HasLinkUpdateScheme returns a boolean if a field has been set.
func (o *UpdateMultipleTestRunsApiModel) HasLinkUpdateScheme() bool {
	if o != nil && o.LinkUpdateScheme.IsSet() {
		return true
	}

	return false
}

// SetLinkUpdateScheme gets a reference to the given NullableUpdateMultipleLinksApiModel and assigns it to the LinkUpdateScheme field.
func (o *UpdateMultipleTestRunsApiModel) SetLinkUpdateScheme(v UpdateMultipleLinksApiModel) {
	o.LinkUpdateScheme.Set(&v)
}
// SetLinkUpdateSchemeNil sets the value for LinkUpdateScheme to be an explicit nil
func (o *UpdateMultipleTestRunsApiModel) SetLinkUpdateSchemeNil() {
	o.LinkUpdateScheme.Set(nil)
}

// UnsetLinkUpdateScheme ensures that no value is present for LinkUpdateScheme, not even an explicit nil
func (o *UpdateMultipleTestRunsApiModel) UnsetLinkUpdateScheme() {
	o.LinkUpdateScheme.Unset()
}

func (o UpdateMultipleTestRunsApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMultipleTestRunsApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["selectModel"] = o.SelectModel
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.AttachmentUpdateScheme.IsSet() {
		toSerialize["attachmentUpdateScheme"] = o.AttachmentUpdateScheme.Get()
	}
	if o.LinkUpdateScheme.IsSet() {
		toSerialize["linkUpdateScheme"] = o.LinkUpdateScheme.Get()
	}
	return toSerialize, nil
}

func (o *UpdateMultipleTestRunsApiModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"selectModel",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateMultipleTestRunsApiModel := _UpdateMultipleTestRunsApiModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateMultipleTestRunsApiModel)

	if err != nil {
		return err
	}

	*o = UpdateMultipleTestRunsApiModel(varUpdateMultipleTestRunsApiModel)

	return err
}

type NullableUpdateMultipleTestRunsApiModel struct {
	value *UpdateMultipleTestRunsApiModel
	isSet bool
}

func (v NullableUpdateMultipleTestRunsApiModel) Get() *UpdateMultipleTestRunsApiModel {
	return v.value
}

func (v *NullableUpdateMultipleTestRunsApiModel) Set(val *UpdateMultipleTestRunsApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMultipleTestRunsApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMultipleTestRunsApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMultipleTestRunsApiModel(val *UpdateMultipleTestRunsApiModel) *NullableUpdateMultipleTestRunsApiModel {
	return &NullableUpdateMultipleTestRunsApiModel{value: val, isSet: true}
}

func (v NullableUpdateMultipleTestRunsApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMultipleTestRunsApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


