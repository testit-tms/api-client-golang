/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AutoTestStep type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoTestStep{}

// AutoTestStep struct for AutoTestStep
type AutoTestStep struct {
	// Step name.
	Title string `json:"title"`
	// Detailed step description. It appears when the step is unfolded.
	Description NullableString `json:"description,omitempty"`
	// Includes a nested step inside another step. The maximum nesting level is 15.
	Steps []AutoTestStep `json:"steps,omitempty"`
}

type _AutoTestStep AutoTestStep

// NewAutoTestStep instantiates a new AutoTestStep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoTestStep(title string) *AutoTestStep {
	this := AutoTestStep{}
	this.Title = title
	return &this
}

// NewAutoTestStepWithDefaults instantiates a new AutoTestStep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoTestStepWithDefaults() *AutoTestStep {
	this := AutoTestStep{}
	return &this
}

// GetTitle returns the Title field value
func (o *AutoTestStep) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *AutoTestStep) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *AutoTestStep) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestStep) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestStep) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AutoTestStep) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AutoTestStep) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AutoTestStep) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AutoTestStep) UnsetDescription() {
	o.Description.Unset()
}

// GetSteps returns the Steps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestStep) GetSteps() []AutoTestStep {
	if o == nil {
		var ret []AutoTestStep
		return ret
	}
	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestStep) GetStepsOk() ([]AutoTestStep, bool) {
	if o == nil || IsNil(o.Steps) {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *AutoTestStep) HasSteps() bool {
	if o != nil && !IsNil(o.Steps) {
		return true
	}

	return false
}

// SetSteps gets a reference to the given []AutoTestStep and assigns it to the Steps field.
func (o *AutoTestStep) SetSteps(v []AutoTestStep) {
	o.Steps = v
}

func (o AutoTestStep) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoTestStep) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Steps != nil {
		toSerialize["steps"] = o.Steps
	}
	return toSerialize, nil
}

func (o *AutoTestStep) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoTestStep := _AutoTestStep{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoTestStep)

	if err != nil {
		return err
	}

	*o = AutoTestStep(varAutoTestStep)

	return err
}

type NullableAutoTestStep struct {
	value *AutoTestStep
	isSet bool
}

func (v NullableAutoTestStep) Get() *AutoTestStep {
	return v.value
}

func (v *NullableAutoTestStep) Set(val *AutoTestStep) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoTestStep) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoTestStep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoTestStep(val *AutoTestStep) *NullableAutoTestStep {
	return &NullableAutoTestStep{value: val, isSet: true}
}

func (v NullableAutoTestStep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoTestStep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


