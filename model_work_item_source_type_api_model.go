/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"fmt"
)

// WorkItemSourceTypeApiModel the model 'WorkItemSourceTypeApiModel'
type WorkItemSourceTypeApiModel string

// List of WorkItemSourceTypeApiModel
const (
	WORKITEMSOURCETYPEAPIMODEL_MANUAL WorkItemSourceTypeApiModel = "Manual"
	WORKITEMSOURCETYPEAPIMODEL_AI WorkItemSourceTypeApiModel = "AI"
)

// All allowed values of WorkItemSourceTypeApiModel enum
var AllowedWorkItemSourceTypeApiModelEnumValues = []WorkItemSourceTypeApiModel{
	"Manual",
	"AI",
}

func (v *WorkItemSourceTypeApiModel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WorkItemSourceTypeApiModel(value)
	for _, existing := range AllowedWorkItemSourceTypeApiModelEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WorkItemSourceTypeApiModel", value)
}

// NewWorkItemSourceTypeApiModelFromValue returns a pointer to a valid WorkItemSourceTypeApiModel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWorkItemSourceTypeApiModelFromValue(v string) (*WorkItemSourceTypeApiModel, error) {
	ev := WorkItemSourceTypeApiModel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WorkItemSourceTypeApiModel: valid values are %v", v, AllowedWorkItemSourceTypeApiModelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WorkItemSourceTypeApiModel) IsValid() bool {
	for _, existing := range AllowedWorkItemSourceTypeApiModelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WorkItemSourceTypeApiModel value
func (v WorkItemSourceTypeApiModel) Ptr() *WorkItemSourceTypeApiModel {
	return &v
}

type NullableWorkItemSourceTypeApiModel struct {
	value *WorkItemSourceTypeApiModel
	isSet bool
}

func (v NullableWorkItemSourceTypeApiModel) Get() *WorkItemSourceTypeApiModel {
	return v.value
}

func (v *NullableWorkItemSourceTypeApiModel) Set(val *WorkItemSourceTypeApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkItemSourceTypeApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkItemSourceTypeApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkItemSourceTypeApiModel(val *WorkItemSourceTypeApiModel) *NullableWorkItemSourceTypeApiModel {
	return &NullableWorkItemSourceTypeApiModel{value: val, isSet: true}
}

func (v NullableWorkItemSourceTypeApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkItemSourceTypeApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

