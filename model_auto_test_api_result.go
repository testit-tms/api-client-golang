/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AutoTestApiResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoTestApiResult{}

// AutoTestApiResult struct for AutoTestApiResult
type AutoTestApiResult struct {
	Id string `json:"id"`
	ProjectId string `json:"projectId"`
	ExternalId NullableString `json:"externalId,omitempty"`
	Name string `json:"name"`
	Namespace NullableString `json:"namespace,omitempty"`
	Classname NullableString `json:"classname,omitempty"`
	Steps []AutoTestStepApiResult `json:"steps,omitempty"`
	Setup []AutoTestStepApiResult `json:"setup,omitempty"`
	Teardown []AutoTestStepApiResult `json:"teardown,omitempty"`
	Title NullableString `json:"title,omitempty"`
	Description NullableString `json:"description,omitempty"`
	IsFlaky bool `json:"isFlaky"`
	ExternalKey NullableString `json:"externalKey,omitempty"`
	GlobalId int64 `json:"globalId"`
	IsDeleted bool `json:"isDeleted"`
	MustBeApproved bool `json:"mustBeApproved"`
	CreatedDate time.Time `json:"createdDate"`
	ModifiedDate NullableTime `json:"modifiedDate,omitempty"`
	CreatedById string `json:"createdById"`
	ModifiedById NullableString `json:"modifiedById,omitempty"`
	LastTestRunId NullableString `json:"lastTestRunId,omitempty"`
	LastTestRunName NullableString `json:"lastTestRunName,omitempty"`
	LastTestResultId NullableString `json:"lastTestResultId,omitempty"`
	LastTestResultConfiguration NullableConfigurationShortApiResult `json:"lastTestResultConfiguration,omitempty"`
	LastTestResultOutcome NullableString `json:"lastTestResultOutcome,omitempty"`
	LastTestResultStatus NullableTestStatusApiResult `json:"lastTestResultStatus,omitempty"`
	StabilityPercentage NullableInt64 `json:"stabilityPercentage,omitempty"`
	Links []LinkApiResult `json:"links,omitempty"`
	Labels []LabelApiResult `json:"labels,omitempty"`
}

type _AutoTestApiResult AutoTestApiResult

// NewAutoTestApiResult instantiates a new AutoTestApiResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoTestApiResult(id string, projectId string, name string, isFlaky bool, globalId int64, isDeleted bool, mustBeApproved bool, createdDate time.Time, createdById string) *AutoTestApiResult {
	this := AutoTestApiResult{}
	this.Id = id
	this.ProjectId = projectId
	this.Name = name
	this.IsFlaky = isFlaky
	this.GlobalId = globalId
	this.IsDeleted = isDeleted
	this.MustBeApproved = mustBeApproved
	this.CreatedDate = createdDate
	this.CreatedById = createdById
	return &this
}

// NewAutoTestApiResultWithDefaults instantiates a new AutoTestApiResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoTestApiResultWithDefaults() *AutoTestApiResult {
	this := AutoTestApiResult{}
	return &this
}

// GetId returns the Id field value
func (o *AutoTestApiResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AutoTestApiResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AutoTestApiResult) SetId(v string) {
	o.Id = v
}

// GetProjectId returns the ProjectId field value
func (o *AutoTestApiResult) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *AutoTestApiResult) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *AutoTestApiResult) SetProjectId(v string) {
	o.ProjectId = v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *AutoTestApiResult) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *AutoTestApiResult) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *AutoTestApiResult) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetName returns the Name field value
func (o *AutoTestApiResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AutoTestApiResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AutoTestApiResult) SetName(v string) {
	o.Name = v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetNamespace() string {
	if o == nil || IsNil(o.Namespace.Get()) {
		var ret string
		return ret
	}
	return *o.Namespace.Get()
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Namespace.Get(), o.Namespace.IsSet()
}

// HasNamespace returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasNamespace() bool {
	if o != nil && o.Namespace.IsSet() {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given NullableString and assigns it to the Namespace field.
func (o *AutoTestApiResult) SetNamespace(v string) {
	o.Namespace.Set(&v)
}
// SetNamespaceNil sets the value for Namespace to be an explicit nil
func (o *AutoTestApiResult) SetNamespaceNil() {
	o.Namespace.Set(nil)
}

// UnsetNamespace ensures that no value is present for Namespace, not even an explicit nil
func (o *AutoTestApiResult) UnsetNamespace() {
	o.Namespace.Unset()
}

// GetClassname returns the Classname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetClassname() string {
	if o == nil || IsNil(o.Classname.Get()) {
		var ret string
		return ret
	}
	return *o.Classname.Get()
}

// GetClassnameOk returns a tuple with the Classname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetClassnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Classname.Get(), o.Classname.IsSet()
}

// HasClassname returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasClassname() bool {
	if o != nil && o.Classname.IsSet() {
		return true
	}

	return false
}

// SetClassname gets a reference to the given NullableString and assigns it to the Classname field.
func (o *AutoTestApiResult) SetClassname(v string) {
	o.Classname.Set(&v)
}
// SetClassnameNil sets the value for Classname to be an explicit nil
func (o *AutoTestApiResult) SetClassnameNil() {
	o.Classname.Set(nil)
}

// UnsetClassname ensures that no value is present for Classname, not even an explicit nil
func (o *AutoTestApiResult) UnsetClassname() {
	o.Classname.Unset()
}

// GetSteps returns the Steps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetSteps() []AutoTestStepApiResult {
	if o == nil {
		var ret []AutoTestStepApiResult
		return ret
	}
	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetStepsOk() ([]AutoTestStepApiResult, bool) {
	if o == nil || IsNil(o.Steps) {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasSteps() bool {
	if o != nil && !IsNil(o.Steps) {
		return true
	}

	return false
}

// SetSteps gets a reference to the given []AutoTestStepApiResult and assigns it to the Steps field.
func (o *AutoTestApiResult) SetSteps(v []AutoTestStepApiResult) {
	o.Steps = v
}

// GetSetup returns the Setup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetSetup() []AutoTestStepApiResult {
	if o == nil {
		var ret []AutoTestStepApiResult
		return ret
	}
	return o.Setup
}

// GetSetupOk returns a tuple with the Setup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetSetupOk() ([]AutoTestStepApiResult, bool) {
	if o == nil || IsNil(o.Setup) {
		return nil, false
	}
	return o.Setup, true
}

// HasSetup returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasSetup() bool {
	if o != nil && !IsNil(o.Setup) {
		return true
	}

	return false
}

// SetSetup gets a reference to the given []AutoTestStepApiResult and assigns it to the Setup field.
func (o *AutoTestApiResult) SetSetup(v []AutoTestStepApiResult) {
	o.Setup = v
}

// GetTeardown returns the Teardown field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetTeardown() []AutoTestStepApiResult {
	if o == nil {
		var ret []AutoTestStepApiResult
		return ret
	}
	return o.Teardown
}

// GetTeardownOk returns a tuple with the Teardown field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetTeardownOk() ([]AutoTestStepApiResult, bool) {
	if o == nil || IsNil(o.Teardown) {
		return nil, false
	}
	return o.Teardown, true
}

// HasTeardown returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasTeardown() bool {
	if o != nil && !IsNil(o.Teardown) {
		return true
	}

	return false
}

// SetTeardown gets a reference to the given []AutoTestStepApiResult and assigns it to the Teardown field.
func (o *AutoTestApiResult) SetTeardown(v []AutoTestStepApiResult) {
	o.Teardown = v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *AutoTestApiResult) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *AutoTestApiResult) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *AutoTestApiResult) UnsetTitle() {
	o.Title.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *AutoTestApiResult) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *AutoTestApiResult) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *AutoTestApiResult) UnsetDescription() {
	o.Description.Unset()
}

// GetIsFlaky returns the IsFlaky field value
func (o *AutoTestApiResult) GetIsFlaky() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsFlaky
}

// GetIsFlakyOk returns a tuple with the IsFlaky field value
// and a boolean to check if the value has been set.
func (o *AutoTestApiResult) GetIsFlakyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsFlaky, true
}

// SetIsFlaky sets field value
func (o *AutoTestApiResult) SetIsFlaky(v bool) {
	o.IsFlaky = v
}

// GetExternalKey returns the ExternalKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetExternalKey() string {
	if o == nil || IsNil(o.ExternalKey.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalKey.Get()
}

// GetExternalKeyOk returns a tuple with the ExternalKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetExternalKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalKey.Get(), o.ExternalKey.IsSet()
}

// HasExternalKey returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasExternalKey() bool {
	if o != nil && o.ExternalKey.IsSet() {
		return true
	}

	return false
}

// SetExternalKey gets a reference to the given NullableString and assigns it to the ExternalKey field.
func (o *AutoTestApiResult) SetExternalKey(v string) {
	o.ExternalKey.Set(&v)
}
// SetExternalKeyNil sets the value for ExternalKey to be an explicit nil
func (o *AutoTestApiResult) SetExternalKeyNil() {
	o.ExternalKey.Set(nil)
}

// UnsetExternalKey ensures that no value is present for ExternalKey, not even an explicit nil
func (o *AutoTestApiResult) UnsetExternalKey() {
	o.ExternalKey.Unset()
}

// GetGlobalId returns the GlobalId field value
func (o *AutoTestApiResult) GetGlobalId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.GlobalId
}

// GetGlobalIdOk returns a tuple with the GlobalId field value
// and a boolean to check if the value has been set.
func (o *AutoTestApiResult) GetGlobalIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GlobalId, true
}

// SetGlobalId sets field value
func (o *AutoTestApiResult) SetGlobalId(v int64) {
	o.GlobalId = v
}

// GetIsDeleted returns the IsDeleted field value
func (o *AutoTestApiResult) GetIsDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value
// and a boolean to check if the value has been set.
func (o *AutoTestApiResult) GetIsDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDeleted, true
}

// SetIsDeleted sets field value
func (o *AutoTestApiResult) SetIsDeleted(v bool) {
	o.IsDeleted = v
}

// GetMustBeApproved returns the MustBeApproved field value
func (o *AutoTestApiResult) GetMustBeApproved() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MustBeApproved
}

// GetMustBeApprovedOk returns a tuple with the MustBeApproved field value
// and a boolean to check if the value has been set.
func (o *AutoTestApiResult) GetMustBeApprovedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MustBeApproved, true
}

// SetMustBeApproved sets field value
func (o *AutoTestApiResult) SetMustBeApproved(v bool) {
	o.MustBeApproved = v
}

// GetCreatedDate returns the CreatedDate field value
func (o *AutoTestApiResult) GetCreatedDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value
// and a boolean to check if the value has been set.
func (o *AutoTestApiResult) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedDate, true
}

// SetCreatedDate sets field value
func (o *AutoTestApiResult) SetCreatedDate(v time.Time) {
	o.CreatedDate = v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate.Get()
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedDate.Get(), o.ModifiedDate.IsSet()
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasModifiedDate() bool {
	if o != nil && o.ModifiedDate.IsSet() {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given NullableTime and assigns it to the ModifiedDate field.
func (o *AutoTestApiResult) SetModifiedDate(v time.Time) {
	o.ModifiedDate.Set(&v)
}
// SetModifiedDateNil sets the value for ModifiedDate to be an explicit nil
func (o *AutoTestApiResult) SetModifiedDateNil() {
	o.ModifiedDate.Set(nil)
}

// UnsetModifiedDate ensures that no value is present for ModifiedDate, not even an explicit nil
func (o *AutoTestApiResult) UnsetModifiedDate() {
	o.ModifiedDate.Unset()
}

// GetCreatedById returns the CreatedById field value
func (o *AutoTestApiResult) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *AutoTestApiResult) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *AutoTestApiResult) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetModifiedById returns the ModifiedById field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetModifiedById() string {
	if o == nil || IsNil(o.ModifiedById.Get()) {
		var ret string
		return ret
	}
	return *o.ModifiedById.Get()
}

// GetModifiedByIdOk returns a tuple with the ModifiedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetModifiedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedById.Get(), o.ModifiedById.IsSet()
}

// HasModifiedById returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasModifiedById() bool {
	if o != nil && o.ModifiedById.IsSet() {
		return true
	}

	return false
}

// SetModifiedById gets a reference to the given NullableString and assigns it to the ModifiedById field.
func (o *AutoTestApiResult) SetModifiedById(v string) {
	o.ModifiedById.Set(&v)
}
// SetModifiedByIdNil sets the value for ModifiedById to be an explicit nil
func (o *AutoTestApiResult) SetModifiedByIdNil() {
	o.ModifiedById.Set(nil)
}

// UnsetModifiedById ensures that no value is present for ModifiedById, not even an explicit nil
func (o *AutoTestApiResult) UnsetModifiedById() {
	o.ModifiedById.Unset()
}

// GetLastTestRunId returns the LastTestRunId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetLastTestRunId() string {
	if o == nil || IsNil(o.LastTestRunId.Get()) {
		var ret string
		return ret
	}
	return *o.LastTestRunId.Get()
}

// GetLastTestRunIdOk returns a tuple with the LastTestRunId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetLastTestRunIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastTestRunId.Get(), o.LastTestRunId.IsSet()
}

// HasLastTestRunId returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasLastTestRunId() bool {
	if o != nil && o.LastTestRunId.IsSet() {
		return true
	}

	return false
}

// SetLastTestRunId gets a reference to the given NullableString and assigns it to the LastTestRunId field.
func (o *AutoTestApiResult) SetLastTestRunId(v string) {
	o.LastTestRunId.Set(&v)
}
// SetLastTestRunIdNil sets the value for LastTestRunId to be an explicit nil
func (o *AutoTestApiResult) SetLastTestRunIdNil() {
	o.LastTestRunId.Set(nil)
}

// UnsetLastTestRunId ensures that no value is present for LastTestRunId, not even an explicit nil
func (o *AutoTestApiResult) UnsetLastTestRunId() {
	o.LastTestRunId.Unset()
}

// GetLastTestRunName returns the LastTestRunName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetLastTestRunName() string {
	if o == nil || IsNil(o.LastTestRunName.Get()) {
		var ret string
		return ret
	}
	return *o.LastTestRunName.Get()
}

// GetLastTestRunNameOk returns a tuple with the LastTestRunName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetLastTestRunNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastTestRunName.Get(), o.LastTestRunName.IsSet()
}

// HasLastTestRunName returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasLastTestRunName() bool {
	if o != nil && o.LastTestRunName.IsSet() {
		return true
	}

	return false
}

// SetLastTestRunName gets a reference to the given NullableString and assigns it to the LastTestRunName field.
func (o *AutoTestApiResult) SetLastTestRunName(v string) {
	o.LastTestRunName.Set(&v)
}
// SetLastTestRunNameNil sets the value for LastTestRunName to be an explicit nil
func (o *AutoTestApiResult) SetLastTestRunNameNil() {
	o.LastTestRunName.Set(nil)
}

// UnsetLastTestRunName ensures that no value is present for LastTestRunName, not even an explicit nil
func (o *AutoTestApiResult) UnsetLastTestRunName() {
	o.LastTestRunName.Unset()
}

// GetLastTestResultId returns the LastTestResultId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetLastTestResultId() string {
	if o == nil || IsNil(o.LastTestResultId.Get()) {
		var ret string
		return ret
	}
	return *o.LastTestResultId.Get()
}

// GetLastTestResultIdOk returns a tuple with the LastTestResultId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetLastTestResultIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastTestResultId.Get(), o.LastTestResultId.IsSet()
}

// HasLastTestResultId returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasLastTestResultId() bool {
	if o != nil && o.LastTestResultId.IsSet() {
		return true
	}

	return false
}

// SetLastTestResultId gets a reference to the given NullableString and assigns it to the LastTestResultId field.
func (o *AutoTestApiResult) SetLastTestResultId(v string) {
	o.LastTestResultId.Set(&v)
}
// SetLastTestResultIdNil sets the value for LastTestResultId to be an explicit nil
func (o *AutoTestApiResult) SetLastTestResultIdNil() {
	o.LastTestResultId.Set(nil)
}

// UnsetLastTestResultId ensures that no value is present for LastTestResultId, not even an explicit nil
func (o *AutoTestApiResult) UnsetLastTestResultId() {
	o.LastTestResultId.Unset()
}

// GetLastTestResultConfiguration returns the LastTestResultConfiguration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetLastTestResultConfiguration() ConfigurationShortApiResult {
	if o == nil || IsNil(o.LastTestResultConfiguration.Get()) {
		var ret ConfigurationShortApiResult
		return ret
	}
	return *o.LastTestResultConfiguration.Get()
}

// GetLastTestResultConfigurationOk returns a tuple with the LastTestResultConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetLastTestResultConfigurationOk() (*ConfigurationShortApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastTestResultConfiguration.Get(), o.LastTestResultConfiguration.IsSet()
}

// HasLastTestResultConfiguration returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasLastTestResultConfiguration() bool {
	if o != nil && o.LastTestResultConfiguration.IsSet() {
		return true
	}

	return false
}

// SetLastTestResultConfiguration gets a reference to the given NullableConfigurationShortApiResult and assigns it to the LastTestResultConfiguration field.
func (o *AutoTestApiResult) SetLastTestResultConfiguration(v ConfigurationShortApiResult) {
	o.LastTestResultConfiguration.Set(&v)
}
// SetLastTestResultConfigurationNil sets the value for LastTestResultConfiguration to be an explicit nil
func (o *AutoTestApiResult) SetLastTestResultConfigurationNil() {
	o.LastTestResultConfiguration.Set(nil)
}

// UnsetLastTestResultConfiguration ensures that no value is present for LastTestResultConfiguration, not even an explicit nil
func (o *AutoTestApiResult) UnsetLastTestResultConfiguration() {
	o.LastTestResultConfiguration.Unset()
}

// GetLastTestResultOutcome returns the LastTestResultOutcome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetLastTestResultOutcome() string {
	if o == nil || IsNil(o.LastTestResultOutcome.Get()) {
		var ret string
		return ret
	}
	return *o.LastTestResultOutcome.Get()
}

// GetLastTestResultOutcomeOk returns a tuple with the LastTestResultOutcome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetLastTestResultOutcomeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastTestResultOutcome.Get(), o.LastTestResultOutcome.IsSet()
}

// HasLastTestResultOutcome returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasLastTestResultOutcome() bool {
	if o != nil && o.LastTestResultOutcome.IsSet() {
		return true
	}

	return false
}

// SetLastTestResultOutcome gets a reference to the given NullableString and assigns it to the LastTestResultOutcome field.
func (o *AutoTestApiResult) SetLastTestResultOutcome(v string) {
	o.LastTestResultOutcome.Set(&v)
}
// SetLastTestResultOutcomeNil sets the value for LastTestResultOutcome to be an explicit nil
func (o *AutoTestApiResult) SetLastTestResultOutcomeNil() {
	o.LastTestResultOutcome.Set(nil)
}

// UnsetLastTestResultOutcome ensures that no value is present for LastTestResultOutcome, not even an explicit nil
func (o *AutoTestApiResult) UnsetLastTestResultOutcome() {
	o.LastTestResultOutcome.Unset()
}

// GetLastTestResultStatus returns the LastTestResultStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetLastTestResultStatus() TestStatusApiResult {
	if o == nil || IsNil(o.LastTestResultStatus.Get()) {
		var ret TestStatusApiResult
		return ret
	}
	return *o.LastTestResultStatus.Get()
}

// GetLastTestResultStatusOk returns a tuple with the LastTestResultStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetLastTestResultStatusOk() (*TestStatusApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastTestResultStatus.Get(), o.LastTestResultStatus.IsSet()
}

// HasLastTestResultStatus returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasLastTestResultStatus() bool {
	if o != nil && o.LastTestResultStatus.IsSet() {
		return true
	}

	return false
}

// SetLastTestResultStatus gets a reference to the given NullableTestStatusApiResult and assigns it to the LastTestResultStatus field.
func (o *AutoTestApiResult) SetLastTestResultStatus(v TestStatusApiResult) {
	o.LastTestResultStatus.Set(&v)
}
// SetLastTestResultStatusNil sets the value for LastTestResultStatus to be an explicit nil
func (o *AutoTestApiResult) SetLastTestResultStatusNil() {
	o.LastTestResultStatus.Set(nil)
}

// UnsetLastTestResultStatus ensures that no value is present for LastTestResultStatus, not even an explicit nil
func (o *AutoTestApiResult) UnsetLastTestResultStatus() {
	o.LastTestResultStatus.Unset()
}

// GetStabilityPercentage returns the StabilityPercentage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetStabilityPercentage() int64 {
	if o == nil || IsNil(o.StabilityPercentage.Get()) {
		var ret int64
		return ret
	}
	return *o.StabilityPercentage.Get()
}

// GetStabilityPercentageOk returns a tuple with the StabilityPercentage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetStabilityPercentageOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.StabilityPercentage.Get(), o.StabilityPercentage.IsSet()
}

// HasStabilityPercentage returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasStabilityPercentage() bool {
	if o != nil && o.StabilityPercentage.IsSet() {
		return true
	}

	return false
}

// SetStabilityPercentage gets a reference to the given NullableInt64 and assigns it to the StabilityPercentage field.
func (o *AutoTestApiResult) SetStabilityPercentage(v int64) {
	o.StabilityPercentage.Set(&v)
}
// SetStabilityPercentageNil sets the value for StabilityPercentage to be an explicit nil
func (o *AutoTestApiResult) SetStabilityPercentageNil() {
	o.StabilityPercentage.Set(nil)
}

// UnsetStabilityPercentage ensures that no value is present for StabilityPercentage, not even an explicit nil
func (o *AutoTestApiResult) UnsetStabilityPercentage() {
	o.StabilityPercentage.Unset()
}

// GetLinks returns the Links field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetLinks() []LinkApiResult {
	if o == nil {
		var ret []LinkApiResult
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetLinksOk() ([]LinkApiResult, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinkApiResult and assigns it to the Links field.
func (o *AutoTestApiResult) SetLinks(v []LinkApiResult) {
	o.Links = v
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestApiResult) GetLabels() []LabelApiResult {
	if o == nil {
		var ret []LabelApiResult
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestApiResult) GetLabelsOk() ([]LabelApiResult, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *AutoTestApiResult) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []LabelApiResult and assigns it to the Labels field.
func (o *AutoTestApiResult) SetLabels(v []LabelApiResult) {
	o.Labels = v
}

func (o AutoTestApiResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoTestApiResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["projectId"] = o.ProjectId
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	toSerialize["name"] = o.Name
	if o.Namespace.IsSet() {
		toSerialize["namespace"] = o.Namespace.Get()
	}
	if o.Classname.IsSet() {
		toSerialize["classname"] = o.Classname.Get()
	}
	if o.Steps != nil {
		toSerialize["steps"] = o.Steps
	}
	if o.Setup != nil {
		toSerialize["setup"] = o.Setup
	}
	if o.Teardown != nil {
		toSerialize["teardown"] = o.Teardown
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["isFlaky"] = o.IsFlaky
	if o.ExternalKey.IsSet() {
		toSerialize["externalKey"] = o.ExternalKey.Get()
	}
	toSerialize["globalId"] = o.GlobalId
	toSerialize["isDeleted"] = o.IsDeleted
	toSerialize["mustBeApproved"] = o.MustBeApproved
	toSerialize["createdDate"] = o.CreatedDate
	if o.ModifiedDate.IsSet() {
		toSerialize["modifiedDate"] = o.ModifiedDate.Get()
	}
	toSerialize["createdById"] = o.CreatedById
	if o.ModifiedById.IsSet() {
		toSerialize["modifiedById"] = o.ModifiedById.Get()
	}
	if o.LastTestRunId.IsSet() {
		toSerialize["lastTestRunId"] = o.LastTestRunId.Get()
	}
	if o.LastTestRunName.IsSet() {
		toSerialize["lastTestRunName"] = o.LastTestRunName.Get()
	}
	if o.LastTestResultId.IsSet() {
		toSerialize["lastTestResultId"] = o.LastTestResultId.Get()
	}
	if o.LastTestResultConfiguration.IsSet() {
		toSerialize["lastTestResultConfiguration"] = o.LastTestResultConfiguration.Get()
	}
	if o.LastTestResultOutcome.IsSet() {
		toSerialize["lastTestResultOutcome"] = o.LastTestResultOutcome.Get()
	}
	if o.LastTestResultStatus.IsSet() {
		toSerialize["lastTestResultStatus"] = o.LastTestResultStatus.Get()
	}
	if o.StabilityPercentage.IsSet() {
		toSerialize["stabilityPercentage"] = o.StabilityPercentage.Get()
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	return toSerialize, nil
}

func (o *AutoTestApiResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"projectId",
		"name",
		"isFlaky",
		"globalId",
		"isDeleted",
		"mustBeApproved",
		"createdDate",
		"createdById",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoTestApiResult := _AutoTestApiResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoTestApiResult)

	if err != nil {
		return err
	}

	*o = AutoTestApiResult(varAutoTestApiResult)

	return err
}

type NullableAutoTestApiResult struct {
	value *AutoTestApiResult
	isSet bool
}

func (v NullableAutoTestApiResult) Get() *AutoTestApiResult {
	return v.value
}

func (v *NullableAutoTestApiResult) Set(val *AutoTestApiResult) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoTestApiResult) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoTestApiResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoTestApiResult(val *AutoTestApiResult) *NullableAutoTestApiResult {
	return &NullableAutoTestApiResult{value: val, isSet: true}
}

func (v NullableAutoTestApiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoTestApiResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


