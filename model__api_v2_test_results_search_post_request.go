/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the ApiV2TestResultsSearchPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiV2TestResultsSearchPostRequest{}

// ApiV2TestResultsSearchPostRequest struct for ApiV2TestResultsSearchPostRequest
type ApiV2TestResultsSearchPostRequest struct {
	// Specifies a test result test run IDs to search for
	TestRunIds []string `json:"testRunIds,omitempty"`
	// Specifies an autotest global IDs to search results for
	AutoTestGlobalIds []int64 `json:"autoTestGlobalIds,omitempty"`
	// Specifies an autotest name to search results for
	Name NullableString `json:"name,omitempty"`
	CreatedDate NullableTestResultsFilterModelCreatedDate `json:"createdDate,omitempty"`
	Duration NullableTestResultsFilterModelDuration `json:"duration,omitempty"`
	// Specifies result reasons for searching test results
	ResultReasons []string `json:"resultReasons,omitempty"`
	// Specifies a test result configuration IDs to search for
	ConfigurationIds []string `json:"configurationIds,omitempty"`
	// Specifies a test result outcomes to search for
	Outcomes []TestResultOutcome `json:"outcomes,omitempty"`
	// Specifies a test result failure categories to search for
	FailureCategories []FailureCategoryModel `json:"failureCategories,omitempty"`
	// Specifies a test result namespace to search for
	Namespace NullableString `json:"namespace,omitempty"`
	// Specifies a test result class name to search for
	ClassName NullableString `json:"className,omitempty"`
}

// NewApiV2TestResultsSearchPostRequest instantiates a new ApiV2TestResultsSearchPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2TestResultsSearchPostRequest() *ApiV2TestResultsSearchPostRequest {
	this := ApiV2TestResultsSearchPostRequest{}
	return &this
}

// NewApiV2TestResultsSearchPostRequestWithDefaults instantiates a new ApiV2TestResultsSearchPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2TestResultsSearchPostRequestWithDefaults() *ApiV2TestResultsSearchPostRequest {
	this := ApiV2TestResultsSearchPostRequest{}
	return &this
}

// GetTestRunIds returns the TestRunIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestResultsSearchPostRequest) GetTestRunIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.TestRunIds
}

// GetTestRunIdsOk returns a tuple with the TestRunIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestResultsSearchPostRequest) GetTestRunIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TestRunIds) {
		return nil, false
	}
	return o.TestRunIds, true
}

// HasTestRunIds returns a boolean if a field has been set.
func (o *ApiV2TestResultsSearchPostRequest) HasTestRunIds() bool {
	if o != nil && IsNil(o.TestRunIds) {
		return true
	}

	return false
}

// SetTestRunIds gets a reference to the given []string and assigns it to the TestRunIds field.
func (o *ApiV2TestResultsSearchPostRequest) SetTestRunIds(v []string) {
	o.TestRunIds = v
}

// GetAutoTestGlobalIds returns the AutoTestGlobalIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestResultsSearchPostRequest) GetAutoTestGlobalIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.AutoTestGlobalIds
}

// GetAutoTestGlobalIdsOk returns a tuple with the AutoTestGlobalIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestResultsSearchPostRequest) GetAutoTestGlobalIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.AutoTestGlobalIds) {
		return nil, false
	}
	return o.AutoTestGlobalIds, true
}

// HasAutoTestGlobalIds returns a boolean if a field has been set.
func (o *ApiV2TestResultsSearchPostRequest) HasAutoTestGlobalIds() bool {
	if o != nil && IsNil(o.AutoTestGlobalIds) {
		return true
	}

	return false
}

// SetAutoTestGlobalIds gets a reference to the given []int64 and assigns it to the AutoTestGlobalIds field.
func (o *ApiV2TestResultsSearchPostRequest) SetAutoTestGlobalIds(v []int64) {
	o.AutoTestGlobalIds = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestResultsSearchPostRequest) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestResultsSearchPostRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ApiV2TestResultsSearchPostRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ApiV2TestResultsSearchPostRequest) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ApiV2TestResultsSearchPostRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ApiV2TestResultsSearchPostRequest) UnsetName() {
	o.Name.Unset()
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestResultsSearchPostRequest) GetCreatedDate() TestResultsFilterModelCreatedDate {
	if o == nil || IsNil(o.CreatedDate.Get()) {
		var ret TestResultsFilterModelCreatedDate
		return ret
	}
	return *o.CreatedDate.Get()
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestResultsSearchPostRequest) GetCreatedDateOk() (*TestResultsFilterModelCreatedDate, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedDate.Get(), o.CreatedDate.IsSet()
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *ApiV2TestResultsSearchPostRequest) HasCreatedDate() bool {
	if o != nil && o.CreatedDate.IsSet() {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given NullableTestResultsFilterModelCreatedDate and assigns it to the CreatedDate field.
func (o *ApiV2TestResultsSearchPostRequest) SetCreatedDate(v TestResultsFilterModelCreatedDate) {
	o.CreatedDate.Set(&v)
}
// SetCreatedDateNil sets the value for CreatedDate to be an explicit nil
func (o *ApiV2TestResultsSearchPostRequest) SetCreatedDateNil() {
	o.CreatedDate.Set(nil)
}

// UnsetCreatedDate ensures that no value is present for CreatedDate, not even an explicit nil
func (o *ApiV2TestResultsSearchPostRequest) UnsetCreatedDate() {
	o.CreatedDate.Unset()
}

// GetDuration returns the Duration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestResultsSearchPostRequest) GetDuration() TestResultsFilterModelDuration {
	if o == nil || IsNil(o.Duration.Get()) {
		var ret TestResultsFilterModelDuration
		return ret
	}
	return *o.Duration.Get()
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestResultsSearchPostRequest) GetDurationOk() (*TestResultsFilterModelDuration, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duration.Get(), o.Duration.IsSet()
}

// HasDuration returns a boolean if a field has been set.
func (o *ApiV2TestResultsSearchPostRequest) HasDuration() bool {
	if o != nil && o.Duration.IsSet() {
		return true
	}

	return false
}

// SetDuration gets a reference to the given NullableTestResultsFilterModelDuration and assigns it to the Duration field.
func (o *ApiV2TestResultsSearchPostRequest) SetDuration(v TestResultsFilterModelDuration) {
	o.Duration.Set(&v)
}
// SetDurationNil sets the value for Duration to be an explicit nil
func (o *ApiV2TestResultsSearchPostRequest) SetDurationNil() {
	o.Duration.Set(nil)
}

// UnsetDuration ensures that no value is present for Duration, not even an explicit nil
func (o *ApiV2TestResultsSearchPostRequest) UnsetDuration() {
	o.Duration.Unset()
}

// GetResultReasons returns the ResultReasons field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestResultsSearchPostRequest) GetResultReasons() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ResultReasons
}

// GetResultReasonsOk returns a tuple with the ResultReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestResultsSearchPostRequest) GetResultReasonsOk() ([]string, bool) {
	if o == nil || IsNil(o.ResultReasons) {
		return nil, false
	}
	return o.ResultReasons, true
}

// HasResultReasons returns a boolean if a field has been set.
func (o *ApiV2TestResultsSearchPostRequest) HasResultReasons() bool {
	if o != nil && IsNil(o.ResultReasons) {
		return true
	}

	return false
}

// SetResultReasons gets a reference to the given []string and assigns it to the ResultReasons field.
func (o *ApiV2TestResultsSearchPostRequest) SetResultReasons(v []string) {
	o.ResultReasons = v
}

// GetConfigurationIds returns the ConfigurationIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestResultsSearchPostRequest) GetConfigurationIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ConfigurationIds
}

// GetConfigurationIdsOk returns a tuple with the ConfigurationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestResultsSearchPostRequest) GetConfigurationIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ConfigurationIds) {
		return nil, false
	}
	return o.ConfigurationIds, true
}

// HasConfigurationIds returns a boolean if a field has been set.
func (o *ApiV2TestResultsSearchPostRequest) HasConfigurationIds() bool {
	if o != nil && IsNil(o.ConfigurationIds) {
		return true
	}

	return false
}

// SetConfigurationIds gets a reference to the given []string and assigns it to the ConfigurationIds field.
func (o *ApiV2TestResultsSearchPostRequest) SetConfigurationIds(v []string) {
	o.ConfigurationIds = v
}

// GetOutcomes returns the Outcomes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestResultsSearchPostRequest) GetOutcomes() []TestResultOutcome {
	if o == nil {
		var ret []TestResultOutcome
		return ret
	}
	return o.Outcomes
}

// GetOutcomesOk returns a tuple with the Outcomes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestResultsSearchPostRequest) GetOutcomesOk() ([]TestResultOutcome, bool) {
	if o == nil || IsNil(o.Outcomes) {
		return nil, false
	}
	return o.Outcomes, true
}

// HasOutcomes returns a boolean if a field has been set.
func (o *ApiV2TestResultsSearchPostRequest) HasOutcomes() bool {
	if o != nil && IsNil(o.Outcomes) {
		return true
	}

	return false
}

// SetOutcomes gets a reference to the given []TestResultOutcome and assigns it to the Outcomes field.
func (o *ApiV2TestResultsSearchPostRequest) SetOutcomes(v []TestResultOutcome) {
	o.Outcomes = v
}

// GetFailureCategories returns the FailureCategories field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestResultsSearchPostRequest) GetFailureCategories() []FailureCategoryModel {
	if o == nil {
		var ret []FailureCategoryModel
		return ret
	}
	return o.FailureCategories
}

// GetFailureCategoriesOk returns a tuple with the FailureCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestResultsSearchPostRequest) GetFailureCategoriesOk() ([]FailureCategoryModel, bool) {
	if o == nil || IsNil(o.FailureCategories) {
		return nil, false
	}
	return o.FailureCategories, true
}

// HasFailureCategories returns a boolean if a field has been set.
func (o *ApiV2TestResultsSearchPostRequest) HasFailureCategories() bool {
	if o != nil && IsNil(o.FailureCategories) {
		return true
	}

	return false
}

// SetFailureCategories gets a reference to the given []FailureCategoryModel and assigns it to the FailureCategories field.
func (o *ApiV2TestResultsSearchPostRequest) SetFailureCategories(v []FailureCategoryModel) {
	o.FailureCategories = v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestResultsSearchPostRequest) GetNamespace() string {
	if o == nil || IsNil(o.Namespace.Get()) {
		var ret string
		return ret
	}
	return *o.Namespace.Get()
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestResultsSearchPostRequest) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Namespace.Get(), o.Namespace.IsSet()
}

// HasNamespace returns a boolean if a field has been set.
func (o *ApiV2TestResultsSearchPostRequest) HasNamespace() bool {
	if o != nil && o.Namespace.IsSet() {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given NullableString and assigns it to the Namespace field.
func (o *ApiV2TestResultsSearchPostRequest) SetNamespace(v string) {
	o.Namespace.Set(&v)
}
// SetNamespaceNil sets the value for Namespace to be an explicit nil
func (o *ApiV2TestResultsSearchPostRequest) SetNamespaceNil() {
	o.Namespace.Set(nil)
}

// UnsetNamespace ensures that no value is present for Namespace, not even an explicit nil
func (o *ApiV2TestResultsSearchPostRequest) UnsetNamespace() {
	o.Namespace.Unset()
}

// GetClassName returns the ClassName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestResultsSearchPostRequest) GetClassName() string {
	if o == nil || IsNil(o.ClassName.Get()) {
		var ret string
		return ret
	}
	return *o.ClassName.Get()
}

// GetClassNameOk returns a tuple with the ClassName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestResultsSearchPostRequest) GetClassNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClassName.Get(), o.ClassName.IsSet()
}

// HasClassName returns a boolean if a field has been set.
func (o *ApiV2TestResultsSearchPostRequest) HasClassName() bool {
	if o != nil && o.ClassName.IsSet() {
		return true
	}

	return false
}

// SetClassName gets a reference to the given NullableString and assigns it to the ClassName field.
func (o *ApiV2TestResultsSearchPostRequest) SetClassName(v string) {
	o.ClassName.Set(&v)
}
// SetClassNameNil sets the value for ClassName to be an explicit nil
func (o *ApiV2TestResultsSearchPostRequest) SetClassNameNil() {
	o.ClassName.Set(nil)
}

// UnsetClassName ensures that no value is present for ClassName, not even an explicit nil
func (o *ApiV2TestResultsSearchPostRequest) UnsetClassName() {
	o.ClassName.Unset()
}

func (o ApiV2TestResultsSearchPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiV2TestResultsSearchPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TestRunIds != nil {
		toSerialize["testRunIds"] = o.TestRunIds
	}
	if o.AutoTestGlobalIds != nil {
		toSerialize["autoTestGlobalIds"] = o.AutoTestGlobalIds
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.CreatedDate.IsSet() {
		toSerialize["createdDate"] = o.CreatedDate.Get()
	}
	if o.Duration.IsSet() {
		toSerialize["duration"] = o.Duration.Get()
	}
	if o.ResultReasons != nil {
		toSerialize["resultReasons"] = o.ResultReasons
	}
	if o.ConfigurationIds != nil {
		toSerialize["configurationIds"] = o.ConfigurationIds
	}
	if o.Outcomes != nil {
		toSerialize["outcomes"] = o.Outcomes
	}
	if o.FailureCategories != nil {
		toSerialize["failureCategories"] = o.FailureCategories
	}
	if o.Namespace.IsSet() {
		toSerialize["namespace"] = o.Namespace.Get()
	}
	if o.ClassName.IsSet() {
		toSerialize["className"] = o.ClassName.Get()
	}
	return toSerialize, nil
}

type NullableApiV2TestResultsSearchPostRequest struct {
	value *ApiV2TestResultsSearchPostRequest
	isSet bool
}

func (v NullableApiV2TestResultsSearchPostRequest) Get() *ApiV2TestResultsSearchPostRequest {
	return v.value
}

func (v *NullableApiV2TestResultsSearchPostRequest) Set(val *ApiV2TestResultsSearchPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2TestResultsSearchPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2TestResultsSearchPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2TestResultsSearchPostRequest(val *ApiV2TestResultsSearchPostRequest) *NullableApiV2TestResultsSearchPostRequest {
	return &NullableApiV2TestResultsSearchPostRequest{value: val, isSet: true}
}

func (v NullableApiV2TestResultsSearchPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2TestResultsSearchPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


