/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExternalIssueApiMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalIssueApiMetadata{}

// ExternalIssueApiMetadata struct for ExternalIssueApiMetadata
type ExternalIssueApiMetadata struct {
	// Identifier of external issue in external service
	Id string `json:"id"`
	// Title of external issue in external service
	Title string `json:"title"`
	// Code of external issue in external service
	Code NullableString `json:"code,omitempty"`
	// Description of external issue in external service
	Description NullableString `json:"description,omitempty"`
	// Status of external issue in external service
	Status NullableString `json:"status,omitempty"`
	// Assignee of external issue in external service
	Assignee NullableString `json:"assignee,omitempty"`
	// Type of external issue in external service
	Type NullableExternalIssueApiType `json:"type,omitempty"`
	// Priority of external issue in external service
	Priority NullableExternalIssueApiPriority `json:"priority,omitempty"`
}

type _ExternalIssueApiMetadata ExternalIssueApiMetadata

// NewExternalIssueApiMetadata instantiates a new ExternalIssueApiMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalIssueApiMetadata(id string, title string) *ExternalIssueApiMetadata {
	this := ExternalIssueApiMetadata{}
	this.Id = id
	this.Title = title
	return &this
}

// NewExternalIssueApiMetadataWithDefaults instantiates a new ExternalIssueApiMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalIssueApiMetadataWithDefaults() *ExternalIssueApiMetadata {
	this := ExternalIssueApiMetadata{}
	return &this
}

// GetId returns the Id field value
func (o *ExternalIssueApiMetadata) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ExternalIssueApiMetadata) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ExternalIssueApiMetadata) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *ExternalIssueApiMetadata) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ExternalIssueApiMetadata) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ExternalIssueApiMetadata) SetTitle(v string) {
	o.Title = v
}

// GetCode returns the Code field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalIssueApiMetadata) GetCode() string {
	if o == nil || IsNil(o.Code.Get()) {
		var ret string
		return ret
	}
	return *o.Code.Get()
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalIssueApiMetadata) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Code.Get(), o.Code.IsSet()
}

// HasCode returns a boolean if a field has been set.
func (o *ExternalIssueApiMetadata) HasCode() bool {
	if o != nil && o.Code.IsSet() {
		return true
	}

	return false
}

// SetCode gets a reference to the given NullableString and assigns it to the Code field.
func (o *ExternalIssueApiMetadata) SetCode(v string) {
	o.Code.Set(&v)
}
// SetCodeNil sets the value for Code to be an explicit nil
func (o *ExternalIssueApiMetadata) SetCodeNil() {
	o.Code.Set(nil)
}

// UnsetCode ensures that no value is present for Code, not even an explicit nil
func (o *ExternalIssueApiMetadata) UnsetCode() {
	o.Code.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalIssueApiMetadata) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalIssueApiMetadata) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ExternalIssueApiMetadata) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ExternalIssueApiMetadata) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ExternalIssueApiMetadata) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ExternalIssueApiMetadata) UnsetDescription() {
	o.Description.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalIssueApiMetadata) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalIssueApiMetadata) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ExternalIssueApiMetadata) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ExternalIssueApiMetadata) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ExternalIssueApiMetadata) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ExternalIssueApiMetadata) UnsetStatus() {
	o.Status.Unset()
}

// GetAssignee returns the Assignee field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalIssueApiMetadata) GetAssignee() string {
	if o == nil || IsNil(o.Assignee.Get()) {
		var ret string
		return ret
	}
	return *o.Assignee.Get()
}

// GetAssigneeOk returns a tuple with the Assignee field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalIssueApiMetadata) GetAssigneeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Assignee.Get(), o.Assignee.IsSet()
}

// HasAssignee returns a boolean if a field has been set.
func (o *ExternalIssueApiMetadata) HasAssignee() bool {
	if o != nil && o.Assignee.IsSet() {
		return true
	}

	return false
}

// SetAssignee gets a reference to the given NullableString and assigns it to the Assignee field.
func (o *ExternalIssueApiMetadata) SetAssignee(v string) {
	o.Assignee.Set(&v)
}
// SetAssigneeNil sets the value for Assignee to be an explicit nil
func (o *ExternalIssueApiMetadata) SetAssigneeNil() {
	o.Assignee.Set(nil)
}

// UnsetAssignee ensures that no value is present for Assignee, not even an explicit nil
func (o *ExternalIssueApiMetadata) UnsetAssignee() {
	o.Assignee.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalIssueApiMetadata) GetType() ExternalIssueApiType {
	if o == nil || IsNil(o.Type.Get()) {
		var ret ExternalIssueApiType
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalIssueApiMetadata) GetTypeOk() (*ExternalIssueApiType, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *ExternalIssueApiMetadata) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableExternalIssueApiType and assigns it to the Type field.
func (o *ExternalIssueApiMetadata) SetType(v ExternalIssueApiType) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *ExternalIssueApiMetadata) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *ExternalIssueApiMetadata) UnsetType() {
	o.Type.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalIssueApiMetadata) GetPriority() ExternalIssueApiPriority {
	if o == nil || IsNil(o.Priority.Get()) {
		var ret ExternalIssueApiPriority
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalIssueApiMetadata) GetPriorityOk() (*ExternalIssueApiPriority, bool) {
	if o == nil {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *ExternalIssueApiMetadata) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableExternalIssueApiPriority and assigns it to the Priority field.
func (o *ExternalIssueApiMetadata) SetPriority(v ExternalIssueApiPriority) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *ExternalIssueApiMetadata) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *ExternalIssueApiMetadata) UnsetPriority() {
	o.Priority.Unset()
}

func (o ExternalIssueApiMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalIssueApiMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["title"] = o.Title
	if o.Code.IsSet() {
		toSerialize["code"] = o.Code.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Assignee.IsSet() {
		toSerialize["assignee"] = o.Assignee.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	return toSerialize, nil
}

func (o *ExternalIssueApiMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalIssueApiMetadata := _ExternalIssueApiMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalIssueApiMetadata)

	if err != nil {
		return err
	}

	*o = ExternalIssueApiMetadata(varExternalIssueApiMetadata)

	return err
}

type NullableExternalIssueApiMetadata struct {
	value *ExternalIssueApiMetadata
	isSet bool
}

func (v NullableExternalIssueApiMetadata) Get() *ExternalIssueApiMetadata {
	return v.value
}

func (v *NullableExternalIssueApiMetadata) Set(val *ExternalIssueApiMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalIssueApiMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalIssueApiMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalIssueApiMetadata(val *ExternalIssueApiMetadata) *NullableExternalIssueApiMetadata {
	return &NullableExternalIssueApiMetadata{value: val, isSet: true}
}

func (v NullableExternalIssueApiMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalIssueApiMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


