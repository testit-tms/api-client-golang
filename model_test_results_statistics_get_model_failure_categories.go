/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the TestResultsStatisticsGetModelFailureCategories type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestResultsStatisticsGetModelFailureCategories{}

// TestResultsStatisticsGetModelFailureCategories Test results counts aggregated by result failure categories
type TestResultsStatisticsGetModelFailureCategories struct {
	// Number of test results which outcomes were not analyzed
	NoAnalytics *int32 `json:"noAnalytics,omitempty"`
	// Number of test results which outcomes were not caused by any defect
	NoDefect *int32 `json:"noDefect,omitempty"`
	// Number of test results which outcomes were caused by some infrastructure defect
	InfrastructureDefect *int32 `json:"infrastructureDefect,omitempty"`
	// Number of test results which outcomes were caused by some tested product defect
	ProductDefect *int32 `json:"productDefect,omitempty"`
	// Number of test results which outcomes were caused by test itself
	TestDefect *int32 `json:"testDefect,omitempty"`
}

// NewTestResultsStatisticsGetModelFailureCategories instantiates a new TestResultsStatisticsGetModelFailureCategories object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestResultsStatisticsGetModelFailureCategories() *TestResultsStatisticsGetModelFailureCategories {
	this := TestResultsStatisticsGetModelFailureCategories{}
	return &this
}

// NewTestResultsStatisticsGetModelFailureCategoriesWithDefaults instantiates a new TestResultsStatisticsGetModelFailureCategories object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestResultsStatisticsGetModelFailureCategoriesWithDefaults() *TestResultsStatisticsGetModelFailureCategories {
	this := TestResultsStatisticsGetModelFailureCategories{}
	return &this
}

// GetNoAnalytics returns the NoAnalytics field value if set, zero value otherwise.
func (o *TestResultsStatisticsGetModelFailureCategories) GetNoAnalytics() int32 {
	if o == nil || IsNil(o.NoAnalytics) {
		var ret int32
		return ret
	}
	return *o.NoAnalytics
}

// GetNoAnalyticsOk returns a tuple with the NoAnalytics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestResultsStatisticsGetModelFailureCategories) GetNoAnalyticsOk() (*int32, bool) {
	if o == nil || IsNil(o.NoAnalytics) {
		return nil, false
	}
	return o.NoAnalytics, true
}

// HasNoAnalytics returns a boolean if a field has been set.
func (o *TestResultsStatisticsGetModelFailureCategories) HasNoAnalytics() bool {
	if o != nil && !IsNil(o.NoAnalytics) {
		return true
	}

	return false
}

// SetNoAnalytics gets a reference to the given int32 and assigns it to the NoAnalytics field.
func (o *TestResultsStatisticsGetModelFailureCategories) SetNoAnalytics(v int32) {
	o.NoAnalytics = &v
}

// GetNoDefect returns the NoDefect field value if set, zero value otherwise.
func (o *TestResultsStatisticsGetModelFailureCategories) GetNoDefect() int32 {
	if o == nil || IsNil(o.NoDefect) {
		var ret int32
		return ret
	}
	return *o.NoDefect
}

// GetNoDefectOk returns a tuple with the NoDefect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestResultsStatisticsGetModelFailureCategories) GetNoDefectOk() (*int32, bool) {
	if o == nil || IsNil(o.NoDefect) {
		return nil, false
	}
	return o.NoDefect, true
}

// HasNoDefect returns a boolean if a field has been set.
func (o *TestResultsStatisticsGetModelFailureCategories) HasNoDefect() bool {
	if o != nil && !IsNil(o.NoDefect) {
		return true
	}

	return false
}

// SetNoDefect gets a reference to the given int32 and assigns it to the NoDefect field.
func (o *TestResultsStatisticsGetModelFailureCategories) SetNoDefect(v int32) {
	o.NoDefect = &v
}

// GetInfrastructureDefect returns the InfrastructureDefect field value if set, zero value otherwise.
func (o *TestResultsStatisticsGetModelFailureCategories) GetInfrastructureDefect() int32 {
	if o == nil || IsNil(o.InfrastructureDefect) {
		var ret int32
		return ret
	}
	return *o.InfrastructureDefect
}

// GetInfrastructureDefectOk returns a tuple with the InfrastructureDefect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestResultsStatisticsGetModelFailureCategories) GetInfrastructureDefectOk() (*int32, bool) {
	if o == nil || IsNil(o.InfrastructureDefect) {
		return nil, false
	}
	return o.InfrastructureDefect, true
}

// HasInfrastructureDefect returns a boolean if a field has been set.
func (o *TestResultsStatisticsGetModelFailureCategories) HasInfrastructureDefect() bool {
	if o != nil && !IsNil(o.InfrastructureDefect) {
		return true
	}

	return false
}

// SetInfrastructureDefect gets a reference to the given int32 and assigns it to the InfrastructureDefect field.
func (o *TestResultsStatisticsGetModelFailureCategories) SetInfrastructureDefect(v int32) {
	o.InfrastructureDefect = &v
}

// GetProductDefect returns the ProductDefect field value if set, zero value otherwise.
func (o *TestResultsStatisticsGetModelFailureCategories) GetProductDefect() int32 {
	if o == nil || IsNil(o.ProductDefect) {
		var ret int32
		return ret
	}
	return *o.ProductDefect
}

// GetProductDefectOk returns a tuple with the ProductDefect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestResultsStatisticsGetModelFailureCategories) GetProductDefectOk() (*int32, bool) {
	if o == nil || IsNil(o.ProductDefect) {
		return nil, false
	}
	return o.ProductDefect, true
}

// HasProductDefect returns a boolean if a field has been set.
func (o *TestResultsStatisticsGetModelFailureCategories) HasProductDefect() bool {
	if o != nil && !IsNil(o.ProductDefect) {
		return true
	}

	return false
}

// SetProductDefect gets a reference to the given int32 and assigns it to the ProductDefect field.
func (o *TestResultsStatisticsGetModelFailureCategories) SetProductDefect(v int32) {
	o.ProductDefect = &v
}

// GetTestDefect returns the TestDefect field value if set, zero value otherwise.
func (o *TestResultsStatisticsGetModelFailureCategories) GetTestDefect() int32 {
	if o == nil || IsNil(o.TestDefect) {
		var ret int32
		return ret
	}
	return *o.TestDefect
}

// GetTestDefectOk returns a tuple with the TestDefect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestResultsStatisticsGetModelFailureCategories) GetTestDefectOk() (*int32, bool) {
	if o == nil || IsNil(o.TestDefect) {
		return nil, false
	}
	return o.TestDefect, true
}

// HasTestDefect returns a boolean if a field has been set.
func (o *TestResultsStatisticsGetModelFailureCategories) HasTestDefect() bool {
	if o != nil && !IsNil(o.TestDefect) {
		return true
	}

	return false
}

// SetTestDefect gets a reference to the given int32 and assigns it to the TestDefect field.
func (o *TestResultsStatisticsGetModelFailureCategories) SetTestDefect(v int32) {
	o.TestDefect = &v
}

func (o TestResultsStatisticsGetModelFailureCategories) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestResultsStatisticsGetModelFailureCategories) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NoAnalytics) {
		toSerialize["noAnalytics"] = o.NoAnalytics
	}
	if !IsNil(o.NoDefect) {
		toSerialize["noDefect"] = o.NoDefect
	}
	if !IsNil(o.InfrastructureDefect) {
		toSerialize["infrastructureDefect"] = o.InfrastructureDefect
	}
	if !IsNil(o.ProductDefect) {
		toSerialize["productDefect"] = o.ProductDefect
	}
	if !IsNil(o.TestDefect) {
		toSerialize["testDefect"] = o.TestDefect
	}
	return toSerialize, nil
}

type NullableTestResultsStatisticsGetModelFailureCategories struct {
	value *TestResultsStatisticsGetModelFailureCategories
	isSet bool
}

func (v NullableTestResultsStatisticsGetModelFailureCategories) Get() *TestResultsStatisticsGetModelFailureCategories {
	return v.value
}

func (v *NullableTestResultsStatisticsGetModelFailureCategories) Set(val *TestResultsStatisticsGetModelFailureCategories) {
	v.value = val
	v.isSet = true
}

func (v NullableTestResultsStatisticsGetModelFailureCategories) IsSet() bool {
	return v.isSet
}

func (v *NullableTestResultsStatisticsGetModelFailureCategories) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestResultsStatisticsGetModelFailureCategories(val *TestResultsStatisticsGetModelFailureCategories) *NullableTestResultsStatisticsGetModelFailureCategories {
	return &NullableTestResultsStatisticsGetModelFailureCategories{value: val, isSet: true}
}

func (v NullableTestResultsStatisticsGetModelFailureCategories) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestResultsStatisticsGetModelFailureCategories) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


