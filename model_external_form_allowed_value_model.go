/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExternalFormAllowedValueModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalFormAllowedValueModel{}

// ExternalFormAllowedValueModel struct for ExternalFormAllowedValueModel
type ExternalFormAllowedValueModel struct {
	Id NullableString `json:"id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	ParentId NullableString `json:"parentId,omitempty"`
	HasChildren bool `json:"hasChildren"`
}

type _ExternalFormAllowedValueModel ExternalFormAllowedValueModel

// NewExternalFormAllowedValueModel instantiates a new ExternalFormAllowedValueModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalFormAllowedValueModel(hasChildren bool) *ExternalFormAllowedValueModel {
	this := ExternalFormAllowedValueModel{}
	this.HasChildren = hasChildren
	return &this
}

// NewExternalFormAllowedValueModelWithDefaults instantiates a new ExternalFormAllowedValueModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalFormAllowedValueModelWithDefaults() *ExternalFormAllowedValueModel {
	this := ExternalFormAllowedValueModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormAllowedValueModel) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormAllowedValueModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ExternalFormAllowedValueModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ExternalFormAllowedValueModel) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ExternalFormAllowedValueModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ExternalFormAllowedValueModel) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormAllowedValueModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormAllowedValueModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ExternalFormAllowedValueModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ExternalFormAllowedValueModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ExternalFormAllowedValueModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ExternalFormAllowedValueModel) UnsetName() {
	o.Name.Unset()
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormAllowedValueModel) GetParentId() string {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormAllowedValueModel) GetParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *ExternalFormAllowedValueModel) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableString and assigns it to the ParentId field.
func (o *ExternalFormAllowedValueModel) SetParentId(v string) {
	o.ParentId.Set(&v)
}
// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *ExternalFormAllowedValueModel) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *ExternalFormAllowedValueModel) UnsetParentId() {
	o.ParentId.Unset()
}

// GetHasChildren returns the HasChildren field value
func (o *ExternalFormAllowedValueModel) GetHasChildren() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasChildren
}

// GetHasChildrenOk returns a tuple with the HasChildren field value
// and a boolean to check if the value has been set.
func (o *ExternalFormAllowedValueModel) GetHasChildrenOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasChildren, true
}

// SetHasChildren sets field value
func (o *ExternalFormAllowedValueModel) SetHasChildren(v bool) {
	o.HasChildren = v
}

func (o ExternalFormAllowedValueModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalFormAllowedValueModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.ParentId.IsSet() {
		toSerialize["parentId"] = o.ParentId.Get()
	}
	toSerialize["hasChildren"] = o.HasChildren
	return toSerialize, nil
}

func (o *ExternalFormAllowedValueModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hasChildren",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalFormAllowedValueModel := _ExternalFormAllowedValueModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalFormAllowedValueModel)

	if err != nil {
		return err
	}

	*o = ExternalFormAllowedValueModel(varExternalFormAllowedValueModel)

	return err
}

type NullableExternalFormAllowedValueModel struct {
	value *ExternalFormAllowedValueModel
	isSet bool
}

func (v NullableExternalFormAllowedValueModel) Get() *ExternalFormAllowedValueModel {
	return v.value
}

func (v *NullableExternalFormAllowedValueModel) Set(val *ExternalFormAllowedValueModel) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalFormAllowedValueModel) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalFormAllowedValueModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalFormAllowedValueModel(val *ExternalFormAllowedValueModel) *NullableExternalFormAllowedValueModel {
	return &NullableExternalFormAllowedValueModel{value: val, isSet: true}
}

func (v NullableExternalFormAllowedValueModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalFormAllowedValueModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


