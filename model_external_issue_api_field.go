/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"fmt"
)

// ExternalIssueApiField the model 'ExternalIssueApiField'
type ExternalIssueApiField string

// List of ExternalIssueApiField
const (
	EXTERNALISSUEAPIFIELD_ID ExternalIssueApiField = "Id"
	EXTERNALISSUEAPIFIELD_TYPE ExternalIssueApiField = "Type"
	EXTERNALISSUEAPIFIELD_PRIORITY ExternalIssueApiField = "Priority"
	EXTERNALISSUEAPIFIELD_STATUS ExternalIssueApiField = "Status"
	EXTERNALISSUEAPIFIELD_ASSIGNEE ExternalIssueApiField = "Assignee"
)

// All allowed values of ExternalIssueApiField enum
var AllowedExternalIssueApiFieldEnumValues = []ExternalIssueApiField{
	"Id",
	"Type",
	"Priority",
	"Status",
	"Assignee",
}

func (v *ExternalIssueApiField) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ExternalIssueApiField(value)
	for _, existing := range AllowedExternalIssueApiFieldEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ExternalIssueApiField", value)
}

// NewExternalIssueApiFieldFromValue returns a pointer to a valid ExternalIssueApiField
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewExternalIssueApiFieldFromValue(v string) (*ExternalIssueApiField, error) {
	ev := ExternalIssueApiField(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ExternalIssueApiField: valid values are %v", v, AllowedExternalIssueApiFieldEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExternalIssueApiField) IsValid() bool {
	for _, existing := range AllowedExternalIssueApiFieldEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ExternalIssueApiField value
func (v ExternalIssueApiField) Ptr() *ExternalIssueApiField {
	return &v
}

type NullableExternalIssueApiField struct {
	value *ExternalIssueApiField
	isSet bool
}

func (v NullableExternalIssueApiField) Get() *ExternalIssueApiField {
	return v.value
}

func (v *NullableExternalIssueApiField) Set(val *ExternalIssueApiField) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalIssueApiField) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalIssueApiField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalIssueApiField(val *ExternalIssueApiField) *NullableExternalIssueApiField {
	return &NullableExternalIssueApiField{value: val, isSet: true}
}

func (v NullableExternalIssueApiField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalIssueApiField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

