/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"fmt"
)

// WorkItemEntityTypeApiModel the model 'WorkItemEntityTypeApiModel'
type WorkItemEntityTypeApiModel string

// List of WorkItemEntityTypeApiModel
const (
	WORKITEMENTITYTYPEAPIMODEL_TEST_CASES WorkItemEntityTypeApiModel = "TestCases"
	WORKITEMENTITYTYPEAPIMODEL_CHECK_LISTS WorkItemEntityTypeApiModel = "CheckLists"
	WORKITEMENTITYTYPEAPIMODEL_SHARED_STEPS WorkItemEntityTypeApiModel = "SharedSteps"
)

// All allowed values of WorkItemEntityTypeApiModel enum
var AllowedWorkItemEntityTypeApiModelEnumValues = []WorkItemEntityTypeApiModel{
	"TestCases",
	"CheckLists",
	"SharedSteps",
}

func (v *WorkItemEntityTypeApiModel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WorkItemEntityTypeApiModel(value)
	for _, existing := range AllowedWorkItemEntityTypeApiModelEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WorkItemEntityTypeApiModel", value)
}

// NewWorkItemEntityTypeApiModelFromValue returns a pointer to a valid WorkItemEntityTypeApiModel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWorkItemEntityTypeApiModelFromValue(v string) (*WorkItemEntityTypeApiModel, error) {
	ev := WorkItemEntityTypeApiModel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WorkItemEntityTypeApiModel: valid values are %v", v, AllowedWorkItemEntityTypeApiModelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WorkItemEntityTypeApiModel) IsValid() bool {
	for _, existing := range AllowedWorkItemEntityTypeApiModelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WorkItemEntityTypeApiModel value
func (v WorkItemEntityTypeApiModel) Ptr() *WorkItemEntityTypeApiModel {
	return &v
}

type NullableWorkItemEntityTypeApiModel struct {
	value *WorkItemEntityTypeApiModel
	isSet bool
}

func (v NullableWorkItemEntityTypeApiModel) Get() *WorkItemEntityTypeApiModel {
	return v.value
}

func (v *NullableWorkItemEntityTypeApiModel) Set(val *WorkItemEntityTypeApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkItemEntityTypeApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkItemEntityTypeApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkItemEntityTypeApiModel(val *WorkItemEntityTypeApiModel) *NullableWorkItemEntityTypeApiModel {
	return &NullableWorkItemEntityTypeApiModel{value: val, isSet: true}
}

func (v NullableWorkItemEntityTypeApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkItemEntityTypeApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

