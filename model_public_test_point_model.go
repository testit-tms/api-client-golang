/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the PublicTestPointModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicTestPointModel{}

// PublicTestPointModel struct for PublicTestPointModel
type PublicTestPointModel struct {
	ConfigurationId *string `json:"configurationId,omitempty"`
	ConfigurationGlobalId *int64 `json:"configurationGlobalId,omitempty"`
	AutoTestIds []string `json:"autoTestIds,omitempty"`
	IterationId *string `json:"iterationId,omitempty"`
	ParameterModels []ParameterShortModel `json:"parameterModels,omitempty"`
}

// NewPublicTestPointModel instantiates a new PublicTestPointModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicTestPointModel() *PublicTestPointModel {
	this := PublicTestPointModel{}
	return &this
}

// NewPublicTestPointModelWithDefaults instantiates a new PublicTestPointModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicTestPointModelWithDefaults() *PublicTestPointModel {
	this := PublicTestPointModel{}
	return &this
}

// GetConfigurationId returns the ConfigurationId field value if set, zero value otherwise.
func (o *PublicTestPointModel) GetConfigurationId() string {
	if o == nil || IsNil(o.ConfigurationId) {
		var ret string
		return ret
	}
	return *o.ConfigurationId
}

// GetConfigurationIdOk returns a tuple with the ConfigurationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicTestPointModel) GetConfigurationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigurationId) {
		return nil, false
	}
	return o.ConfigurationId, true
}

// HasConfigurationId returns a boolean if a field has been set.
func (o *PublicTestPointModel) HasConfigurationId() bool {
	if o != nil && !IsNil(o.ConfigurationId) {
		return true
	}

	return false
}

// SetConfigurationId gets a reference to the given string and assigns it to the ConfigurationId field.
func (o *PublicTestPointModel) SetConfigurationId(v string) {
	o.ConfigurationId = &v
}

// GetConfigurationGlobalId returns the ConfigurationGlobalId field value if set, zero value otherwise.
func (o *PublicTestPointModel) GetConfigurationGlobalId() int64 {
	if o == nil || IsNil(o.ConfigurationGlobalId) {
		var ret int64
		return ret
	}
	return *o.ConfigurationGlobalId
}

// GetConfigurationGlobalIdOk returns a tuple with the ConfigurationGlobalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicTestPointModel) GetConfigurationGlobalIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ConfigurationGlobalId) {
		return nil, false
	}
	return o.ConfigurationGlobalId, true
}

// HasConfigurationGlobalId returns a boolean if a field has been set.
func (o *PublicTestPointModel) HasConfigurationGlobalId() bool {
	if o != nil && !IsNil(o.ConfigurationGlobalId) {
		return true
	}

	return false
}

// SetConfigurationGlobalId gets a reference to the given int64 and assigns it to the ConfigurationGlobalId field.
func (o *PublicTestPointModel) SetConfigurationGlobalId(v int64) {
	o.ConfigurationGlobalId = &v
}

// GetAutoTestIds returns the AutoTestIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PublicTestPointModel) GetAutoTestIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AutoTestIds
}

// GetAutoTestIdsOk returns a tuple with the AutoTestIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicTestPointModel) GetAutoTestIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AutoTestIds) {
		return nil, false
	}
	return o.AutoTestIds, true
}

// HasAutoTestIds returns a boolean if a field has been set.
func (o *PublicTestPointModel) HasAutoTestIds() bool {
	if o != nil && IsNil(o.AutoTestIds) {
		return true
	}

	return false
}

// SetAutoTestIds gets a reference to the given []string and assigns it to the AutoTestIds field.
func (o *PublicTestPointModel) SetAutoTestIds(v []string) {
	o.AutoTestIds = v
}

// GetIterationId returns the IterationId field value if set, zero value otherwise.
func (o *PublicTestPointModel) GetIterationId() string {
	if o == nil || IsNil(o.IterationId) {
		var ret string
		return ret
	}
	return *o.IterationId
}

// GetIterationIdOk returns a tuple with the IterationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicTestPointModel) GetIterationIdOk() (*string, bool) {
	if o == nil || IsNil(o.IterationId) {
		return nil, false
	}
	return o.IterationId, true
}

// HasIterationId returns a boolean if a field has been set.
func (o *PublicTestPointModel) HasIterationId() bool {
	if o != nil && !IsNil(o.IterationId) {
		return true
	}

	return false
}

// SetIterationId gets a reference to the given string and assigns it to the IterationId field.
func (o *PublicTestPointModel) SetIterationId(v string) {
	o.IterationId = &v
}

// GetParameterModels returns the ParameterModels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PublicTestPointModel) GetParameterModels() []ParameterShortModel {
	if o == nil {
		var ret []ParameterShortModel
		return ret
	}
	return o.ParameterModels
}

// GetParameterModelsOk returns a tuple with the ParameterModels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PublicTestPointModel) GetParameterModelsOk() ([]ParameterShortModel, bool) {
	if o == nil || IsNil(o.ParameterModels) {
		return nil, false
	}
	return o.ParameterModels, true
}

// HasParameterModels returns a boolean if a field has been set.
func (o *PublicTestPointModel) HasParameterModels() bool {
	if o != nil && IsNil(o.ParameterModels) {
		return true
	}

	return false
}

// SetParameterModels gets a reference to the given []ParameterShortModel and assigns it to the ParameterModels field.
func (o *PublicTestPointModel) SetParameterModels(v []ParameterShortModel) {
	o.ParameterModels = v
}

func (o PublicTestPointModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicTestPointModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfigurationId) {
		toSerialize["configurationId"] = o.ConfigurationId
	}
	if !IsNil(o.ConfigurationGlobalId) {
		toSerialize["configurationGlobalId"] = o.ConfigurationGlobalId
	}
	if o.AutoTestIds != nil {
		toSerialize["autoTestIds"] = o.AutoTestIds
	}
	if !IsNil(o.IterationId) {
		toSerialize["iterationId"] = o.IterationId
	}
	if o.ParameterModels != nil {
		toSerialize["parameterModels"] = o.ParameterModels
	}
	return toSerialize, nil
}

type NullablePublicTestPointModel struct {
	value *PublicTestPointModel
	isSet bool
}

func (v NullablePublicTestPointModel) Get() *PublicTestPointModel {
	return v.value
}

func (v *NullablePublicTestPointModel) Set(val *PublicTestPointModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicTestPointModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicTestPointModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicTestPointModel(val *PublicTestPointModel) *NullablePublicTestPointModel {
	return &NullablePublicTestPointModel{value: val, isSet: true}
}

func (v NullablePublicTestPointModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicTestPointModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


