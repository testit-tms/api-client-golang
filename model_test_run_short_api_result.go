/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the TestRunShortApiResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestRunShortApiResult{}

// TestRunShortApiResult struct for TestRunShortApiResult
type TestRunShortApiResult struct {
	// Unique ID of the test run
	Id string `json:"id"`
	// Name of the test run
	Name string `json:"name"`
	// Current state of the test run
	// Deprecated
	State TestRunState `json:"state"`
	// Current status of the test run
	Status TestStatusApiResult `json:"status"`
	// Date when the test run was created
	CreatedDate time.Time `json:"createdDate"`
	// Date when the test run was started
	StartedDate NullableTime `json:"startedDate,omitempty"`
	// Completion date of the test run
	CompletedDate NullableTime `json:"completedDate,omitempty"`
	// Unique ID of user who created the test run
	CreatedById string `json:"createdById"`
	// Unique ID of user who modified the test run last time
	ModifiedById NullableString `json:"modifiedById,omitempty"`
	// Is the test run is deleted
	IsDeleted bool `json:"isDeleted"`
	// Number of AutoTests run in the test run
	AutoTestsCount int32 `json:"autoTestsCount"`
	// Statistics of the test run
	Statistics TestResultsStatisticsApiResult `json:"statistics"`
	// Test results configurations
	TestResultsConfigurations []ConfigurationShortApiResult `json:"testResultsConfigurations"`
}

type _TestRunShortApiResult TestRunShortApiResult

// NewTestRunShortApiResult instantiates a new TestRunShortApiResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestRunShortApiResult(id string, name string, state TestRunState, status TestStatusApiResult, createdDate time.Time, createdById string, isDeleted bool, autoTestsCount int32, statistics TestResultsStatisticsApiResult, testResultsConfigurations []ConfigurationShortApiResult) *TestRunShortApiResult {
	this := TestRunShortApiResult{}
	this.Id = id
	this.Name = name
	this.State = state
	this.Status = status
	this.CreatedDate = createdDate
	this.CreatedById = createdById
	this.IsDeleted = isDeleted
	this.AutoTestsCount = autoTestsCount
	this.Statistics = statistics
	this.TestResultsConfigurations = testResultsConfigurations
	return &this
}

// NewTestRunShortApiResultWithDefaults instantiates a new TestRunShortApiResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestRunShortApiResultWithDefaults() *TestRunShortApiResult {
	this := TestRunShortApiResult{}
	return &this
}

// GetId returns the Id field value
func (o *TestRunShortApiResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TestRunShortApiResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TestRunShortApiResult) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *TestRunShortApiResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TestRunShortApiResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TestRunShortApiResult) SetName(v string) {
	o.Name = v
}

// GetState returns the State field value
// Deprecated
func (o *TestRunShortApiResult) GetState() TestRunState {
	if o == nil {
		var ret TestRunState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *TestRunShortApiResult) GetStateOk() (*TestRunState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
// Deprecated
func (o *TestRunShortApiResult) SetState(v TestRunState) {
	o.State = v
}

// GetStatus returns the Status field value
func (o *TestRunShortApiResult) GetStatus() TestStatusApiResult {
	if o == nil {
		var ret TestStatusApiResult
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *TestRunShortApiResult) GetStatusOk() (*TestStatusApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *TestRunShortApiResult) SetStatus(v TestStatusApiResult) {
	o.Status = v
}

// GetCreatedDate returns the CreatedDate field value
func (o *TestRunShortApiResult) GetCreatedDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value
// and a boolean to check if the value has been set.
func (o *TestRunShortApiResult) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedDate, true
}

// SetCreatedDate sets field value
func (o *TestRunShortApiResult) SetCreatedDate(v time.Time) {
	o.CreatedDate = v
}

// GetStartedDate returns the StartedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunShortApiResult) GetStartedDate() time.Time {
	if o == nil || IsNil(o.StartedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartedDate.Get()
}

// GetStartedDateOk returns a tuple with the StartedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunShortApiResult) GetStartedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedDate.Get(), o.StartedDate.IsSet()
}

// HasStartedDate returns a boolean if a field has been set.
func (o *TestRunShortApiResult) HasStartedDate() bool {
	if o != nil && o.StartedDate.IsSet() {
		return true
	}

	return false
}

// SetStartedDate gets a reference to the given NullableTime and assigns it to the StartedDate field.
func (o *TestRunShortApiResult) SetStartedDate(v time.Time) {
	o.StartedDate.Set(&v)
}
// SetStartedDateNil sets the value for StartedDate to be an explicit nil
func (o *TestRunShortApiResult) SetStartedDateNil() {
	o.StartedDate.Set(nil)
}

// UnsetStartedDate ensures that no value is present for StartedDate, not even an explicit nil
func (o *TestRunShortApiResult) UnsetStartedDate() {
	o.StartedDate.Unset()
}

// GetCompletedDate returns the CompletedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunShortApiResult) GetCompletedDate() time.Time {
	if o == nil || IsNil(o.CompletedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CompletedDate.Get()
}

// GetCompletedDateOk returns a tuple with the CompletedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunShortApiResult) GetCompletedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedDate.Get(), o.CompletedDate.IsSet()
}

// HasCompletedDate returns a boolean if a field has been set.
func (o *TestRunShortApiResult) HasCompletedDate() bool {
	if o != nil && o.CompletedDate.IsSet() {
		return true
	}

	return false
}

// SetCompletedDate gets a reference to the given NullableTime and assigns it to the CompletedDate field.
func (o *TestRunShortApiResult) SetCompletedDate(v time.Time) {
	o.CompletedDate.Set(&v)
}
// SetCompletedDateNil sets the value for CompletedDate to be an explicit nil
func (o *TestRunShortApiResult) SetCompletedDateNil() {
	o.CompletedDate.Set(nil)
}

// UnsetCompletedDate ensures that no value is present for CompletedDate, not even an explicit nil
func (o *TestRunShortApiResult) UnsetCompletedDate() {
	o.CompletedDate.Unset()
}

// GetCreatedById returns the CreatedById field value
func (o *TestRunShortApiResult) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *TestRunShortApiResult) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *TestRunShortApiResult) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetModifiedById returns the ModifiedById field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunShortApiResult) GetModifiedById() string {
	if o == nil || IsNil(o.ModifiedById.Get()) {
		var ret string
		return ret
	}
	return *o.ModifiedById.Get()
}

// GetModifiedByIdOk returns a tuple with the ModifiedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunShortApiResult) GetModifiedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedById.Get(), o.ModifiedById.IsSet()
}

// HasModifiedById returns a boolean if a field has been set.
func (o *TestRunShortApiResult) HasModifiedById() bool {
	if o != nil && o.ModifiedById.IsSet() {
		return true
	}

	return false
}

// SetModifiedById gets a reference to the given NullableString and assigns it to the ModifiedById field.
func (o *TestRunShortApiResult) SetModifiedById(v string) {
	o.ModifiedById.Set(&v)
}
// SetModifiedByIdNil sets the value for ModifiedById to be an explicit nil
func (o *TestRunShortApiResult) SetModifiedByIdNil() {
	o.ModifiedById.Set(nil)
}

// UnsetModifiedById ensures that no value is present for ModifiedById, not even an explicit nil
func (o *TestRunShortApiResult) UnsetModifiedById() {
	o.ModifiedById.Unset()
}

// GetIsDeleted returns the IsDeleted field value
func (o *TestRunShortApiResult) GetIsDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value
// and a boolean to check if the value has been set.
func (o *TestRunShortApiResult) GetIsDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDeleted, true
}

// SetIsDeleted sets field value
func (o *TestRunShortApiResult) SetIsDeleted(v bool) {
	o.IsDeleted = v
}

// GetAutoTestsCount returns the AutoTestsCount field value
func (o *TestRunShortApiResult) GetAutoTestsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AutoTestsCount
}

// GetAutoTestsCountOk returns a tuple with the AutoTestsCount field value
// and a boolean to check if the value has been set.
func (o *TestRunShortApiResult) GetAutoTestsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoTestsCount, true
}

// SetAutoTestsCount sets field value
func (o *TestRunShortApiResult) SetAutoTestsCount(v int32) {
	o.AutoTestsCount = v
}

// GetStatistics returns the Statistics field value
func (o *TestRunShortApiResult) GetStatistics() TestResultsStatisticsApiResult {
	if o == nil {
		var ret TestResultsStatisticsApiResult
		return ret
	}

	return o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value
// and a boolean to check if the value has been set.
func (o *TestRunShortApiResult) GetStatisticsOk() (*TestResultsStatisticsApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Statistics, true
}

// SetStatistics sets field value
func (o *TestRunShortApiResult) SetStatistics(v TestResultsStatisticsApiResult) {
	o.Statistics = v
}

// GetTestResultsConfigurations returns the TestResultsConfigurations field value
func (o *TestRunShortApiResult) GetTestResultsConfigurations() []ConfigurationShortApiResult {
	if o == nil {
		var ret []ConfigurationShortApiResult
		return ret
	}

	return o.TestResultsConfigurations
}

// GetTestResultsConfigurationsOk returns a tuple with the TestResultsConfigurations field value
// and a boolean to check if the value has been set.
func (o *TestRunShortApiResult) GetTestResultsConfigurationsOk() ([]ConfigurationShortApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.TestResultsConfigurations, true
}

// SetTestResultsConfigurations sets field value
func (o *TestRunShortApiResult) SetTestResultsConfigurations(v []ConfigurationShortApiResult) {
	o.TestResultsConfigurations = v
}

func (o TestRunShortApiResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestRunShortApiResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["state"] = o.State
	toSerialize["status"] = o.Status
	toSerialize["createdDate"] = o.CreatedDate
	if o.StartedDate.IsSet() {
		toSerialize["startedDate"] = o.StartedDate.Get()
	}
	if o.CompletedDate.IsSet() {
		toSerialize["completedDate"] = o.CompletedDate.Get()
	}
	toSerialize["createdById"] = o.CreatedById
	if o.ModifiedById.IsSet() {
		toSerialize["modifiedById"] = o.ModifiedById.Get()
	}
	toSerialize["isDeleted"] = o.IsDeleted
	toSerialize["autoTestsCount"] = o.AutoTestsCount
	toSerialize["statistics"] = o.Statistics
	toSerialize["testResultsConfigurations"] = o.TestResultsConfigurations
	return toSerialize, nil
}

func (o *TestRunShortApiResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"state",
		"status",
		"createdDate",
		"createdById",
		"isDeleted",
		"autoTestsCount",
		"statistics",
		"testResultsConfigurations",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestRunShortApiResult := _TestRunShortApiResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestRunShortApiResult)

	if err != nil {
		return err
	}

	*o = TestRunShortApiResult(varTestRunShortApiResult)

	return err
}

type NullableTestRunShortApiResult struct {
	value *TestRunShortApiResult
	isSet bool
}

func (v NullableTestRunShortApiResult) Get() *TestRunShortApiResult {
	return v.value
}

func (v *NullableTestRunShortApiResult) Set(val *TestRunShortApiResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTestRunShortApiResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTestRunShortApiResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestRunShortApiResult(val *TestRunShortApiResult) *NullableTestRunShortApiResult {
	return &NullableTestRunShortApiResult{value: val, isSet: true}
}

func (v NullableTestRunShortApiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestRunShortApiResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


