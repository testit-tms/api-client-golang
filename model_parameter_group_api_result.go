/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ParameterGroupApiResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParameterGroupApiResult{}

// ParameterGroupApiResult struct for ParameterGroupApiResult
type ParameterGroupApiResult struct {
	ParameterKeyId string `json:"parameterKeyId"`
	Name string `json:"name"`
	Values map[string]string `json:"values"`
	ProjectIds []string `json:"projectIds"`
}

type _ParameterGroupApiResult ParameterGroupApiResult

// NewParameterGroupApiResult instantiates a new ParameterGroupApiResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameterGroupApiResult(parameterKeyId string, name string, values map[string]string, projectIds []string) *ParameterGroupApiResult {
	this := ParameterGroupApiResult{}
	this.ParameterKeyId = parameterKeyId
	this.Name = name
	this.Values = values
	this.ProjectIds = projectIds
	return &this
}

// NewParameterGroupApiResultWithDefaults instantiates a new ParameterGroupApiResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParameterGroupApiResultWithDefaults() *ParameterGroupApiResult {
	this := ParameterGroupApiResult{}
	return &this
}

// GetParameterKeyId returns the ParameterKeyId field value
func (o *ParameterGroupApiResult) GetParameterKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParameterKeyId
}

// GetParameterKeyIdOk returns a tuple with the ParameterKeyId field value
// and a boolean to check if the value has been set.
func (o *ParameterGroupApiResult) GetParameterKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParameterKeyId, true
}

// SetParameterKeyId sets field value
func (o *ParameterGroupApiResult) SetParameterKeyId(v string) {
	o.ParameterKeyId = v
}

// GetName returns the Name field value
func (o *ParameterGroupApiResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ParameterGroupApiResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ParameterGroupApiResult) SetName(v string) {
	o.Name = v
}

// GetValues returns the Values field value
func (o *ParameterGroupApiResult) GetValues() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Values
}

// GetValuesOk returns a tuple with the Values field value
// and a boolean to check if the value has been set.
func (o *ParameterGroupApiResult) GetValuesOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Values, true
}

// SetValues sets field value
func (o *ParameterGroupApiResult) SetValues(v map[string]string) {
	o.Values = v
}

// GetProjectIds returns the ProjectIds field value
func (o *ParameterGroupApiResult) GetProjectIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ProjectIds
}

// GetProjectIdsOk returns a tuple with the ProjectIds field value
// and a boolean to check if the value has been set.
func (o *ParameterGroupApiResult) GetProjectIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectIds, true
}

// SetProjectIds sets field value
func (o *ParameterGroupApiResult) SetProjectIds(v []string) {
	o.ProjectIds = v
}

func (o ParameterGroupApiResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParameterGroupApiResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["parameterKeyId"] = o.ParameterKeyId
	toSerialize["name"] = o.Name
	toSerialize["values"] = o.Values
	toSerialize["projectIds"] = o.ProjectIds
	return toSerialize, nil
}

func (o *ParameterGroupApiResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"parameterKeyId",
		"name",
		"values",
		"projectIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varParameterGroupApiResult := _ParameterGroupApiResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varParameterGroupApiResult)

	if err != nil {
		return err
	}

	*o = ParameterGroupApiResult(varParameterGroupApiResult)

	return err
}

type NullableParameterGroupApiResult struct {
	value *ParameterGroupApiResult
	isSet bool
}

func (v NullableParameterGroupApiResult) Get() *ParameterGroupApiResult {
	return v.value
}

func (v *NullableParameterGroupApiResult) Set(val *ParameterGroupApiResult) {
	v.value = val
	v.isSet = true
}

func (v NullableParameterGroupApiResult) IsSet() bool {
	return v.isSet
}

func (v *NullableParameterGroupApiResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameterGroupApiResult(val *ParameterGroupApiResult) *NullableParameterGroupApiResult {
	return &NullableParameterGroupApiResult{value: val, isSet: true}
}

func (v NullableParameterGroupApiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameterGroupApiResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


