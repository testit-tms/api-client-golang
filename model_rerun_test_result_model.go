/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RerunTestResultModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RerunTestResultModel{}

// RerunTestResultModel struct for RerunTestResultModel
type RerunTestResultModel struct {
	Id string `json:"id"`
	Outcome NullableString `json:"outcome,omitempty"`
	RunNumber int32 `json:"runNumber"`
}

type _RerunTestResultModel RerunTestResultModel

// NewRerunTestResultModel instantiates a new RerunTestResultModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRerunTestResultModel(id string, runNumber int32) *RerunTestResultModel {
	this := RerunTestResultModel{}
	this.Id = id
	this.RunNumber = runNumber
	return &this
}

// NewRerunTestResultModelWithDefaults instantiates a new RerunTestResultModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRerunTestResultModelWithDefaults() *RerunTestResultModel {
	this := RerunTestResultModel{}
	return &this
}

// GetId returns the Id field value
func (o *RerunTestResultModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RerunTestResultModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RerunTestResultModel) SetId(v string) {
	o.Id = v
}

// GetOutcome returns the Outcome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RerunTestResultModel) GetOutcome() string {
	if o == nil || IsNil(o.Outcome.Get()) {
		var ret string
		return ret
	}
	return *o.Outcome.Get()
}

// GetOutcomeOk returns a tuple with the Outcome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RerunTestResultModel) GetOutcomeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Outcome.Get(), o.Outcome.IsSet()
}

// HasOutcome returns a boolean if a field has been set.
func (o *RerunTestResultModel) HasOutcome() bool {
	if o != nil && o.Outcome.IsSet() {
		return true
	}

	return false
}

// SetOutcome gets a reference to the given NullableString and assigns it to the Outcome field.
func (o *RerunTestResultModel) SetOutcome(v string) {
	o.Outcome.Set(&v)
}
// SetOutcomeNil sets the value for Outcome to be an explicit nil
func (o *RerunTestResultModel) SetOutcomeNil() {
	o.Outcome.Set(nil)
}

// UnsetOutcome ensures that no value is present for Outcome, not even an explicit nil
func (o *RerunTestResultModel) UnsetOutcome() {
	o.Outcome.Unset()
}

// GetRunNumber returns the RunNumber field value
func (o *RerunTestResultModel) GetRunNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RunNumber
}

// GetRunNumberOk returns a tuple with the RunNumber field value
// and a boolean to check if the value has been set.
func (o *RerunTestResultModel) GetRunNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RunNumber, true
}

// SetRunNumber sets field value
func (o *RerunTestResultModel) SetRunNumber(v int32) {
	o.RunNumber = v
}

func (o RerunTestResultModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RerunTestResultModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Outcome.IsSet() {
		toSerialize["outcome"] = o.Outcome.Get()
	}
	toSerialize["runNumber"] = o.RunNumber
	return toSerialize, nil
}

func (o *RerunTestResultModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"runNumber",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRerunTestResultModel := _RerunTestResultModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRerunTestResultModel)

	if err != nil {
		return err
	}

	*o = RerunTestResultModel(varRerunTestResultModel)

	return err
}

type NullableRerunTestResultModel struct {
	value *RerunTestResultModel
	isSet bool
}

func (v NullableRerunTestResultModel) Get() *RerunTestResultModel {
	return v.value
}

func (v *NullableRerunTestResultModel) Set(val *RerunTestResultModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRerunTestResultModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRerunTestResultModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRerunTestResultModel(val *RerunTestResultModel) *NullableRerunTestResultModel {
	return &NullableRerunTestResultModel{value: val, isSet: true}
}

func (v NullableRerunTestResultModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRerunTestResultModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


