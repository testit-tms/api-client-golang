/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TestRunStatisticsStatusesGetModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestRunStatisticsStatusesGetModel{}

// TestRunStatisticsStatusesGetModel struct for TestRunStatisticsStatusesGetModel
type TestRunStatisticsStatusesGetModel struct {
	// Number of test results which is running currently
	InProgress int32 `json:"inProgress"`
	// Number of test results which successfully passed
	Passed int32 `json:"passed"`
	// Number of test results which failed with an error
	Failed int32 `json:"failed"`
	// Number of test results which did not run and were skipped
	Skipped int32 `json:"skipped"`
	// Number of test results which cannot be launched
	Blocked int32 `json:"blocked"`
}

type _TestRunStatisticsStatusesGetModel TestRunStatisticsStatusesGetModel

// NewTestRunStatisticsStatusesGetModel instantiates a new TestRunStatisticsStatusesGetModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestRunStatisticsStatusesGetModel(inProgress int32, passed int32, failed int32, skipped int32, blocked int32) *TestRunStatisticsStatusesGetModel {
	this := TestRunStatisticsStatusesGetModel{}
	this.InProgress = inProgress
	this.Passed = passed
	this.Failed = failed
	this.Skipped = skipped
	this.Blocked = blocked
	return &this
}

// NewTestRunStatisticsStatusesGetModelWithDefaults instantiates a new TestRunStatisticsStatusesGetModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestRunStatisticsStatusesGetModelWithDefaults() *TestRunStatisticsStatusesGetModel {
	this := TestRunStatisticsStatusesGetModel{}
	return &this
}

// GetInProgress returns the InProgress field value
func (o *TestRunStatisticsStatusesGetModel) GetInProgress() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InProgress
}

// GetInProgressOk returns a tuple with the InProgress field value
// and a boolean to check if the value has been set.
func (o *TestRunStatisticsStatusesGetModel) GetInProgressOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InProgress, true
}

// SetInProgress sets field value
func (o *TestRunStatisticsStatusesGetModel) SetInProgress(v int32) {
	o.InProgress = v
}

// GetPassed returns the Passed field value
func (o *TestRunStatisticsStatusesGetModel) GetPassed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Passed
}

// GetPassedOk returns a tuple with the Passed field value
// and a boolean to check if the value has been set.
func (o *TestRunStatisticsStatusesGetModel) GetPassedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Passed, true
}

// SetPassed sets field value
func (o *TestRunStatisticsStatusesGetModel) SetPassed(v int32) {
	o.Passed = v
}

// GetFailed returns the Failed field value
func (o *TestRunStatisticsStatusesGetModel) GetFailed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Failed
}

// GetFailedOk returns a tuple with the Failed field value
// and a boolean to check if the value has been set.
func (o *TestRunStatisticsStatusesGetModel) GetFailedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Failed, true
}

// SetFailed sets field value
func (o *TestRunStatisticsStatusesGetModel) SetFailed(v int32) {
	o.Failed = v
}

// GetSkipped returns the Skipped field value
func (o *TestRunStatisticsStatusesGetModel) GetSkipped() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Skipped
}

// GetSkippedOk returns a tuple with the Skipped field value
// and a boolean to check if the value has been set.
func (o *TestRunStatisticsStatusesGetModel) GetSkippedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Skipped, true
}

// SetSkipped sets field value
func (o *TestRunStatisticsStatusesGetModel) SetSkipped(v int32) {
	o.Skipped = v
}

// GetBlocked returns the Blocked field value
func (o *TestRunStatisticsStatusesGetModel) GetBlocked() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Blocked
}

// GetBlockedOk returns a tuple with the Blocked field value
// and a boolean to check if the value has been set.
func (o *TestRunStatisticsStatusesGetModel) GetBlockedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Blocked, true
}

// SetBlocked sets field value
func (o *TestRunStatisticsStatusesGetModel) SetBlocked(v int32) {
	o.Blocked = v
}

func (o TestRunStatisticsStatusesGetModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestRunStatisticsStatusesGetModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["inProgress"] = o.InProgress
	toSerialize["passed"] = o.Passed
	toSerialize["failed"] = o.Failed
	toSerialize["skipped"] = o.Skipped
	toSerialize["blocked"] = o.Blocked
	return toSerialize, nil
}

func (o *TestRunStatisticsStatusesGetModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"inProgress",
		"passed",
		"failed",
		"skipped",
		"blocked",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestRunStatisticsStatusesGetModel := _TestRunStatisticsStatusesGetModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestRunStatisticsStatusesGetModel)

	if err != nil {
		return err
	}

	*o = TestRunStatisticsStatusesGetModel(varTestRunStatisticsStatusesGetModel)

	return err
}

type NullableTestRunStatisticsStatusesGetModel struct {
	value *TestRunStatisticsStatusesGetModel
	isSet bool
}

func (v NullableTestRunStatisticsStatusesGetModel) Get() *TestRunStatisticsStatusesGetModel {
	return v.value
}

func (v *NullableTestRunStatisticsStatusesGetModel) Set(val *TestRunStatisticsStatusesGetModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestRunStatisticsStatusesGetModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestRunStatisticsStatusesGetModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestRunStatisticsStatusesGetModel(val *TestRunStatisticsStatusesGetModel) *NullableTestRunStatisticsStatusesGetModel {
	return &NullableTestRunStatisticsStatusesGetModel{value: val, isSet: true}
}

func (v NullableTestRunStatisticsStatusesGetModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestRunStatisticsStatusesGetModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


