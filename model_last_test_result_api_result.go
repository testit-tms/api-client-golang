/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LastTestResultApiResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LastTestResultApiResult{}

// LastTestResultApiResult struct for LastTestResultApiResult
type LastTestResultApiResult struct {
	Id string `json:"id"`
	TestRunId string `json:"testRunId"`
	AutoTestId NullableString `json:"autoTestId,omitempty"`
	Comment NullableString `json:"comment,omitempty"`
	Links []LinkApiResult `json:"links"`
	WorkItemVersionId NullableString `json:"workItemVersionId,omitempty"`
	Attachments []AttachmentApiResult `json:"attachments"`
}

type _LastTestResultApiResult LastTestResultApiResult

// NewLastTestResultApiResult instantiates a new LastTestResultApiResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLastTestResultApiResult(id string, testRunId string, links []LinkApiResult, attachments []AttachmentApiResult) *LastTestResultApiResult {
	this := LastTestResultApiResult{}
	this.Id = id
	this.TestRunId = testRunId
	this.Links = links
	this.Attachments = attachments
	return &this
}

// NewLastTestResultApiResultWithDefaults instantiates a new LastTestResultApiResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLastTestResultApiResultWithDefaults() *LastTestResultApiResult {
	this := LastTestResultApiResult{}
	return &this
}

// GetId returns the Id field value
func (o *LastTestResultApiResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LastTestResultApiResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LastTestResultApiResult) SetId(v string) {
	o.Id = v
}

// GetTestRunId returns the TestRunId field value
func (o *LastTestResultApiResult) GetTestRunId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TestRunId
}

// GetTestRunIdOk returns a tuple with the TestRunId field value
// and a boolean to check if the value has been set.
func (o *LastTestResultApiResult) GetTestRunIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TestRunId, true
}

// SetTestRunId sets field value
func (o *LastTestResultApiResult) SetTestRunId(v string) {
	o.TestRunId = v
}

// GetAutoTestId returns the AutoTestId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LastTestResultApiResult) GetAutoTestId() string {
	if o == nil || IsNil(o.AutoTestId.Get()) {
		var ret string
		return ret
	}
	return *o.AutoTestId.Get()
}

// GetAutoTestIdOk returns a tuple with the AutoTestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LastTestResultApiResult) GetAutoTestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoTestId.Get(), o.AutoTestId.IsSet()
}

// HasAutoTestId returns a boolean if a field has been set.
func (o *LastTestResultApiResult) HasAutoTestId() bool {
	if o != nil && o.AutoTestId.IsSet() {
		return true
	}

	return false
}

// SetAutoTestId gets a reference to the given NullableString and assigns it to the AutoTestId field.
func (o *LastTestResultApiResult) SetAutoTestId(v string) {
	o.AutoTestId.Set(&v)
}
// SetAutoTestIdNil sets the value for AutoTestId to be an explicit nil
func (o *LastTestResultApiResult) SetAutoTestIdNil() {
	o.AutoTestId.Set(nil)
}

// UnsetAutoTestId ensures that no value is present for AutoTestId, not even an explicit nil
func (o *LastTestResultApiResult) UnsetAutoTestId() {
	o.AutoTestId.Unset()
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LastTestResultApiResult) GetComment() string {
	if o == nil || IsNil(o.Comment.Get()) {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LastTestResultApiResult) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *LastTestResultApiResult) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *LastTestResultApiResult) SetComment(v string) {
	o.Comment.Set(&v)
}
// SetCommentNil sets the value for Comment to be an explicit nil
func (o *LastTestResultApiResult) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *LastTestResultApiResult) UnsetComment() {
	o.Comment.Unset()
}

// GetLinks returns the Links field value
func (o *LastTestResultApiResult) GetLinks() []LinkApiResult {
	if o == nil {
		var ret []LinkApiResult
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *LastTestResultApiResult) GetLinksOk() ([]LinkApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Links, true
}

// SetLinks sets field value
func (o *LastTestResultApiResult) SetLinks(v []LinkApiResult) {
	o.Links = v
}

// GetWorkItemVersionId returns the WorkItemVersionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LastTestResultApiResult) GetWorkItemVersionId() string {
	if o == nil || IsNil(o.WorkItemVersionId.Get()) {
		var ret string
		return ret
	}
	return *o.WorkItemVersionId.Get()
}

// GetWorkItemVersionIdOk returns a tuple with the WorkItemVersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LastTestResultApiResult) GetWorkItemVersionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkItemVersionId.Get(), o.WorkItemVersionId.IsSet()
}

// HasWorkItemVersionId returns a boolean if a field has been set.
func (o *LastTestResultApiResult) HasWorkItemVersionId() bool {
	if o != nil && o.WorkItemVersionId.IsSet() {
		return true
	}

	return false
}

// SetWorkItemVersionId gets a reference to the given NullableString and assigns it to the WorkItemVersionId field.
func (o *LastTestResultApiResult) SetWorkItemVersionId(v string) {
	o.WorkItemVersionId.Set(&v)
}
// SetWorkItemVersionIdNil sets the value for WorkItemVersionId to be an explicit nil
func (o *LastTestResultApiResult) SetWorkItemVersionIdNil() {
	o.WorkItemVersionId.Set(nil)
}

// UnsetWorkItemVersionId ensures that no value is present for WorkItemVersionId, not even an explicit nil
func (o *LastTestResultApiResult) UnsetWorkItemVersionId() {
	o.WorkItemVersionId.Unset()
}

// GetAttachments returns the Attachments field value
func (o *LastTestResultApiResult) GetAttachments() []AttachmentApiResult {
	if o == nil {
		var ret []AttachmentApiResult
		return ret
	}

	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value
// and a boolean to check if the value has been set.
func (o *LastTestResultApiResult) GetAttachmentsOk() ([]AttachmentApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attachments, true
}

// SetAttachments sets field value
func (o *LastTestResultApiResult) SetAttachments(v []AttachmentApiResult) {
	o.Attachments = v
}

func (o LastTestResultApiResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LastTestResultApiResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["testRunId"] = o.TestRunId
	if o.AutoTestId.IsSet() {
		toSerialize["autoTestId"] = o.AutoTestId.Get()
	}
	if o.Comment.IsSet() {
		toSerialize["comment"] = o.Comment.Get()
	}
	toSerialize["links"] = o.Links
	if o.WorkItemVersionId.IsSet() {
		toSerialize["workItemVersionId"] = o.WorkItemVersionId.Get()
	}
	toSerialize["attachments"] = o.Attachments
	return toSerialize, nil
}

func (o *LastTestResultApiResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"testRunId",
		"links",
		"attachments",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLastTestResultApiResult := _LastTestResultApiResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLastTestResultApiResult)

	if err != nil {
		return err
	}

	*o = LastTestResultApiResult(varLastTestResultApiResult)

	return err
}

type NullableLastTestResultApiResult struct {
	value *LastTestResultApiResult
	isSet bool
}

func (v NullableLastTestResultApiResult) Get() *LastTestResultApiResult {
	return v.value
}

func (v *NullableLastTestResultApiResult) Set(val *LastTestResultApiResult) {
	v.value = val
	v.isSet = true
}

func (v NullableLastTestResultApiResult) IsSet() bool {
	return v.isSet
}

func (v *NullableLastTestResultApiResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLastTestResultApiResult(val *LastTestResultApiResult) *NullableLastTestResultApiResult {
	return &NullableLastTestResultApiResult{value: val, isSet: true}
}

func (v NullableLastTestResultApiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLastTestResultApiResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


