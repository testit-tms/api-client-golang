/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the TestPlanChangedFieldsViewModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestPlanChangedFieldsViewModel{}

// TestPlanChangedFieldsViewModel struct for TestPlanChangedFieldsViewModel
type TestPlanChangedFieldsViewModel struct {
	Name *StringTestPlanChangedFieldViewModel `json:"name,omitempty"`
	Description *StringTestPlanChangedFieldViewModel `json:"description,omitempty"`
	ProductName *StringTestPlanChangedFieldViewModel `json:"productName,omitempty"`
	Build *StringTestPlanChangedFieldViewModel `json:"build,omitempty"`
	Period *PeriodViewModelTestPlanChangedFieldViewModel `json:"period,omitempty"`
	Status *StringTestPlanChangedFieldViewModel `json:"status,omitempty"`
	Tags *StringArrayTestPlanChangedFieldViewModel `json:"tags,omitempty"`
	TestSuite *TestSuiteChangeViewModelTestPlanChangedFieldViewModel `json:"testSuite,omitempty"`
	TestPoints *TestPointChangeViewModelTestPlanChangedFieldViewModel `json:"testPoints,omitempty"`
	TestResults *TestResultChangeViewModelTestPlanChangedFieldViewModel `json:"testResults,omitempty"`
	Locking *BooleanTestPlanChangedFieldViewModel `json:"locking,omitempty"`
	HasAutomaticDurationTimer *BooleanNullableTestPlanChangedFieldViewModel `json:"hasAutomaticDurationTimer,omitempty"`
	Attributes map[string]CustomAttributeChangeModel `json:"attributes,omitempty"`
}

// NewTestPlanChangedFieldsViewModel instantiates a new TestPlanChangedFieldsViewModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestPlanChangedFieldsViewModel() *TestPlanChangedFieldsViewModel {
	this := TestPlanChangedFieldsViewModel{}
	return &this
}

// NewTestPlanChangedFieldsViewModelWithDefaults instantiates a new TestPlanChangedFieldsViewModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestPlanChangedFieldsViewModelWithDefaults() *TestPlanChangedFieldsViewModel {
	this := TestPlanChangedFieldsViewModel{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TestPlanChangedFieldsViewModel) GetName() StringTestPlanChangedFieldViewModel {
	if o == nil || IsNil(o.Name) {
		var ret StringTestPlanChangedFieldViewModel
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestPlanChangedFieldsViewModel) GetNameOk() (*StringTestPlanChangedFieldViewModel, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TestPlanChangedFieldsViewModel) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given StringTestPlanChangedFieldViewModel and assigns it to the Name field.
func (o *TestPlanChangedFieldsViewModel) SetName(v StringTestPlanChangedFieldViewModel) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TestPlanChangedFieldsViewModel) GetDescription() StringTestPlanChangedFieldViewModel {
	if o == nil || IsNil(o.Description) {
		var ret StringTestPlanChangedFieldViewModel
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestPlanChangedFieldsViewModel) GetDescriptionOk() (*StringTestPlanChangedFieldViewModel, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TestPlanChangedFieldsViewModel) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given StringTestPlanChangedFieldViewModel and assigns it to the Description field.
func (o *TestPlanChangedFieldsViewModel) SetDescription(v StringTestPlanChangedFieldViewModel) {
	o.Description = &v
}

// GetProductName returns the ProductName field value if set, zero value otherwise.
func (o *TestPlanChangedFieldsViewModel) GetProductName() StringTestPlanChangedFieldViewModel {
	if o == nil || IsNil(o.ProductName) {
		var ret StringTestPlanChangedFieldViewModel
		return ret
	}
	return *o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestPlanChangedFieldsViewModel) GetProductNameOk() (*StringTestPlanChangedFieldViewModel, bool) {
	if o == nil || IsNil(o.ProductName) {
		return nil, false
	}
	return o.ProductName, true
}

// HasProductName returns a boolean if a field has been set.
func (o *TestPlanChangedFieldsViewModel) HasProductName() bool {
	if o != nil && !IsNil(o.ProductName) {
		return true
	}

	return false
}

// SetProductName gets a reference to the given StringTestPlanChangedFieldViewModel and assigns it to the ProductName field.
func (o *TestPlanChangedFieldsViewModel) SetProductName(v StringTestPlanChangedFieldViewModel) {
	o.ProductName = &v
}

// GetBuild returns the Build field value if set, zero value otherwise.
func (o *TestPlanChangedFieldsViewModel) GetBuild() StringTestPlanChangedFieldViewModel {
	if o == nil || IsNil(o.Build) {
		var ret StringTestPlanChangedFieldViewModel
		return ret
	}
	return *o.Build
}

// GetBuildOk returns a tuple with the Build field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestPlanChangedFieldsViewModel) GetBuildOk() (*StringTestPlanChangedFieldViewModel, bool) {
	if o == nil || IsNil(o.Build) {
		return nil, false
	}
	return o.Build, true
}

// HasBuild returns a boolean if a field has been set.
func (o *TestPlanChangedFieldsViewModel) HasBuild() bool {
	if o != nil && !IsNil(o.Build) {
		return true
	}

	return false
}

// SetBuild gets a reference to the given StringTestPlanChangedFieldViewModel and assigns it to the Build field.
func (o *TestPlanChangedFieldsViewModel) SetBuild(v StringTestPlanChangedFieldViewModel) {
	o.Build = &v
}

// GetPeriod returns the Period field value if set, zero value otherwise.
func (o *TestPlanChangedFieldsViewModel) GetPeriod() PeriodViewModelTestPlanChangedFieldViewModel {
	if o == nil || IsNil(o.Period) {
		var ret PeriodViewModelTestPlanChangedFieldViewModel
		return ret
	}
	return *o.Period
}

// GetPeriodOk returns a tuple with the Period field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestPlanChangedFieldsViewModel) GetPeriodOk() (*PeriodViewModelTestPlanChangedFieldViewModel, bool) {
	if o == nil || IsNil(o.Period) {
		return nil, false
	}
	return o.Period, true
}

// HasPeriod returns a boolean if a field has been set.
func (o *TestPlanChangedFieldsViewModel) HasPeriod() bool {
	if o != nil && !IsNil(o.Period) {
		return true
	}

	return false
}

// SetPeriod gets a reference to the given PeriodViewModelTestPlanChangedFieldViewModel and assigns it to the Period field.
func (o *TestPlanChangedFieldsViewModel) SetPeriod(v PeriodViewModelTestPlanChangedFieldViewModel) {
	o.Period = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *TestPlanChangedFieldsViewModel) GetStatus() StringTestPlanChangedFieldViewModel {
	if o == nil || IsNil(o.Status) {
		var ret StringTestPlanChangedFieldViewModel
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestPlanChangedFieldsViewModel) GetStatusOk() (*StringTestPlanChangedFieldViewModel, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *TestPlanChangedFieldsViewModel) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given StringTestPlanChangedFieldViewModel and assigns it to the Status field.
func (o *TestPlanChangedFieldsViewModel) SetStatus(v StringTestPlanChangedFieldViewModel) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *TestPlanChangedFieldsViewModel) GetTags() StringArrayTestPlanChangedFieldViewModel {
	if o == nil || IsNil(o.Tags) {
		var ret StringArrayTestPlanChangedFieldViewModel
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestPlanChangedFieldsViewModel) GetTagsOk() (*StringArrayTestPlanChangedFieldViewModel, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *TestPlanChangedFieldsViewModel) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given StringArrayTestPlanChangedFieldViewModel and assigns it to the Tags field.
func (o *TestPlanChangedFieldsViewModel) SetTags(v StringArrayTestPlanChangedFieldViewModel) {
	o.Tags = &v
}

// GetTestSuite returns the TestSuite field value if set, zero value otherwise.
func (o *TestPlanChangedFieldsViewModel) GetTestSuite() TestSuiteChangeViewModelTestPlanChangedFieldViewModel {
	if o == nil || IsNil(o.TestSuite) {
		var ret TestSuiteChangeViewModelTestPlanChangedFieldViewModel
		return ret
	}
	return *o.TestSuite
}

// GetTestSuiteOk returns a tuple with the TestSuite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestPlanChangedFieldsViewModel) GetTestSuiteOk() (*TestSuiteChangeViewModelTestPlanChangedFieldViewModel, bool) {
	if o == nil || IsNil(o.TestSuite) {
		return nil, false
	}
	return o.TestSuite, true
}

// HasTestSuite returns a boolean if a field has been set.
func (o *TestPlanChangedFieldsViewModel) HasTestSuite() bool {
	if o != nil && !IsNil(o.TestSuite) {
		return true
	}

	return false
}

// SetTestSuite gets a reference to the given TestSuiteChangeViewModelTestPlanChangedFieldViewModel and assigns it to the TestSuite field.
func (o *TestPlanChangedFieldsViewModel) SetTestSuite(v TestSuiteChangeViewModelTestPlanChangedFieldViewModel) {
	o.TestSuite = &v
}

// GetTestPoints returns the TestPoints field value if set, zero value otherwise.
func (o *TestPlanChangedFieldsViewModel) GetTestPoints() TestPointChangeViewModelTestPlanChangedFieldViewModel {
	if o == nil || IsNil(o.TestPoints) {
		var ret TestPointChangeViewModelTestPlanChangedFieldViewModel
		return ret
	}
	return *o.TestPoints
}

// GetTestPointsOk returns a tuple with the TestPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestPlanChangedFieldsViewModel) GetTestPointsOk() (*TestPointChangeViewModelTestPlanChangedFieldViewModel, bool) {
	if o == nil || IsNil(o.TestPoints) {
		return nil, false
	}
	return o.TestPoints, true
}

// HasTestPoints returns a boolean if a field has been set.
func (o *TestPlanChangedFieldsViewModel) HasTestPoints() bool {
	if o != nil && !IsNil(o.TestPoints) {
		return true
	}

	return false
}

// SetTestPoints gets a reference to the given TestPointChangeViewModelTestPlanChangedFieldViewModel and assigns it to the TestPoints field.
func (o *TestPlanChangedFieldsViewModel) SetTestPoints(v TestPointChangeViewModelTestPlanChangedFieldViewModel) {
	o.TestPoints = &v
}

// GetTestResults returns the TestResults field value if set, zero value otherwise.
func (o *TestPlanChangedFieldsViewModel) GetTestResults() TestResultChangeViewModelTestPlanChangedFieldViewModel {
	if o == nil || IsNil(o.TestResults) {
		var ret TestResultChangeViewModelTestPlanChangedFieldViewModel
		return ret
	}
	return *o.TestResults
}

// GetTestResultsOk returns a tuple with the TestResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestPlanChangedFieldsViewModel) GetTestResultsOk() (*TestResultChangeViewModelTestPlanChangedFieldViewModel, bool) {
	if o == nil || IsNil(o.TestResults) {
		return nil, false
	}
	return o.TestResults, true
}

// HasTestResults returns a boolean if a field has been set.
func (o *TestPlanChangedFieldsViewModel) HasTestResults() bool {
	if o != nil && !IsNil(o.TestResults) {
		return true
	}

	return false
}

// SetTestResults gets a reference to the given TestResultChangeViewModelTestPlanChangedFieldViewModel and assigns it to the TestResults field.
func (o *TestPlanChangedFieldsViewModel) SetTestResults(v TestResultChangeViewModelTestPlanChangedFieldViewModel) {
	o.TestResults = &v
}

// GetLocking returns the Locking field value if set, zero value otherwise.
func (o *TestPlanChangedFieldsViewModel) GetLocking() BooleanTestPlanChangedFieldViewModel {
	if o == nil || IsNil(o.Locking) {
		var ret BooleanTestPlanChangedFieldViewModel
		return ret
	}
	return *o.Locking
}

// GetLockingOk returns a tuple with the Locking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestPlanChangedFieldsViewModel) GetLockingOk() (*BooleanTestPlanChangedFieldViewModel, bool) {
	if o == nil || IsNil(o.Locking) {
		return nil, false
	}
	return o.Locking, true
}

// HasLocking returns a boolean if a field has been set.
func (o *TestPlanChangedFieldsViewModel) HasLocking() bool {
	if o != nil && !IsNil(o.Locking) {
		return true
	}

	return false
}

// SetLocking gets a reference to the given BooleanTestPlanChangedFieldViewModel and assigns it to the Locking field.
func (o *TestPlanChangedFieldsViewModel) SetLocking(v BooleanTestPlanChangedFieldViewModel) {
	o.Locking = &v
}

// GetHasAutomaticDurationTimer returns the HasAutomaticDurationTimer field value if set, zero value otherwise.
func (o *TestPlanChangedFieldsViewModel) GetHasAutomaticDurationTimer() BooleanNullableTestPlanChangedFieldViewModel {
	if o == nil || IsNil(o.HasAutomaticDurationTimer) {
		var ret BooleanNullableTestPlanChangedFieldViewModel
		return ret
	}
	return *o.HasAutomaticDurationTimer
}

// GetHasAutomaticDurationTimerOk returns a tuple with the HasAutomaticDurationTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestPlanChangedFieldsViewModel) GetHasAutomaticDurationTimerOk() (*BooleanNullableTestPlanChangedFieldViewModel, bool) {
	if o == nil || IsNil(o.HasAutomaticDurationTimer) {
		return nil, false
	}
	return o.HasAutomaticDurationTimer, true
}

// HasHasAutomaticDurationTimer returns a boolean if a field has been set.
func (o *TestPlanChangedFieldsViewModel) HasHasAutomaticDurationTimer() bool {
	if o != nil && !IsNil(o.HasAutomaticDurationTimer) {
		return true
	}

	return false
}

// SetHasAutomaticDurationTimer gets a reference to the given BooleanNullableTestPlanChangedFieldViewModel and assigns it to the HasAutomaticDurationTimer field.
func (o *TestPlanChangedFieldsViewModel) SetHasAutomaticDurationTimer(v BooleanNullableTestPlanChangedFieldViewModel) {
	o.HasAutomaticDurationTimer = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPlanChangedFieldsViewModel) GetAttributes() map[string]CustomAttributeChangeModel {
	if o == nil {
		var ret map[string]CustomAttributeChangeModel
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPlanChangedFieldsViewModel) GetAttributesOk() (*map[string]CustomAttributeChangeModel, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return &o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *TestPlanChangedFieldsViewModel) HasAttributes() bool {
	if o != nil && IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]CustomAttributeChangeModel and assigns it to the Attributes field.
func (o *TestPlanChangedFieldsViewModel) SetAttributes(v map[string]CustomAttributeChangeModel) {
	o.Attributes = v
}

func (o TestPlanChangedFieldsViewModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestPlanChangedFieldsViewModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ProductName) {
		toSerialize["productName"] = o.ProductName
	}
	if !IsNil(o.Build) {
		toSerialize["build"] = o.Build
	}
	if !IsNil(o.Period) {
		toSerialize["period"] = o.Period
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.TestSuite) {
		toSerialize["testSuite"] = o.TestSuite
	}
	if !IsNil(o.TestPoints) {
		toSerialize["testPoints"] = o.TestPoints
	}
	if !IsNil(o.TestResults) {
		toSerialize["testResults"] = o.TestResults
	}
	if !IsNil(o.Locking) {
		toSerialize["locking"] = o.Locking
	}
	if !IsNil(o.HasAutomaticDurationTimer) {
		toSerialize["hasAutomaticDurationTimer"] = o.HasAutomaticDurationTimer
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

type NullableTestPlanChangedFieldsViewModel struct {
	value *TestPlanChangedFieldsViewModel
	isSet bool
}

func (v NullableTestPlanChangedFieldsViewModel) Get() *TestPlanChangedFieldsViewModel {
	return v.value
}

func (v *NullableTestPlanChangedFieldsViewModel) Set(val *TestPlanChangedFieldsViewModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestPlanChangedFieldsViewModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestPlanChangedFieldsViewModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestPlanChangedFieldsViewModel(val *TestPlanChangedFieldsViewModel) *NullableTestPlanChangedFieldsViewModel {
	return &NullableTestPlanChangedFieldsViewModel{value: val, isSet: true}
}

func (v NullableTestPlanChangedFieldsViewModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestPlanChangedFieldsViewModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


