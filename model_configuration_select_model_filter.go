/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the ConfigurationSelectModelFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigurationSelectModelFilter{}

// ConfigurationSelectModelFilter Configuration filters collection
type ConfigurationSelectModelFilter struct {
	// Collection of identifiers of projects from which configurations will be taken
	ProjectIds []string `json:"projectIds,omitempty"`
	// Filter to search by name (case-insensitive, partial match)
	Name NullableString `json:"name,omitempty"`
	// Is configurations deleted or existing
	IsDeleted NullableBool `json:"isDeleted,omitempty"`
	// Collection of global (integer) identifiers to filter configurations
	GlobalIds []int64 `json:"globalIds,omitempty"`
}

// NewConfigurationSelectModelFilter instantiates a new ConfigurationSelectModelFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigurationSelectModelFilter() *ConfigurationSelectModelFilter {
	this := ConfigurationSelectModelFilter{}
	return &this
}

// NewConfigurationSelectModelFilterWithDefaults instantiates a new ConfigurationSelectModelFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigurationSelectModelFilterWithDefaults() *ConfigurationSelectModelFilter {
	this := ConfigurationSelectModelFilter{}
	return &this
}

// GetProjectIds returns the ProjectIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigurationSelectModelFilter) GetProjectIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ProjectIds
}

// GetProjectIdsOk returns a tuple with the ProjectIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigurationSelectModelFilter) GetProjectIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ProjectIds) {
		return nil, false
	}
	return o.ProjectIds, true
}

// HasProjectIds returns a boolean if a field has been set.
func (o *ConfigurationSelectModelFilter) HasProjectIds() bool {
	if o != nil && IsNil(o.ProjectIds) {
		return true
	}

	return false
}

// SetProjectIds gets a reference to the given []string and assigns it to the ProjectIds field.
func (o *ConfigurationSelectModelFilter) SetProjectIds(v []string) {
	o.ProjectIds = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigurationSelectModelFilter) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigurationSelectModelFilter) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ConfigurationSelectModelFilter) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ConfigurationSelectModelFilter) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ConfigurationSelectModelFilter) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ConfigurationSelectModelFilter) UnsetName() {
	o.Name.Unset()
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigurationSelectModelFilter) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted.Get()) {
		var ret bool
		return ret
	}
	return *o.IsDeleted.Get()
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigurationSelectModelFilter) GetIsDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDeleted.Get(), o.IsDeleted.IsSet()
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *ConfigurationSelectModelFilter) HasIsDeleted() bool {
	if o != nil && o.IsDeleted.IsSet() {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given NullableBool and assigns it to the IsDeleted field.
func (o *ConfigurationSelectModelFilter) SetIsDeleted(v bool) {
	o.IsDeleted.Set(&v)
}
// SetIsDeletedNil sets the value for IsDeleted to be an explicit nil
func (o *ConfigurationSelectModelFilter) SetIsDeletedNil() {
	o.IsDeleted.Set(nil)
}

// UnsetIsDeleted ensures that no value is present for IsDeleted, not even an explicit nil
func (o *ConfigurationSelectModelFilter) UnsetIsDeleted() {
	o.IsDeleted.Unset()
}

// GetGlobalIds returns the GlobalIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigurationSelectModelFilter) GetGlobalIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.GlobalIds
}

// GetGlobalIdsOk returns a tuple with the GlobalIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigurationSelectModelFilter) GetGlobalIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.GlobalIds) {
		return nil, false
	}
	return o.GlobalIds, true
}

// HasGlobalIds returns a boolean if a field has been set.
func (o *ConfigurationSelectModelFilter) HasGlobalIds() bool {
	if o != nil && IsNil(o.GlobalIds) {
		return true
	}

	return false
}

// SetGlobalIds gets a reference to the given []int64 and assigns it to the GlobalIds field.
func (o *ConfigurationSelectModelFilter) SetGlobalIds(v []int64) {
	o.GlobalIds = v
}

func (o ConfigurationSelectModelFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigurationSelectModelFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ProjectIds != nil {
		toSerialize["projectIds"] = o.ProjectIds
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.IsDeleted.IsSet() {
		toSerialize["isDeleted"] = o.IsDeleted.Get()
	}
	if o.GlobalIds != nil {
		toSerialize["globalIds"] = o.GlobalIds
	}
	return toSerialize, nil
}

type NullableConfigurationSelectModelFilter struct {
	value *ConfigurationSelectModelFilter
	isSet bool
}

func (v NullableConfigurationSelectModelFilter) Get() *ConfigurationSelectModelFilter {
	return v.value
}

func (v *NullableConfigurationSelectModelFilter) Set(val *ConfigurationSelectModelFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigurationSelectModelFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigurationSelectModelFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigurationSelectModelFilter(val *ConfigurationSelectModelFilter) *NullableConfigurationSelectModelFilter {
	return &NullableConfigurationSelectModelFilter{value: val, isSet: true}
}

func (v NullableConfigurationSelectModelFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigurationSelectModelFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


