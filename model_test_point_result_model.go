/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the TestPointResultModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestPointResultModel{}

// TestPointResultModel struct for TestPointResultModel
type TestPointResultModel struct {
	TestPointId NullableString `json:"testPointId,omitempty"`
	AggregatedOutcome NullableString `json:"aggregatedOutcome,omitempty"`
	WorkItemGlobalId NullableInt64 `json:"workItemGlobalId,omitempty"`
	WorkItemName NullableString `json:"workItemName,omitempty"`
	ConfigurationName NullableString `json:"configurationName,omitempty"`
	TestResults []TestResultShortModel `json:"testResults,omitempty"`
	Attachments []AttachmentModel `json:"attachments,omitempty"`
}

// NewTestPointResultModel instantiates a new TestPointResultModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestPointResultModel() *TestPointResultModel {
	this := TestPointResultModel{}
	return &this
}

// NewTestPointResultModelWithDefaults instantiates a new TestPointResultModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestPointResultModelWithDefaults() *TestPointResultModel {
	this := TestPointResultModel{}
	return &this
}

// GetTestPointId returns the TestPointId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPointResultModel) GetTestPointId() string {
	if o == nil || IsNil(o.TestPointId.Get()) {
		var ret string
		return ret
	}
	return *o.TestPointId.Get()
}

// GetTestPointIdOk returns a tuple with the TestPointId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPointResultModel) GetTestPointIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TestPointId.Get(), o.TestPointId.IsSet()
}

// HasTestPointId returns a boolean if a field has been set.
func (o *TestPointResultModel) HasTestPointId() bool {
	if o != nil && o.TestPointId.IsSet() {
		return true
	}

	return false
}

// SetTestPointId gets a reference to the given NullableString and assigns it to the TestPointId field.
func (o *TestPointResultModel) SetTestPointId(v string) {
	o.TestPointId.Set(&v)
}
// SetTestPointIdNil sets the value for TestPointId to be an explicit nil
func (o *TestPointResultModel) SetTestPointIdNil() {
	o.TestPointId.Set(nil)
}

// UnsetTestPointId ensures that no value is present for TestPointId, not even an explicit nil
func (o *TestPointResultModel) UnsetTestPointId() {
	o.TestPointId.Unset()
}

// GetAggregatedOutcome returns the AggregatedOutcome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPointResultModel) GetAggregatedOutcome() string {
	if o == nil || IsNil(o.AggregatedOutcome.Get()) {
		var ret string
		return ret
	}
	return *o.AggregatedOutcome.Get()
}

// GetAggregatedOutcomeOk returns a tuple with the AggregatedOutcome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPointResultModel) GetAggregatedOutcomeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AggregatedOutcome.Get(), o.AggregatedOutcome.IsSet()
}

// HasAggregatedOutcome returns a boolean if a field has been set.
func (o *TestPointResultModel) HasAggregatedOutcome() bool {
	if o != nil && o.AggregatedOutcome.IsSet() {
		return true
	}

	return false
}

// SetAggregatedOutcome gets a reference to the given NullableString and assigns it to the AggregatedOutcome field.
func (o *TestPointResultModel) SetAggregatedOutcome(v string) {
	o.AggregatedOutcome.Set(&v)
}
// SetAggregatedOutcomeNil sets the value for AggregatedOutcome to be an explicit nil
func (o *TestPointResultModel) SetAggregatedOutcomeNil() {
	o.AggregatedOutcome.Set(nil)
}

// UnsetAggregatedOutcome ensures that no value is present for AggregatedOutcome, not even an explicit nil
func (o *TestPointResultModel) UnsetAggregatedOutcome() {
	o.AggregatedOutcome.Unset()
}

// GetWorkItemGlobalId returns the WorkItemGlobalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPointResultModel) GetWorkItemGlobalId() int64 {
	if o == nil || IsNil(o.WorkItemGlobalId.Get()) {
		var ret int64
		return ret
	}
	return *o.WorkItemGlobalId.Get()
}

// GetWorkItemGlobalIdOk returns a tuple with the WorkItemGlobalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPointResultModel) GetWorkItemGlobalIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkItemGlobalId.Get(), o.WorkItemGlobalId.IsSet()
}

// HasWorkItemGlobalId returns a boolean if a field has been set.
func (o *TestPointResultModel) HasWorkItemGlobalId() bool {
	if o != nil && o.WorkItemGlobalId.IsSet() {
		return true
	}

	return false
}

// SetWorkItemGlobalId gets a reference to the given NullableInt64 and assigns it to the WorkItemGlobalId field.
func (o *TestPointResultModel) SetWorkItemGlobalId(v int64) {
	o.WorkItemGlobalId.Set(&v)
}
// SetWorkItemGlobalIdNil sets the value for WorkItemGlobalId to be an explicit nil
func (o *TestPointResultModel) SetWorkItemGlobalIdNil() {
	o.WorkItemGlobalId.Set(nil)
}

// UnsetWorkItemGlobalId ensures that no value is present for WorkItemGlobalId, not even an explicit nil
func (o *TestPointResultModel) UnsetWorkItemGlobalId() {
	o.WorkItemGlobalId.Unset()
}

// GetWorkItemName returns the WorkItemName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPointResultModel) GetWorkItemName() string {
	if o == nil || IsNil(o.WorkItemName.Get()) {
		var ret string
		return ret
	}
	return *o.WorkItemName.Get()
}

// GetWorkItemNameOk returns a tuple with the WorkItemName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPointResultModel) GetWorkItemNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkItemName.Get(), o.WorkItemName.IsSet()
}

// HasWorkItemName returns a boolean if a field has been set.
func (o *TestPointResultModel) HasWorkItemName() bool {
	if o != nil && o.WorkItemName.IsSet() {
		return true
	}

	return false
}

// SetWorkItemName gets a reference to the given NullableString and assigns it to the WorkItemName field.
func (o *TestPointResultModel) SetWorkItemName(v string) {
	o.WorkItemName.Set(&v)
}
// SetWorkItemNameNil sets the value for WorkItemName to be an explicit nil
func (o *TestPointResultModel) SetWorkItemNameNil() {
	o.WorkItemName.Set(nil)
}

// UnsetWorkItemName ensures that no value is present for WorkItemName, not even an explicit nil
func (o *TestPointResultModel) UnsetWorkItemName() {
	o.WorkItemName.Unset()
}

// GetConfigurationName returns the ConfigurationName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPointResultModel) GetConfigurationName() string {
	if o == nil || IsNil(o.ConfigurationName.Get()) {
		var ret string
		return ret
	}
	return *o.ConfigurationName.Get()
}

// GetConfigurationNameOk returns a tuple with the ConfigurationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPointResultModel) GetConfigurationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfigurationName.Get(), o.ConfigurationName.IsSet()
}

// HasConfigurationName returns a boolean if a field has been set.
func (o *TestPointResultModel) HasConfigurationName() bool {
	if o != nil && o.ConfigurationName.IsSet() {
		return true
	}

	return false
}

// SetConfigurationName gets a reference to the given NullableString and assigns it to the ConfigurationName field.
func (o *TestPointResultModel) SetConfigurationName(v string) {
	o.ConfigurationName.Set(&v)
}
// SetConfigurationNameNil sets the value for ConfigurationName to be an explicit nil
func (o *TestPointResultModel) SetConfigurationNameNil() {
	o.ConfigurationName.Set(nil)
}

// UnsetConfigurationName ensures that no value is present for ConfigurationName, not even an explicit nil
func (o *TestPointResultModel) UnsetConfigurationName() {
	o.ConfigurationName.Unset()
}

// GetTestResults returns the TestResults field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPointResultModel) GetTestResults() []TestResultShortModel {
	if o == nil {
		var ret []TestResultShortModel
		return ret
	}
	return o.TestResults
}

// GetTestResultsOk returns a tuple with the TestResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPointResultModel) GetTestResultsOk() ([]TestResultShortModel, bool) {
	if o == nil || IsNil(o.TestResults) {
		return nil, false
	}
	return o.TestResults, true
}

// HasTestResults returns a boolean if a field has been set.
func (o *TestPointResultModel) HasTestResults() bool {
	if o != nil && IsNil(o.TestResults) {
		return true
	}

	return false
}

// SetTestResults gets a reference to the given []TestResultShortModel and assigns it to the TestResults field.
func (o *TestPointResultModel) SetTestResults(v []TestResultShortModel) {
	o.TestResults = v
}

// GetAttachments returns the Attachments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPointResultModel) GetAttachments() []AttachmentModel {
	if o == nil {
		var ret []AttachmentModel
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPointResultModel) GetAttachmentsOk() ([]AttachmentModel, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *TestPointResultModel) HasAttachments() bool {
	if o != nil && IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []AttachmentModel and assigns it to the Attachments field.
func (o *TestPointResultModel) SetAttachments(v []AttachmentModel) {
	o.Attachments = v
}

func (o TestPointResultModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestPointResultModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TestPointId.IsSet() {
		toSerialize["testPointId"] = o.TestPointId.Get()
	}
	if o.AggregatedOutcome.IsSet() {
		toSerialize["aggregatedOutcome"] = o.AggregatedOutcome.Get()
	}
	if o.WorkItemGlobalId.IsSet() {
		toSerialize["workItemGlobalId"] = o.WorkItemGlobalId.Get()
	}
	if o.WorkItemName.IsSet() {
		toSerialize["workItemName"] = o.WorkItemName.Get()
	}
	if o.ConfigurationName.IsSet() {
		toSerialize["configurationName"] = o.ConfigurationName.Get()
	}
	if o.TestResults != nil {
		toSerialize["testResults"] = o.TestResults
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	return toSerialize, nil
}

type NullableTestPointResultModel struct {
	value *TestPointResultModel
	isSet bool
}

func (v NullableTestPointResultModel) Get() *TestPointResultModel {
	return v.value
}

func (v *NullableTestPointResultModel) Set(val *TestPointResultModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestPointResultModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestPointResultModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestPointResultModel(val *TestPointResultModel) *NullableTestPointResultModel {
	return &NullableTestPointResultModel{value: val, isSet: true}
}

func (v NullableTestPointResultModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestPointResultModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


