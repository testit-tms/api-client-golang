/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the LinkPostModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinkPostModel{}

// LinkPostModel struct for LinkPostModel
type LinkPostModel struct {
	// Link name.
	Title NullableString `json:"title,omitempty"`
	// Address can be specified without protocol, but necessarily with the domain.
	Url string `json:"url"`
	// Link description.
	Description NullableString `json:"description,omitempty"`
	Type *LinkType `json:"type,omitempty"`
	HasInfo *bool `json:"hasInfo,omitempty"`
}

// NewLinkPostModel instantiates a new LinkPostModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkPostModel(url string) *LinkPostModel {
	this := LinkPostModel{}
	this.Url = url
	return &this
}

// NewLinkPostModelWithDefaults instantiates a new LinkPostModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkPostModelWithDefaults() *LinkPostModel {
	this := LinkPostModel{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinkPostModel) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkPostModel) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *LinkPostModel) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *LinkPostModel) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *LinkPostModel) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *LinkPostModel) UnsetTitle() {
	o.Title.Unset()
}

// GetUrl returns the Url field value
func (o *LinkPostModel) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *LinkPostModel) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *LinkPostModel) SetUrl(v string) {
	o.Url = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinkPostModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkPostModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *LinkPostModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *LinkPostModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *LinkPostModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *LinkPostModel) UnsetDescription() {
	o.Description.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *LinkPostModel) GetType() LinkType {
	if o == nil || IsNil(o.Type) {
		var ret LinkType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPostModel) GetTypeOk() (*LinkType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *LinkPostModel) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given LinkType and assigns it to the Type field.
func (o *LinkPostModel) SetType(v LinkType) {
	o.Type = &v
}

// GetHasInfo returns the HasInfo field value if set, zero value otherwise.
func (o *LinkPostModel) GetHasInfo() bool {
	if o == nil || IsNil(o.HasInfo) {
		var ret bool
		return ret
	}
	return *o.HasInfo
}

// GetHasInfoOk returns a tuple with the HasInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinkPostModel) GetHasInfoOk() (*bool, bool) {
	if o == nil || IsNil(o.HasInfo) {
		return nil, false
	}
	return o.HasInfo, true
}

// HasHasInfo returns a boolean if a field has been set.
func (o *LinkPostModel) HasHasInfo() bool {
	if o != nil && !IsNil(o.HasInfo) {
		return true
	}

	return false
}

// SetHasInfo gets a reference to the given bool and assigns it to the HasInfo field.
func (o *LinkPostModel) SetHasInfo(v bool) {
	o.HasInfo = &v
}

func (o LinkPostModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinkPostModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	toSerialize["url"] = o.Url
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.HasInfo) {
		toSerialize["hasInfo"] = o.HasInfo
	}
	return toSerialize, nil
}

type NullableLinkPostModel struct {
	value *LinkPostModel
	isSet bool
}

func (v NullableLinkPostModel) Get() *LinkPostModel {
	return v.value
}

func (v *NullableLinkPostModel) Set(val *LinkPostModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkPostModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkPostModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkPostModel(val *LinkPostModel) *NullableLinkPostModel {
	return &NullableLinkPostModel{value: val, isSet: true}
}

func (v NullableLinkPostModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkPostModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


