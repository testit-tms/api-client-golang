/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the AttachmentChangeViewModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachmentChangeViewModel{}

// AttachmentChangeViewModel struct for AttachmentChangeViewModel
type AttachmentChangeViewModel struct {
	Id string `json:"id"`
	Name NullableString `json:"name,omitempty"`
	Type NullableString `json:"type,omitempty"`
	Size float32 `json:"size"`
}

// NewAttachmentChangeViewModel instantiates a new AttachmentChangeViewModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachmentChangeViewModel(id string, size float32) *AttachmentChangeViewModel {
	this := AttachmentChangeViewModel{}
	this.Id = id
	this.Size = size
	return &this
}

// NewAttachmentChangeViewModelWithDefaults instantiates a new AttachmentChangeViewModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachmentChangeViewModelWithDefaults() *AttachmentChangeViewModel {
	this := AttachmentChangeViewModel{}
	return &this
}

// GetId returns the Id field value
func (o *AttachmentChangeViewModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AttachmentChangeViewModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AttachmentChangeViewModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AttachmentChangeViewModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AttachmentChangeViewModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *AttachmentChangeViewModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *AttachmentChangeViewModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *AttachmentChangeViewModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *AttachmentChangeViewModel) UnsetName() {
	o.Name.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AttachmentChangeViewModel) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AttachmentChangeViewModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *AttachmentChangeViewModel) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *AttachmentChangeViewModel) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *AttachmentChangeViewModel) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *AttachmentChangeViewModel) UnsetType() {
	o.Type.Unset()
}

// GetSize returns the Size field value
func (o *AttachmentChangeViewModel) GetSize() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *AttachmentChangeViewModel) GetSizeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *AttachmentChangeViewModel) SetSize(v float32) {
	o.Size = v
}

func (o AttachmentChangeViewModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachmentChangeViewModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	toSerialize["size"] = o.Size
	return toSerialize, nil
}

type NullableAttachmentChangeViewModel struct {
	value *AttachmentChangeViewModel
	isSet bool
}

func (v NullableAttachmentChangeViewModel) Get() *AttachmentChangeViewModel {
	return v.value
}

func (v *NullableAttachmentChangeViewModel) Set(val *AttachmentChangeViewModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachmentChangeViewModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachmentChangeViewModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachmentChangeViewModel(val *AttachmentChangeViewModel) *NullableAttachmentChangeViewModel {
	return &NullableAttachmentChangeViewModel{value: val, isSet: true}
}

func (v NullableAttachmentChangeViewModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachmentChangeViewModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


