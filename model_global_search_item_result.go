/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GlobalSearchItemResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalSearchItemResult{}

// GlobalSearchItemResult struct for GlobalSearchItemResult
type GlobalSearchItemResult struct {
	ResourceType string `json:"resourceType"`
	ResourceId string `json:"resourceId"`
	GlobalId NullableInt64 `json:"globalId,omitempty"`
	Name string `json:"name"`
	ProjectGlobalId int64 `json:"projectGlobalId"`
}

type _GlobalSearchItemResult GlobalSearchItemResult

// NewGlobalSearchItemResult instantiates a new GlobalSearchItemResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalSearchItemResult(resourceType string, resourceId string, name string, projectGlobalId int64) *GlobalSearchItemResult {
	this := GlobalSearchItemResult{}
	this.ResourceType = resourceType
	this.ResourceId = resourceId
	this.Name = name
	this.ProjectGlobalId = projectGlobalId
	return &this
}

// NewGlobalSearchItemResultWithDefaults instantiates a new GlobalSearchItemResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalSearchItemResultWithDefaults() *GlobalSearchItemResult {
	this := GlobalSearchItemResult{}
	return &this
}

// GetResourceType returns the ResourceType field value
func (o *GlobalSearchItemResult) GetResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceType
}

// GetResourceTypeOk returns a tuple with the ResourceType field value
// and a boolean to check if the value has been set.
func (o *GlobalSearchItemResult) GetResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceType, true
}

// SetResourceType sets field value
func (o *GlobalSearchItemResult) SetResourceType(v string) {
	o.ResourceType = v
}

// GetResourceId returns the ResourceId field value
func (o *GlobalSearchItemResult) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *GlobalSearchItemResult) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *GlobalSearchItemResult) SetResourceId(v string) {
	o.ResourceId = v
}

// GetGlobalId returns the GlobalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GlobalSearchItemResult) GetGlobalId() int64 {
	if o == nil || IsNil(o.GlobalId.Get()) {
		var ret int64
		return ret
	}
	return *o.GlobalId.Get()
}

// GetGlobalIdOk returns a tuple with the GlobalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GlobalSearchItemResult) GetGlobalIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalId.Get(), o.GlobalId.IsSet()
}

// HasGlobalId returns a boolean if a field has been set.
func (o *GlobalSearchItemResult) HasGlobalId() bool {
	if o != nil && o.GlobalId.IsSet() {
		return true
	}

	return false
}

// SetGlobalId gets a reference to the given NullableInt64 and assigns it to the GlobalId field.
func (o *GlobalSearchItemResult) SetGlobalId(v int64) {
	o.GlobalId.Set(&v)
}
// SetGlobalIdNil sets the value for GlobalId to be an explicit nil
func (o *GlobalSearchItemResult) SetGlobalIdNil() {
	o.GlobalId.Set(nil)
}

// UnsetGlobalId ensures that no value is present for GlobalId, not even an explicit nil
func (o *GlobalSearchItemResult) UnsetGlobalId() {
	o.GlobalId.Unset()
}

// GetName returns the Name field value
func (o *GlobalSearchItemResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GlobalSearchItemResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GlobalSearchItemResult) SetName(v string) {
	o.Name = v
}

// GetProjectGlobalId returns the ProjectGlobalId field value
func (o *GlobalSearchItemResult) GetProjectGlobalId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProjectGlobalId
}

// GetProjectGlobalIdOk returns a tuple with the ProjectGlobalId field value
// and a boolean to check if the value has been set.
func (o *GlobalSearchItemResult) GetProjectGlobalIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectGlobalId, true
}

// SetProjectGlobalId sets field value
func (o *GlobalSearchItemResult) SetProjectGlobalId(v int64) {
	o.ProjectGlobalId = v
}

func (o GlobalSearchItemResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalSearchItemResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resourceType"] = o.ResourceType
	toSerialize["resourceId"] = o.ResourceId
	if o.GlobalId.IsSet() {
		toSerialize["globalId"] = o.GlobalId.Get()
	}
	toSerialize["name"] = o.Name
	toSerialize["projectGlobalId"] = o.ProjectGlobalId
	return toSerialize, nil
}

func (o *GlobalSearchItemResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resourceType",
		"resourceId",
		"name",
		"projectGlobalId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGlobalSearchItemResult := _GlobalSearchItemResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGlobalSearchItemResult)

	if err != nil {
		return err
	}

	*o = GlobalSearchItemResult(varGlobalSearchItemResult)

	return err
}

type NullableGlobalSearchItemResult struct {
	value *GlobalSearchItemResult
	isSet bool
}

func (v NullableGlobalSearchItemResult) Get() *GlobalSearchItemResult {
	return v.value
}

func (v *NullableGlobalSearchItemResult) Set(val *GlobalSearchItemResult) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalSearchItemResult) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalSearchItemResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalSearchItemResult(val *GlobalSearchItemResult) *NullableGlobalSearchItemResult {
	return &NullableGlobalSearchItemResult{value: val, isSet: true}
}

func (v NullableGlobalSearchItemResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalSearchItemResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


