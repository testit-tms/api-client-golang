/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the WorkItemChangedFieldsViewModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkItemChangedFieldsViewModel{}

// WorkItemChangedFieldsViewModel struct for WorkItemChangedFieldsViewModel
type WorkItemChangedFieldsViewModel struct {
	Name NullableStringChangedFieldWithDiffsViewModel `json:"name,omitempty"`
	IsDeleted NullableBooleanChangedFieldViewModel `json:"isDeleted,omitempty"`
	ProjectId NullableGuidChangedFieldViewModel `json:"projectId,omitempty"`
	IsAutomated NullableBooleanChangedFieldViewModel `json:"isAutomated,omitempty"`
	SectionId NullableGuidChangedFieldViewModel `json:"sectionId,omitempty"`
	Description NullableStringChangedFieldWithDiffsViewModel `json:"description,omitempty"`
	State NullableStringChangedFieldViewModel `json:"state,omitempty"`
	Priority NullableStringChangedFieldViewModel `json:"priority,omitempty"`
	Duration NullableInt32ChangedFieldViewModel `json:"duration,omitempty"`
	Attributes map[string]WorkItemChangedAttributeViewModel `json:"attributes,omitempty"`
	Steps NullableWorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel `json:"steps,omitempty"`
	PreconditionSteps NullableWorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel `json:"preconditionSteps,omitempty"`
	PostconditionSteps NullableWorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel `json:"postconditionSteps,omitempty"`
	AutoTests NullableAutoTestChangeViewModelArrayChangedFieldViewModel `json:"autoTests,omitempty"`
	Attachments NullableAttachmentChangeViewModelArrayChangedFieldViewModel `json:"attachments,omitempty"`
	Tags NullableStringArrayChangedFieldViewModel `json:"tags,omitempty"`
	Links NullableWorkItemLinkChangeViewModelArrayChangedFieldViewModel `json:"links,omitempty"`
	GlobalId NullableInt64ChangedFieldViewModel `json:"globalId,omitempty"`
	VersionNumber NullableInt32ChangedFieldViewModel `json:"versionNumber,omitempty"`
	EntityTypeName NullableStringChangedFieldViewModel `json:"entityTypeName,omitempty"`
}

// NewWorkItemChangedFieldsViewModel instantiates a new WorkItemChangedFieldsViewModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkItemChangedFieldsViewModel() *WorkItemChangedFieldsViewModel {
	this := WorkItemChangedFieldsViewModel{}
	return &this
}

// NewWorkItemChangedFieldsViewModelWithDefaults instantiates a new WorkItemChangedFieldsViewModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkItemChangedFieldsViewModelWithDefaults() *WorkItemChangedFieldsViewModel {
	this := WorkItemChangedFieldsViewModel{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetName() StringChangedFieldWithDiffsViewModel {
	if o == nil || IsNil(o.Name.Get()) {
		var ret StringChangedFieldWithDiffsViewModel
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetNameOk() (*StringChangedFieldWithDiffsViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableStringChangedFieldWithDiffsViewModel and assigns it to the Name field.
func (o *WorkItemChangedFieldsViewModel) SetName(v StringChangedFieldWithDiffsViewModel) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetName() {
	o.Name.Unset()
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetIsDeleted() BooleanChangedFieldViewModel {
	if o == nil || IsNil(o.IsDeleted.Get()) {
		var ret BooleanChangedFieldViewModel
		return ret
	}
	return *o.IsDeleted.Get()
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetIsDeletedOk() (*BooleanChangedFieldViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsDeleted.Get(), o.IsDeleted.IsSet()
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasIsDeleted() bool {
	if o != nil && o.IsDeleted.IsSet() {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given NullableBooleanChangedFieldViewModel and assigns it to the IsDeleted field.
func (o *WorkItemChangedFieldsViewModel) SetIsDeleted(v BooleanChangedFieldViewModel) {
	o.IsDeleted.Set(&v)
}
// SetIsDeletedNil sets the value for IsDeleted to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetIsDeletedNil() {
	o.IsDeleted.Set(nil)
}

// UnsetIsDeleted ensures that no value is present for IsDeleted, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetIsDeleted() {
	o.IsDeleted.Unset()
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetProjectId() GuidChangedFieldViewModel {
	if o == nil || IsNil(o.ProjectId.Get()) {
		var ret GuidChangedFieldViewModel
		return ret
	}
	return *o.ProjectId.Get()
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetProjectIdOk() (*GuidChangedFieldViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProjectId.Get(), o.ProjectId.IsSet()
}

// HasProjectId returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasProjectId() bool {
	if o != nil && o.ProjectId.IsSet() {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given NullableGuidChangedFieldViewModel and assigns it to the ProjectId field.
func (o *WorkItemChangedFieldsViewModel) SetProjectId(v GuidChangedFieldViewModel) {
	o.ProjectId.Set(&v)
}
// SetProjectIdNil sets the value for ProjectId to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetProjectIdNil() {
	o.ProjectId.Set(nil)
}

// UnsetProjectId ensures that no value is present for ProjectId, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetProjectId() {
	o.ProjectId.Unset()
}

// GetIsAutomated returns the IsAutomated field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetIsAutomated() BooleanChangedFieldViewModel {
	if o == nil || IsNil(o.IsAutomated.Get()) {
		var ret BooleanChangedFieldViewModel
		return ret
	}
	return *o.IsAutomated.Get()
}

// GetIsAutomatedOk returns a tuple with the IsAutomated field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetIsAutomatedOk() (*BooleanChangedFieldViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsAutomated.Get(), o.IsAutomated.IsSet()
}

// HasIsAutomated returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasIsAutomated() bool {
	if o != nil && o.IsAutomated.IsSet() {
		return true
	}

	return false
}

// SetIsAutomated gets a reference to the given NullableBooleanChangedFieldViewModel and assigns it to the IsAutomated field.
func (o *WorkItemChangedFieldsViewModel) SetIsAutomated(v BooleanChangedFieldViewModel) {
	o.IsAutomated.Set(&v)
}
// SetIsAutomatedNil sets the value for IsAutomated to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetIsAutomatedNil() {
	o.IsAutomated.Set(nil)
}

// UnsetIsAutomated ensures that no value is present for IsAutomated, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetIsAutomated() {
	o.IsAutomated.Unset()
}

// GetSectionId returns the SectionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetSectionId() GuidChangedFieldViewModel {
	if o == nil || IsNil(o.SectionId.Get()) {
		var ret GuidChangedFieldViewModel
		return ret
	}
	return *o.SectionId.Get()
}

// GetSectionIdOk returns a tuple with the SectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetSectionIdOk() (*GuidChangedFieldViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.SectionId.Get(), o.SectionId.IsSet()
}

// HasSectionId returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasSectionId() bool {
	if o != nil && o.SectionId.IsSet() {
		return true
	}

	return false
}

// SetSectionId gets a reference to the given NullableGuidChangedFieldViewModel and assigns it to the SectionId field.
func (o *WorkItemChangedFieldsViewModel) SetSectionId(v GuidChangedFieldViewModel) {
	o.SectionId.Set(&v)
}
// SetSectionIdNil sets the value for SectionId to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetSectionIdNil() {
	o.SectionId.Set(nil)
}

// UnsetSectionId ensures that no value is present for SectionId, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetSectionId() {
	o.SectionId.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetDescription() StringChangedFieldWithDiffsViewModel {
	if o == nil || IsNil(o.Description.Get()) {
		var ret StringChangedFieldWithDiffsViewModel
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetDescriptionOk() (*StringChangedFieldWithDiffsViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableStringChangedFieldWithDiffsViewModel and assigns it to the Description field.
func (o *WorkItemChangedFieldsViewModel) SetDescription(v StringChangedFieldWithDiffsViewModel) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetDescription() {
	o.Description.Unset()
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetState() StringChangedFieldViewModel {
	if o == nil || IsNil(o.State.Get()) {
		var ret StringChangedFieldViewModel
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetStateOk() (*StringChangedFieldViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableStringChangedFieldViewModel and assigns it to the State field.
func (o *WorkItemChangedFieldsViewModel) SetState(v StringChangedFieldViewModel) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetState() {
	o.State.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetPriority() StringChangedFieldViewModel {
	if o == nil || IsNil(o.Priority.Get()) {
		var ret StringChangedFieldViewModel
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetPriorityOk() (*StringChangedFieldViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableStringChangedFieldViewModel and assigns it to the Priority field.
func (o *WorkItemChangedFieldsViewModel) SetPriority(v StringChangedFieldViewModel) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetPriority() {
	o.Priority.Unset()
}

// GetDuration returns the Duration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetDuration() Int32ChangedFieldViewModel {
	if o == nil || IsNil(o.Duration.Get()) {
		var ret Int32ChangedFieldViewModel
		return ret
	}
	return *o.Duration.Get()
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetDurationOk() (*Int32ChangedFieldViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Duration.Get(), o.Duration.IsSet()
}

// HasDuration returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasDuration() bool {
	if o != nil && o.Duration.IsSet() {
		return true
	}

	return false
}

// SetDuration gets a reference to the given NullableInt32ChangedFieldViewModel and assigns it to the Duration field.
func (o *WorkItemChangedFieldsViewModel) SetDuration(v Int32ChangedFieldViewModel) {
	o.Duration.Set(&v)
}
// SetDurationNil sets the value for Duration to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetDurationNil() {
	o.Duration.Set(nil)
}

// UnsetDuration ensures that no value is present for Duration, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetDuration() {
	o.Duration.Unset()
}

// GetAttributes returns the Attributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetAttributes() map[string]WorkItemChangedAttributeViewModel {
	if o == nil {
		var ret map[string]WorkItemChangedAttributeViewModel
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetAttributesOk() (*map[string]WorkItemChangedAttributeViewModel, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return &o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasAttributes() bool {
	if o != nil && IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]WorkItemChangedAttributeViewModel and assigns it to the Attributes field.
func (o *WorkItemChangedFieldsViewModel) SetAttributes(v map[string]WorkItemChangedAttributeViewModel) {
	o.Attributes = v
}

// GetSteps returns the Steps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetSteps() WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel {
	if o == nil || IsNil(o.Steps.Get()) {
		var ret WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel
		return ret
	}
	return *o.Steps.Get()
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetStepsOk() (*WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Steps.Get(), o.Steps.IsSet()
}

// HasSteps returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasSteps() bool {
	if o != nil && o.Steps.IsSet() {
		return true
	}

	return false
}

// SetSteps gets a reference to the given NullableWorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel and assigns it to the Steps field.
func (o *WorkItemChangedFieldsViewModel) SetSteps(v WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel) {
	o.Steps.Set(&v)
}
// SetStepsNil sets the value for Steps to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetStepsNil() {
	o.Steps.Set(nil)
}

// UnsetSteps ensures that no value is present for Steps, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetSteps() {
	o.Steps.Unset()
}

// GetPreconditionSteps returns the PreconditionSteps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetPreconditionSteps() WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel {
	if o == nil || IsNil(o.PreconditionSteps.Get()) {
		var ret WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel
		return ret
	}
	return *o.PreconditionSteps.Get()
}

// GetPreconditionStepsOk returns a tuple with the PreconditionSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetPreconditionStepsOk() (*WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreconditionSteps.Get(), o.PreconditionSteps.IsSet()
}

// HasPreconditionSteps returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasPreconditionSteps() bool {
	if o != nil && o.PreconditionSteps.IsSet() {
		return true
	}

	return false
}

// SetPreconditionSteps gets a reference to the given NullableWorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel and assigns it to the PreconditionSteps field.
func (o *WorkItemChangedFieldsViewModel) SetPreconditionSteps(v WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel) {
	o.PreconditionSteps.Set(&v)
}
// SetPreconditionStepsNil sets the value for PreconditionSteps to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetPreconditionStepsNil() {
	o.PreconditionSteps.Set(nil)
}

// UnsetPreconditionSteps ensures that no value is present for PreconditionSteps, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetPreconditionSteps() {
	o.PreconditionSteps.Unset()
}

// GetPostconditionSteps returns the PostconditionSteps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetPostconditionSteps() WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel {
	if o == nil || IsNil(o.PostconditionSteps.Get()) {
		var ret WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel
		return ret
	}
	return *o.PostconditionSteps.Get()
}

// GetPostconditionStepsOk returns a tuple with the PostconditionSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetPostconditionStepsOk() (*WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostconditionSteps.Get(), o.PostconditionSteps.IsSet()
}

// HasPostconditionSteps returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasPostconditionSteps() bool {
	if o != nil && o.PostconditionSteps.IsSet() {
		return true
	}

	return false
}

// SetPostconditionSteps gets a reference to the given NullableWorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel and assigns it to the PostconditionSteps field.
func (o *WorkItemChangedFieldsViewModel) SetPostconditionSteps(v WorkItemStepChangeViewModelArrayChangedFieldWithDiffsViewModel) {
	o.PostconditionSteps.Set(&v)
}
// SetPostconditionStepsNil sets the value for PostconditionSteps to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetPostconditionStepsNil() {
	o.PostconditionSteps.Set(nil)
}

// UnsetPostconditionSteps ensures that no value is present for PostconditionSteps, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetPostconditionSteps() {
	o.PostconditionSteps.Unset()
}

// GetAutoTests returns the AutoTests field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetAutoTests() AutoTestChangeViewModelArrayChangedFieldViewModel {
	if o == nil || IsNil(o.AutoTests.Get()) {
		var ret AutoTestChangeViewModelArrayChangedFieldViewModel
		return ret
	}
	return *o.AutoTests.Get()
}

// GetAutoTestsOk returns a tuple with the AutoTests field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetAutoTestsOk() (*AutoTestChangeViewModelArrayChangedFieldViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoTests.Get(), o.AutoTests.IsSet()
}

// HasAutoTests returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasAutoTests() bool {
	if o != nil && o.AutoTests.IsSet() {
		return true
	}

	return false
}

// SetAutoTests gets a reference to the given NullableAutoTestChangeViewModelArrayChangedFieldViewModel and assigns it to the AutoTests field.
func (o *WorkItemChangedFieldsViewModel) SetAutoTests(v AutoTestChangeViewModelArrayChangedFieldViewModel) {
	o.AutoTests.Set(&v)
}
// SetAutoTestsNil sets the value for AutoTests to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetAutoTestsNil() {
	o.AutoTests.Set(nil)
}

// UnsetAutoTests ensures that no value is present for AutoTests, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetAutoTests() {
	o.AutoTests.Unset()
}

// GetAttachments returns the Attachments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetAttachments() AttachmentChangeViewModelArrayChangedFieldViewModel {
	if o == nil || IsNil(o.Attachments.Get()) {
		var ret AttachmentChangeViewModelArrayChangedFieldViewModel
		return ret
	}
	return *o.Attachments.Get()
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetAttachmentsOk() (*AttachmentChangeViewModelArrayChangedFieldViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attachments.Get(), o.Attachments.IsSet()
}

// HasAttachments returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasAttachments() bool {
	if o != nil && o.Attachments.IsSet() {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given NullableAttachmentChangeViewModelArrayChangedFieldViewModel and assigns it to the Attachments field.
func (o *WorkItemChangedFieldsViewModel) SetAttachments(v AttachmentChangeViewModelArrayChangedFieldViewModel) {
	o.Attachments.Set(&v)
}
// SetAttachmentsNil sets the value for Attachments to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetAttachmentsNil() {
	o.Attachments.Set(nil)
}

// UnsetAttachments ensures that no value is present for Attachments, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetAttachments() {
	o.Attachments.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetTags() StringArrayChangedFieldViewModel {
	if o == nil || IsNil(o.Tags.Get()) {
		var ret StringArrayChangedFieldViewModel
		return ret
	}
	return *o.Tags.Get()
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetTagsOk() (*StringArrayChangedFieldViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags.Get(), o.Tags.IsSet()
}

// HasTags returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasTags() bool {
	if o != nil && o.Tags.IsSet() {
		return true
	}

	return false
}

// SetTags gets a reference to the given NullableStringArrayChangedFieldViewModel and assigns it to the Tags field.
func (o *WorkItemChangedFieldsViewModel) SetTags(v StringArrayChangedFieldViewModel) {
	o.Tags.Set(&v)
}
// SetTagsNil sets the value for Tags to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetTagsNil() {
	o.Tags.Set(nil)
}

// UnsetTags ensures that no value is present for Tags, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetTags() {
	o.Tags.Unset()
}

// GetLinks returns the Links field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetLinks() WorkItemLinkChangeViewModelArrayChangedFieldViewModel {
	if o == nil || IsNil(o.Links.Get()) {
		var ret WorkItemLinkChangeViewModelArrayChangedFieldViewModel
		return ret
	}
	return *o.Links.Get()
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetLinksOk() (*WorkItemLinkChangeViewModelArrayChangedFieldViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Links.Get(), o.Links.IsSet()
}

// HasLinks returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasLinks() bool {
	if o != nil && o.Links.IsSet() {
		return true
	}

	return false
}

// SetLinks gets a reference to the given NullableWorkItemLinkChangeViewModelArrayChangedFieldViewModel and assigns it to the Links field.
func (o *WorkItemChangedFieldsViewModel) SetLinks(v WorkItemLinkChangeViewModelArrayChangedFieldViewModel) {
	o.Links.Set(&v)
}
// SetLinksNil sets the value for Links to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetLinksNil() {
	o.Links.Set(nil)
}

// UnsetLinks ensures that no value is present for Links, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetLinks() {
	o.Links.Unset()
}

// GetGlobalId returns the GlobalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetGlobalId() Int64ChangedFieldViewModel {
	if o == nil || IsNil(o.GlobalId.Get()) {
		var ret Int64ChangedFieldViewModel
		return ret
	}
	return *o.GlobalId.Get()
}

// GetGlobalIdOk returns a tuple with the GlobalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetGlobalIdOk() (*Int64ChangedFieldViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalId.Get(), o.GlobalId.IsSet()
}

// HasGlobalId returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasGlobalId() bool {
	if o != nil && o.GlobalId.IsSet() {
		return true
	}

	return false
}

// SetGlobalId gets a reference to the given NullableInt64ChangedFieldViewModel and assigns it to the GlobalId field.
func (o *WorkItemChangedFieldsViewModel) SetGlobalId(v Int64ChangedFieldViewModel) {
	o.GlobalId.Set(&v)
}
// SetGlobalIdNil sets the value for GlobalId to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetGlobalIdNil() {
	o.GlobalId.Set(nil)
}

// UnsetGlobalId ensures that no value is present for GlobalId, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetGlobalId() {
	o.GlobalId.Unset()
}

// GetVersionNumber returns the VersionNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetVersionNumber() Int32ChangedFieldViewModel {
	if o == nil || IsNil(o.VersionNumber.Get()) {
		var ret Int32ChangedFieldViewModel
		return ret
	}
	return *o.VersionNumber.Get()
}

// GetVersionNumberOk returns a tuple with the VersionNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetVersionNumberOk() (*Int32ChangedFieldViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.VersionNumber.Get(), o.VersionNumber.IsSet()
}

// HasVersionNumber returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasVersionNumber() bool {
	if o != nil && o.VersionNumber.IsSet() {
		return true
	}

	return false
}

// SetVersionNumber gets a reference to the given NullableInt32ChangedFieldViewModel and assigns it to the VersionNumber field.
func (o *WorkItemChangedFieldsViewModel) SetVersionNumber(v Int32ChangedFieldViewModel) {
	o.VersionNumber.Set(&v)
}
// SetVersionNumberNil sets the value for VersionNumber to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetVersionNumberNil() {
	o.VersionNumber.Set(nil)
}

// UnsetVersionNumber ensures that no value is present for VersionNumber, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetVersionNumber() {
	o.VersionNumber.Unset()
}

// GetEntityTypeName returns the EntityTypeName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemChangedFieldsViewModel) GetEntityTypeName() StringChangedFieldViewModel {
	if o == nil || IsNil(o.EntityTypeName.Get()) {
		var ret StringChangedFieldViewModel
		return ret
	}
	return *o.EntityTypeName.Get()
}

// GetEntityTypeNameOk returns a tuple with the EntityTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemChangedFieldsViewModel) GetEntityTypeNameOk() (*StringChangedFieldViewModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.EntityTypeName.Get(), o.EntityTypeName.IsSet()
}

// HasEntityTypeName returns a boolean if a field has been set.
func (o *WorkItemChangedFieldsViewModel) HasEntityTypeName() bool {
	if o != nil && o.EntityTypeName.IsSet() {
		return true
	}

	return false
}

// SetEntityTypeName gets a reference to the given NullableStringChangedFieldViewModel and assigns it to the EntityTypeName field.
func (o *WorkItemChangedFieldsViewModel) SetEntityTypeName(v StringChangedFieldViewModel) {
	o.EntityTypeName.Set(&v)
}
// SetEntityTypeNameNil sets the value for EntityTypeName to be an explicit nil
func (o *WorkItemChangedFieldsViewModel) SetEntityTypeNameNil() {
	o.EntityTypeName.Set(nil)
}

// UnsetEntityTypeName ensures that no value is present for EntityTypeName, not even an explicit nil
func (o *WorkItemChangedFieldsViewModel) UnsetEntityTypeName() {
	o.EntityTypeName.Unset()
}

func (o WorkItemChangedFieldsViewModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkItemChangedFieldsViewModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.IsDeleted.IsSet() {
		toSerialize["isDeleted"] = o.IsDeleted.Get()
	}
	if o.ProjectId.IsSet() {
		toSerialize["projectId"] = o.ProjectId.Get()
	}
	if o.IsAutomated.IsSet() {
		toSerialize["isAutomated"] = o.IsAutomated.Get()
	}
	if o.SectionId.IsSet() {
		toSerialize["sectionId"] = o.SectionId.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.Duration.IsSet() {
		toSerialize["duration"] = o.Duration.Get()
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	if o.Steps.IsSet() {
		toSerialize["steps"] = o.Steps.Get()
	}
	if o.PreconditionSteps.IsSet() {
		toSerialize["preconditionSteps"] = o.PreconditionSteps.Get()
	}
	if o.PostconditionSteps.IsSet() {
		toSerialize["postconditionSteps"] = o.PostconditionSteps.Get()
	}
	if o.AutoTests.IsSet() {
		toSerialize["autoTests"] = o.AutoTests.Get()
	}
	if o.Attachments.IsSet() {
		toSerialize["attachments"] = o.Attachments.Get()
	}
	if o.Tags.IsSet() {
		toSerialize["tags"] = o.Tags.Get()
	}
	if o.Links.IsSet() {
		toSerialize["links"] = o.Links.Get()
	}
	if o.GlobalId.IsSet() {
		toSerialize["globalId"] = o.GlobalId.Get()
	}
	if o.VersionNumber.IsSet() {
		toSerialize["versionNumber"] = o.VersionNumber.Get()
	}
	if o.EntityTypeName.IsSet() {
		toSerialize["entityTypeName"] = o.EntityTypeName.Get()
	}
	return toSerialize, nil
}

type NullableWorkItemChangedFieldsViewModel struct {
	value *WorkItemChangedFieldsViewModel
	isSet bool
}

func (v NullableWorkItemChangedFieldsViewModel) Get() *WorkItemChangedFieldsViewModel {
	return v.value
}

func (v *NullableWorkItemChangedFieldsViewModel) Set(val *WorkItemChangedFieldsViewModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkItemChangedFieldsViewModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkItemChangedFieldsViewModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkItemChangedFieldsViewModel(val *WorkItemChangedFieldsViewModel) *NullableWorkItemChangedFieldsViewModel {
	return &NullableWorkItemChangedFieldsViewModel{value: val, isSet: true}
}

func (v NullableWorkItemChangedFieldsViewModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkItemChangedFieldsViewModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


