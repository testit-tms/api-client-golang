/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"time"
)

// checks if the SharedStepReferenceModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SharedStepReferenceModel{}

// SharedStepReferenceModel struct for SharedStepReferenceModel
type SharedStepReferenceModel struct {
	Id *string `json:"id,omitempty"`
	GlobalId *int64 `json:"globalId,omitempty"`
	Name NullableString `json:"name,omitempty"`
	EntityTypeName NullableString `json:"entityTypeName,omitempty"`
	HasThisSharedStepAsStep *bool `json:"hasThisSharedStepAsStep,omitempty"`
	HasThisSharedStepAsPrecondition *bool `json:"hasThisSharedStepAsPrecondition,omitempty"`
	HasThisSharedStepAsPostcondition *bool `json:"hasThisSharedStepAsPostcondition,omitempty"`
	CreatedById *string `json:"createdById,omitempty"`
	ModifiedById NullableString `json:"modifiedById,omitempty"`
	CreatedDate NullableTime `json:"createdDate,omitempty"`
	ModifiedDate NullableTime `json:"modifiedDate,omitempty"`
	State NullableString `json:"state,omitempty"`
	Priority WorkItemPriorityModel `json:"priority"`
	IsDeleted *bool `json:"isDeleted,omitempty"`
	// used for versioning changes in workitem
	VersionId *string `json:"versionId,omitempty"`
	IsAutomated *bool `json:"isAutomated,omitempty"`
	SectionId *string `json:"sectionId,omitempty"`
	Tags []TagShortModel `json:"tags,omitempty"`
}

// NewSharedStepReferenceModel instantiates a new SharedStepReferenceModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharedStepReferenceModel(priority WorkItemPriorityModel) *SharedStepReferenceModel {
	this := SharedStepReferenceModel{}
	this.Priority = priority
	return &this
}

// NewSharedStepReferenceModelWithDefaults instantiates a new SharedStepReferenceModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharedStepReferenceModelWithDefaults() *SharedStepReferenceModel {
	this := SharedStepReferenceModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SharedStepReferenceModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedStepReferenceModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SharedStepReferenceModel) SetId(v string) {
	o.Id = &v
}

// GetGlobalId returns the GlobalId field value if set, zero value otherwise.
func (o *SharedStepReferenceModel) GetGlobalId() int64 {
	if o == nil || IsNil(o.GlobalId) {
		var ret int64
		return ret
	}
	return *o.GlobalId
}

// GetGlobalIdOk returns a tuple with the GlobalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedStepReferenceModel) GetGlobalIdOk() (*int64, bool) {
	if o == nil || IsNil(o.GlobalId) {
		return nil, false
	}
	return o.GlobalId, true
}

// HasGlobalId returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasGlobalId() bool {
	if o != nil && !IsNil(o.GlobalId) {
		return true
	}

	return false
}

// SetGlobalId gets a reference to the given int64 and assigns it to the GlobalId field.
func (o *SharedStepReferenceModel) SetGlobalId(v int64) {
	o.GlobalId = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedStepReferenceModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedStepReferenceModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *SharedStepReferenceModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *SharedStepReferenceModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *SharedStepReferenceModel) UnsetName() {
	o.Name.Unset()
}

// GetEntityTypeName returns the EntityTypeName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedStepReferenceModel) GetEntityTypeName() string {
	if o == nil || IsNil(o.EntityTypeName.Get()) {
		var ret string
		return ret
	}
	return *o.EntityTypeName.Get()
}

// GetEntityTypeNameOk returns a tuple with the EntityTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedStepReferenceModel) GetEntityTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EntityTypeName.Get(), o.EntityTypeName.IsSet()
}

// HasEntityTypeName returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasEntityTypeName() bool {
	if o != nil && o.EntityTypeName.IsSet() {
		return true
	}

	return false
}

// SetEntityTypeName gets a reference to the given NullableString and assigns it to the EntityTypeName field.
func (o *SharedStepReferenceModel) SetEntityTypeName(v string) {
	o.EntityTypeName.Set(&v)
}
// SetEntityTypeNameNil sets the value for EntityTypeName to be an explicit nil
func (o *SharedStepReferenceModel) SetEntityTypeNameNil() {
	o.EntityTypeName.Set(nil)
}

// UnsetEntityTypeName ensures that no value is present for EntityTypeName, not even an explicit nil
func (o *SharedStepReferenceModel) UnsetEntityTypeName() {
	o.EntityTypeName.Unset()
}

// GetHasThisSharedStepAsStep returns the HasThisSharedStepAsStep field value if set, zero value otherwise.
func (o *SharedStepReferenceModel) GetHasThisSharedStepAsStep() bool {
	if o == nil || IsNil(o.HasThisSharedStepAsStep) {
		var ret bool
		return ret
	}
	return *o.HasThisSharedStepAsStep
}

// GetHasThisSharedStepAsStepOk returns a tuple with the HasThisSharedStepAsStep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedStepReferenceModel) GetHasThisSharedStepAsStepOk() (*bool, bool) {
	if o == nil || IsNil(o.HasThisSharedStepAsStep) {
		return nil, false
	}
	return o.HasThisSharedStepAsStep, true
}

// HasHasThisSharedStepAsStep returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasHasThisSharedStepAsStep() bool {
	if o != nil && !IsNil(o.HasThisSharedStepAsStep) {
		return true
	}

	return false
}

// SetHasThisSharedStepAsStep gets a reference to the given bool and assigns it to the HasThisSharedStepAsStep field.
func (o *SharedStepReferenceModel) SetHasThisSharedStepAsStep(v bool) {
	o.HasThisSharedStepAsStep = &v
}

// GetHasThisSharedStepAsPrecondition returns the HasThisSharedStepAsPrecondition field value if set, zero value otherwise.
func (o *SharedStepReferenceModel) GetHasThisSharedStepAsPrecondition() bool {
	if o == nil || IsNil(o.HasThisSharedStepAsPrecondition) {
		var ret bool
		return ret
	}
	return *o.HasThisSharedStepAsPrecondition
}

// GetHasThisSharedStepAsPreconditionOk returns a tuple with the HasThisSharedStepAsPrecondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedStepReferenceModel) GetHasThisSharedStepAsPreconditionOk() (*bool, bool) {
	if o == nil || IsNil(o.HasThisSharedStepAsPrecondition) {
		return nil, false
	}
	return o.HasThisSharedStepAsPrecondition, true
}

// HasHasThisSharedStepAsPrecondition returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasHasThisSharedStepAsPrecondition() bool {
	if o != nil && !IsNil(o.HasThisSharedStepAsPrecondition) {
		return true
	}

	return false
}

// SetHasThisSharedStepAsPrecondition gets a reference to the given bool and assigns it to the HasThisSharedStepAsPrecondition field.
func (o *SharedStepReferenceModel) SetHasThisSharedStepAsPrecondition(v bool) {
	o.HasThisSharedStepAsPrecondition = &v
}

// GetHasThisSharedStepAsPostcondition returns the HasThisSharedStepAsPostcondition field value if set, zero value otherwise.
func (o *SharedStepReferenceModel) GetHasThisSharedStepAsPostcondition() bool {
	if o == nil || IsNil(o.HasThisSharedStepAsPostcondition) {
		var ret bool
		return ret
	}
	return *o.HasThisSharedStepAsPostcondition
}

// GetHasThisSharedStepAsPostconditionOk returns a tuple with the HasThisSharedStepAsPostcondition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedStepReferenceModel) GetHasThisSharedStepAsPostconditionOk() (*bool, bool) {
	if o == nil || IsNil(o.HasThisSharedStepAsPostcondition) {
		return nil, false
	}
	return o.HasThisSharedStepAsPostcondition, true
}

// HasHasThisSharedStepAsPostcondition returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasHasThisSharedStepAsPostcondition() bool {
	if o != nil && !IsNil(o.HasThisSharedStepAsPostcondition) {
		return true
	}

	return false
}

// SetHasThisSharedStepAsPostcondition gets a reference to the given bool and assigns it to the HasThisSharedStepAsPostcondition field.
func (o *SharedStepReferenceModel) SetHasThisSharedStepAsPostcondition(v bool) {
	o.HasThisSharedStepAsPostcondition = &v
}

// GetCreatedById returns the CreatedById field value if set, zero value otherwise.
func (o *SharedStepReferenceModel) GetCreatedById() string {
	if o == nil || IsNil(o.CreatedById) {
		var ret string
		return ret
	}
	return *o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedStepReferenceModel) GetCreatedByIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedById) {
		return nil, false
	}
	return o.CreatedById, true
}

// HasCreatedById returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasCreatedById() bool {
	if o != nil && !IsNil(o.CreatedById) {
		return true
	}

	return false
}

// SetCreatedById gets a reference to the given string and assigns it to the CreatedById field.
func (o *SharedStepReferenceModel) SetCreatedById(v string) {
	o.CreatedById = &v
}

// GetModifiedById returns the ModifiedById field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedStepReferenceModel) GetModifiedById() string {
	if o == nil || IsNil(o.ModifiedById.Get()) {
		var ret string
		return ret
	}
	return *o.ModifiedById.Get()
}

// GetModifiedByIdOk returns a tuple with the ModifiedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedStepReferenceModel) GetModifiedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedById.Get(), o.ModifiedById.IsSet()
}

// HasModifiedById returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasModifiedById() bool {
	if o != nil && o.ModifiedById.IsSet() {
		return true
	}

	return false
}

// SetModifiedById gets a reference to the given NullableString and assigns it to the ModifiedById field.
func (o *SharedStepReferenceModel) SetModifiedById(v string) {
	o.ModifiedById.Set(&v)
}
// SetModifiedByIdNil sets the value for ModifiedById to be an explicit nil
func (o *SharedStepReferenceModel) SetModifiedByIdNil() {
	o.ModifiedById.Set(nil)
}

// UnsetModifiedById ensures that no value is present for ModifiedById, not even an explicit nil
func (o *SharedStepReferenceModel) UnsetModifiedById() {
	o.ModifiedById.Unset()
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedStepReferenceModel) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate.Get()
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedStepReferenceModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedDate.Get(), o.CreatedDate.IsSet()
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasCreatedDate() bool {
	if o != nil && o.CreatedDate.IsSet() {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given NullableTime and assigns it to the CreatedDate field.
func (o *SharedStepReferenceModel) SetCreatedDate(v time.Time) {
	o.CreatedDate.Set(&v)
}
// SetCreatedDateNil sets the value for CreatedDate to be an explicit nil
func (o *SharedStepReferenceModel) SetCreatedDateNil() {
	o.CreatedDate.Set(nil)
}

// UnsetCreatedDate ensures that no value is present for CreatedDate, not even an explicit nil
func (o *SharedStepReferenceModel) UnsetCreatedDate() {
	o.CreatedDate.Unset()
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedStepReferenceModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate.Get()
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedStepReferenceModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedDate.Get(), o.ModifiedDate.IsSet()
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasModifiedDate() bool {
	if o != nil && o.ModifiedDate.IsSet() {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given NullableTime and assigns it to the ModifiedDate field.
func (o *SharedStepReferenceModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate.Set(&v)
}
// SetModifiedDateNil sets the value for ModifiedDate to be an explicit nil
func (o *SharedStepReferenceModel) SetModifiedDateNil() {
	o.ModifiedDate.Set(nil)
}

// UnsetModifiedDate ensures that no value is present for ModifiedDate, not even an explicit nil
func (o *SharedStepReferenceModel) UnsetModifiedDate() {
	o.ModifiedDate.Unset()
}

// GetState returns the State field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedStepReferenceModel) GetState() string {
	if o == nil || IsNil(o.State.Get()) {
		var ret string
		return ret
	}
	return *o.State.Get()
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedStepReferenceModel) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.State.Get(), o.State.IsSet()
}

// HasState returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasState() bool {
	if o != nil && o.State.IsSet() {
		return true
	}

	return false
}

// SetState gets a reference to the given NullableString and assigns it to the State field.
func (o *SharedStepReferenceModel) SetState(v string) {
	o.State.Set(&v)
}
// SetStateNil sets the value for State to be an explicit nil
func (o *SharedStepReferenceModel) SetStateNil() {
	o.State.Set(nil)
}

// UnsetState ensures that no value is present for State, not even an explicit nil
func (o *SharedStepReferenceModel) UnsetState() {
	o.State.Unset()
}

// GetPriority returns the Priority field value
func (o *SharedStepReferenceModel) GetPriority() WorkItemPriorityModel {
	if o == nil {
		var ret WorkItemPriorityModel
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *SharedStepReferenceModel) GetPriorityOk() (*WorkItemPriorityModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *SharedStepReferenceModel) SetPriority(v WorkItemPriorityModel) {
	o.Priority = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *SharedStepReferenceModel) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedStepReferenceModel) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *SharedStepReferenceModel) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetVersionId returns the VersionId field value if set, zero value otherwise.
func (o *SharedStepReferenceModel) GetVersionId() string {
	if o == nil || IsNil(o.VersionId) {
		var ret string
		return ret
	}
	return *o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedStepReferenceModel) GetVersionIdOk() (*string, bool) {
	if o == nil || IsNil(o.VersionId) {
		return nil, false
	}
	return o.VersionId, true
}

// HasVersionId returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasVersionId() bool {
	if o != nil && !IsNil(o.VersionId) {
		return true
	}

	return false
}

// SetVersionId gets a reference to the given string and assigns it to the VersionId field.
func (o *SharedStepReferenceModel) SetVersionId(v string) {
	o.VersionId = &v
}

// GetIsAutomated returns the IsAutomated field value if set, zero value otherwise.
func (o *SharedStepReferenceModel) GetIsAutomated() bool {
	if o == nil || IsNil(o.IsAutomated) {
		var ret bool
		return ret
	}
	return *o.IsAutomated
}

// GetIsAutomatedOk returns a tuple with the IsAutomated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedStepReferenceModel) GetIsAutomatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutomated) {
		return nil, false
	}
	return o.IsAutomated, true
}

// HasIsAutomated returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasIsAutomated() bool {
	if o != nil && !IsNil(o.IsAutomated) {
		return true
	}

	return false
}

// SetIsAutomated gets a reference to the given bool and assigns it to the IsAutomated field.
func (o *SharedStepReferenceModel) SetIsAutomated(v bool) {
	o.IsAutomated = &v
}

// GetSectionId returns the SectionId field value if set, zero value otherwise.
func (o *SharedStepReferenceModel) GetSectionId() string {
	if o == nil || IsNil(o.SectionId) {
		var ret string
		return ret
	}
	return *o.SectionId
}

// GetSectionIdOk returns a tuple with the SectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedStepReferenceModel) GetSectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SectionId) {
		return nil, false
	}
	return o.SectionId, true
}

// HasSectionId returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasSectionId() bool {
	if o != nil && !IsNil(o.SectionId) {
		return true
	}

	return false
}

// SetSectionId gets a reference to the given string and assigns it to the SectionId field.
func (o *SharedStepReferenceModel) SetSectionId(v string) {
	o.SectionId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SharedStepReferenceModel) GetTags() []TagShortModel {
	if o == nil {
		var ret []TagShortModel
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SharedStepReferenceModel) GetTagsOk() ([]TagShortModel, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SharedStepReferenceModel) HasTags() bool {
	if o != nil && IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []TagShortModel and assigns it to the Tags field.
func (o *SharedStepReferenceModel) SetTags(v []TagShortModel) {
	o.Tags = v
}

func (o SharedStepReferenceModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SharedStepReferenceModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.GlobalId) {
		toSerialize["globalId"] = o.GlobalId
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.EntityTypeName.IsSet() {
		toSerialize["entityTypeName"] = o.EntityTypeName.Get()
	}
	if !IsNil(o.HasThisSharedStepAsStep) {
		toSerialize["hasThisSharedStepAsStep"] = o.HasThisSharedStepAsStep
	}
	if !IsNil(o.HasThisSharedStepAsPrecondition) {
		toSerialize["hasThisSharedStepAsPrecondition"] = o.HasThisSharedStepAsPrecondition
	}
	if !IsNil(o.HasThisSharedStepAsPostcondition) {
		toSerialize["hasThisSharedStepAsPostcondition"] = o.HasThisSharedStepAsPostcondition
	}
	if !IsNil(o.CreatedById) {
		toSerialize["createdById"] = o.CreatedById
	}
	if o.ModifiedById.IsSet() {
		toSerialize["modifiedById"] = o.ModifiedById.Get()
	}
	if o.CreatedDate.IsSet() {
		toSerialize["createdDate"] = o.CreatedDate.Get()
	}
	if o.ModifiedDate.IsSet() {
		toSerialize["modifiedDate"] = o.ModifiedDate.Get()
	}
	if o.State.IsSet() {
		toSerialize["state"] = o.State.Get()
	}
	toSerialize["priority"] = o.Priority
	if !IsNil(o.IsDeleted) {
		toSerialize["isDeleted"] = o.IsDeleted
	}
	if !IsNil(o.VersionId) {
		toSerialize["versionId"] = o.VersionId
	}
	if !IsNil(o.IsAutomated) {
		toSerialize["isAutomated"] = o.IsAutomated
	}
	if !IsNil(o.SectionId) {
		toSerialize["sectionId"] = o.SectionId
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableSharedStepReferenceModel struct {
	value *SharedStepReferenceModel
	isSet bool
}

func (v NullableSharedStepReferenceModel) Get() *SharedStepReferenceModel {
	return v.value
}

func (v *NullableSharedStepReferenceModel) Set(val *SharedStepReferenceModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSharedStepReferenceModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSharedStepReferenceModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharedStepReferenceModel(val *SharedStepReferenceModel) *NullableSharedStepReferenceModel {
	return &NullableSharedStepReferenceModel{value: val, isSet: true}
}

func (v NullableSharedStepReferenceModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharedStepReferenceModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


