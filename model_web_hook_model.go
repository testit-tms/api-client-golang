/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the WebHookModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebHookModel{}

// WebHookModel struct for WebHookModel
type WebHookModel struct {
	// Name of the webhook
	Name string `json:"name"`
	// Type of event which triggers the webhook
	EventType WebHookEventTypeModel `json:"eventType"`
	// Description of the webhook
	Description NullableString `json:"description,omitempty"`
	// Url to which the webhook sends request
	Url string `json:"url"`
	// Method which the webhook uses
	RequestType RequestTypeModel `json:"requestType"`
	// Indicates if the webhook sends body
	ShouldSendBody bool `json:"shouldSendBody"`
	// Collection of headers which the webhook sends
	Headers map[string]string `json:"headers,omitempty"`
	// Collection of query parameters which the webhook sends
	QueryParameters map[string]string `json:"queryParameters,omitempty"`
	// Indicates if the webhook is active
	IsEnabled bool `json:"isEnabled"`
	// Indicates if the webhook sends custom body
	ShouldSendCustomBody bool `json:"shouldSendCustomBody"`
	// Custom body of the webhook
	CustomBody NullableString `json:"customBody,omitempty"`
	// MIME type of body of the webhook
	CustomBodyMediaType NullableString `json:"customBodyMediaType,omitempty"`
	// Indicates if the webhook injects parameters
	ShouldReplaceParameters bool `json:"shouldReplaceParameters"`
	// Indicates if the webhook escapes invalid characters in parameters
	ShouldEscapeParameters bool `json:"shouldEscapeParameters"`
	// Creation date of the webhook
	CreatedDate time.Time `json:"createdDate"`
	// Unique ID of user who created the webhook
	CreatedById string `json:"createdById"`
	// Last modification date of the webhook
	ModifiedDate NullableTime `json:"modifiedDate,omitempty"`
	// Unique ID of user who modified the webhook last time
	ModifiedById NullableString `json:"modifiedById,omitempty"`
	// Unique ID of project where the webhook is located
	ProjectId string `json:"projectId"`
	// Unique ID of the entity
	Id string `json:"id"`
	// Indicates if the entity is deleted
	IsDeleted bool `json:"isDeleted"`
}

type _WebHookModel WebHookModel

// NewWebHookModel instantiates a new WebHookModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebHookModel(name string, eventType WebHookEventTypeModel, url string, requestType RequestTypeModel, shouldSendBody bool, isEnabled bool, shouldSendCustomBody bool, shouldReplaceParameters bool, shouldEscapeParameters bool, createdDate time.Time, createdById string, projectId string, id string, isDeleted bool) *WebHookModel {
	this := WebHookModel{}
	this.Name = name
	this.EventType = eventType
	this.Url = url
	this.RequestType = requestType
	this.ShouldSendBody = shouldSendBody
	this.IsEnabled = isEnabled
	this.ShouldSendCustomBody = shouldSendCustomBody
	this.ShouldReplaceParameters = shouldReplaceParameters
	this.ShouldEscapeParameters = shouldEscapeParameters
	this.CreatedDate = createdDate
	this.CreatedById = createdById
	this.ProjectId = projectId
	this.Id = id
	this.IsDeleted = isDeleted
	return &this
}

// NewWebHookModelWithDefaults instantiates a new WebHookModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebHookModelWithDefaults() *WebHookModel {
	this := WebHookModel{}
	return &this
}

// GetName returns the Name field value
func (o *WebHookModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WebHookModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WebHookModel) SetName(v string) {
	o.Name = v
}

// GetEventType returns the EventType field value
func (o *WebHookModel) GetEventType() WebHookEventTypeModel {
	if o == nil {
		var ret WebHookEventTypeModel
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *WebHookModel) GetEventTypeOk() (*WebHookEventTypeModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *WebHookModel) SetEventType(v WebHookEventTypeModel) {
	o.EventType = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebHookModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebHookModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *WebHookModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *WebHookModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *WebHookModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *WebHookModel) UnsetDescription() {
	o.Description.Unset()
}

// GetUrl returns the Url field value
func (o *WebHookModel) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WebHookModel) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WebHookModel) SetUrl(v string) {
	o.Url = v
}

// GetRequestType returns the RequestType field value
func (o *WebHookModel) GetRequestType() RequestTypeModel {
	if o == nil {
		var ret RequestTypeModel
		return ret
	}

	return o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value
// and a boolean to check if the value has been set.
func (o *WebHookModel) GetRequestTypeOk() (*RequestTypeModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestType, true
}

// SetRequestType sets field value
func (o *WebHookModel) SetRequestType(v RequestTypeModel) {
	o.RequestType = v
}

// GetShouldSendBody returns the ShouldSendBody field value
func (o *WebHookModel) GetShouldSendBody() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShouldSendBody
}

// GetShouldSendBodyOk returns a tuple with the ShouldSendBody field value
// and a boolean to check if the value has been set.
func (o *WebHookModel) GetShouldSendBodyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShouldSendBody, true
}

// SetShouldSendBody sets field value
func (o *WebHookModel) SetShouldSendBody(v bool) {
	o.ShouldSendBody = v
}

// GetHeaders returns the Headers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebHookModel) GetHeaders() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebHookModel) GetHeadersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return &o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *WebHookModel) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]string and assigns it to the Headers field.
func (o *WebHookModel) SetHeaders(v map[string]string) {
	o.Headers = v
}

// GetQueryParameters returns the QueryParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebHookModel) GetQueryParameters() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.QueryParameters
}

// GetQueryParametersOk returns a tuple with the QueryParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebHookModel) GetQueryParametersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.QueryParameters) {
		return nil, false
	}
	return &o.QueryParameters, true
}

// HasQueryParameters returns a boolean if a field has been set.
func (o *WebHookModel) HasQueryParameters() bool {
	if o != nil && !IsNil(o.QueryParameters) {
		return true
	}

	return false
}

// SetQueryParameters gets a reference to the given map[string]string and assigns it to the QueryParameters field.
func (o *WebHookModel) SetQueryParameters(v map[string]string) {
	o.QueryParameters = v
}

// GetIsEnabled returns the IsEnabled field value
func (o *WebHookModel) GetIsEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *WebHookModel) GetIsEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *WebHookModel) SetIsEnabled(v bool) {
	o.IsEnabled = v
}

// GetShouldSendCustomBody returns the ShouldSendCustomBody field value
func (o *WebHookModel) GetShouldSendCustomBody() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShouldSendCustomBody
}

// GetShouldSendCustomBodyOk returns a tuple with the ShouldSendCustomBody field value
// and a boolean to check if the value has been set.
func (o *WebHookModel) GetShouldSendCustomBodyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShouldSendCustomBody, true
}

// SetShouldSendCustomBody sets field value
func (o *WebHookModel) SetShouldSendCustomBody(v bool) {
	o.ShouldSendCustomBody = v
}

// GetCustomBody returns the CustomBody field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebHookModel) GetCustomBody() string {
	if o == nil || IsNil(o.CustomBody.Get()) {
		var ret string
		return ret
	}
	return *o.CustomBody.Get()
}

// GetCustomBodyOk returns a tuple with the CustomBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebHookModel) GetCustomBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomBody.Get(), o.CustomBody.IsSet()
}

// HasCustomBody returns a boolean if a field has been set.
func (o *WebHookModel) HasCustomBody() bool {
	if o != nil && o.CustomBody.IsSet() {
		return true
	}

	return false
}

// SetCustomBody gets a reference to the given NullableString and assigns it to the CustomBody field.
func (o *WebHookModel) SetCustomBody(v string) {
	o.CustomBody.Set(&v)
}
// SetCustomBodyNil sets the value for CustomBody to be an explicit nil
func (o *WebHookModel) SetCustomBodyNil() {
	o.CustomBody.Set(nil)
}

// UnsetCustomBody ensures that no value is present for CustomBody, not even an explicit nil
func (o *WebHookModel) UnsetCustomBody() {
	o.CustomBody.Unset()
}

// GetCustomBodyMediaType returns the CustomBodyMediaType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebHookModel) GetCustomBodyMediaType() string {
	if o == nil || IsNil(o.CustomBodyMediaType.Get()) {
		var ret string
		return ret
	}
	return *o.CustomBodyMediaType.Get()
}

// GetCustomBodyMediaTypeOk returns a tuple with the CustomBodyMediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebHookModel) GetCustomBodyMediaTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomBodyMediaType.Get(), o.CustomBodyMediaType.IsSet()
}

// HasCustomBodyMediaType returns a boolean if a field has been set.
func (o *WebHookModel) HasCustomBodyMediaType() bool {
	if o != nil && o.CustomBodyMediaType.IsSet() {
		return true
	}

	return false
}

// SetCustomBodyMediaType gets a reference to the given NullableString and assigns it to the CustomBodyMediaType field.
func (o *WebHookModel) SetCustomBodyMediaType(v string) {
	o.CustomBodyMediaType.Set(&v)
}
// SetCustomBodyMediaTypeNil sets the value for CustomBodyMediaType to be an explicit nil
func (o *WebHookModel) SetCustomBodyMediaTypeNil() {
	o.CustomBodyMediaType.Set(nil)
}

// UnsetCustomBodyMediaType ensures that no value is present for CustomBodyMediaType, not even an explicit nil
func (o *WebHookModel) UnsetCustomBodyMediaType() {
	o.CustomBodyMediaType.Unset()
}

// GetShouldReplaceParameters returns the ShouldReplaceParameters field value
func (o *WebHookModel) GetShouldReplaceParameters() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShouldReplaceParameters
}

// GetShouldReplaceParametersOk returns a tuple with the ShouldReplaceParameters field value
// and a boolean to check if the value has been set.
func (o *WebHookModel) GetShouldReplaceParametersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShouldReplaceParameters, true
}

// SetShouldReplaceParameters sets field value
func (o *WebHookModel) SetShouldReplaceParameters(v bool) {
	o.ShouldReplaceParameters = v
}

// GetShouldEscapeParameters returns the ShouldEscapeParameters field value
func (o *WebHookModel) GetShouldEscapeParameters() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShouldEscapeParameters
}

// GetShouldEscapeParametersOk returns a tuple with the ShouldEscapeParameters field value
// and a boolean to check if the value has been set.
func (o *WebHookModel) GetShouldEscapeParametersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShouldEscapeParameters, true
}

// SetShouldEscapeParameters sets field value
func (o *WebHookModel) SetShouldEscapeParameters(v bool) {
	o.ShouldEscapeParameters = v
}

// GetCreatedDate returns the CreatedDate field value
func (o *WebHookModel) GetCreatedDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value
// and a boolean to check if the value has been set.
func (o *WebHookModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedDate, true
}

// SetCreatedDate sets field value
func (o *WebHookModel) SetCreatedDate(v time.Time) {
	o.CreatedDate = v
}

// GetCreatedById returns the CreatedById field value
func (o *WebHookModel) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *WebHookModel) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *WebHookModel) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebHookModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate.Get()
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebHookModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedDate.Get(), o.ModifiedDate.IsSet()
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *WebHookModel) HasModifiedDate() bool {
	if o != nil && o.ModifiedDate.IsSet() {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given NullableTime and assigns it to the ModifiedDate field.
func (o *WebHookModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate.Set(&v)
}
// SetModifiedDateNil sets the value for ModifiedDate to be an explicit nil
func (o *WebHookModel) SetModifiedDateNil() {
	o.ModifiedDate.Set(nil)
}

// UnsetModifiedDate ensures that no value is present for ModifiedDate, not even an explicit nil
func (o *WebHookModel) UnsetModifiedDate() {
	o.ModifiedDate.Unset()
}

// GetModifiedById returns the ModifiedById field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WebHookModel) GetModifiedById() string {
	if o == nil || IsNil(o.ModifiedById.Get()) {
		var ret string
		return ret
	}
	return *o.ModifiedById.Get()
}

// GetModifiedByIdOk returns a tuple with the ModifiedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebHookModel) GetModifiedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedById.Get(), o.ModifiedById.IsSet()
}

// HasModifiedById returns a boolean if a field has been set.
func (o *WebHookModel) HasModifiedById() bool {
	if o != nil && o.ModifiedById.IsSet() {
		return true
	}

	return false
}

// SetModifiedById gets a reference to the given NullableString and assigns it to the ModifiedById field.
func (o *WebHookModel) SetModifiedById(v string) {
	o.ModifiedById.Set(&v)
}
// SetModifiedByIdNil sets the value for ModifiedById to be an explicit nil
func (o *WebHookModel) SetModifiedByIdNil() {
	o.ModifiedById.Set(nil)
}

// UnsetModifiedById ensures that no value is present for ModifiedById, not even an explicit nil
func (o *WebHookModel) UnsetModifiedById() {
	o.ModifiedById.Unset()
}

// GetProjectId returns the ProjectId field value
func (o *WebHookModel) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *WebHookModel) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *WebHookModel) SetProjectId(v string) {
	o.ProjectId = v
}

// GetId returns the Id field value
func (o *WebHookModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WebHookModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WebHookModel) SetId(v string) {
	o.Id = v
}

// GetIsDeleted returns the IsDeleted field value
func (o *WebHookModel) GetIsDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value
// and a boolean to check if the value has been set.
func (o *WebHookModel) GetIsDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDeleted, true
}

// SetIsDeleted sets field value
func (o *WebHookModel) SetIsDeleted(v bool) {
	o.IsDeleted = v
}

func (o WebHookModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebHookModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["eventType"] = o.EventType
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["url"] = o.Url
	toSerialize["requestType"] = o.RequestType
	toSerialize["shouldSendBody"] = o.ShouldSendBody
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	if o.QueryParameters != nil {
		toSerialize["queryParameters"] = o.QueryParameters
	}
	toSerialize["isEnabled"] = o.IsEnabled
	toSerialize["shouldSendCustomBody"] = o.ShouldSendCustomBody
	if o.CustomBody.IsSet() {
		toSerialize["customBody"] = o.CustomBody.Get()
	}
	if o.CustomBodyMediaType.IsSet() {
		toSerialize["customBodyMediaType"] = o.CustomBodyMediaType.Get()
	}
	toSerialize["shouldReplaceParameters"] = o.ShouldReplaceParameters
	toSerialize["shouldEscapeParameters"] = o.ShouldEscapeParameters
	toSerialize["createdDate"] = o.CreatedDate
	toSerialize["createdById"] = o.CreatedById
	if o.ModifiedDate.IsSet() {
		toSerialize["modifiedDate"] = o.ModifiedDate.Get()
	}
	if o.ModifiedById.IsSet() {
		toSerialize["modifiedById"] = o.ModifiedById.Get()
	}
	toSerialize["projectId"] = o.ProjectId
	toSerialize["id"] = o.Id
	toSerialize["isDeleted"] = o.IsDeleted
	return toSerialize, nil
}

func (o *WebHookModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"eventType",
		"url",
		"requestType",
		"shouldSendBody",
		"isEnabled",
		"shouldSendCustomBody",
		"shouldReplaceParameters",
		"shouldEscapeParameters",
		"createdDate",
		"createdById",
		"projectId",
		"id",
		"isDeleted",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebHookModel := _WebHookModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebHookModel)

	if err != nil {
		return err
	}

	*o = WebHookModel(varWebHookModel)

	return err
}

type NullableWebHookModel struct {
	value *WebHookModel
	isSet bool
}

func (v NullableWebHookModel) Get() *WebHookModel {
	return v.value
}

func (v *NullableWebHookModel) Set(val *WebHookModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWebHookModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWebHookModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebHookModel(val *WebHookModel) *NullableWebHookModel {
	return &NullableWebHookModel{value: val, isSet: true}
}

func (v NullableWebHookModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebHookModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


