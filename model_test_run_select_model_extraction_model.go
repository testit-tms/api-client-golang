/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the TestRunSelectModelExtractionModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestRunSelectModelExtractionModel{}

// TestRunSelectModelExtractionModel Rules for different level entities inclusion/exclusion
type TestRunSelectModelExtractionModel struct {
	Ids NullableTestRunExtractionModelIds `json:"ids,omitempty"`
}

// NewTestRunSelectModelExtractionModel instantiates a new TestRunSelectModelExtractionModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestRunSelectModelExtractionModel() *TestRunSelectModelExtractionModel {
	this := TestRunSelectModelExtractionModel{}
	return &this
}

// NewTestRunSelectModelExtractionModelWithDefaults instantiates a new TestRunSelectModelExtractionModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestRunSelectModelExtractionModelWithDefaults() *TestRunSelectModelExtractionModel {
	this := TestRunSelectModelExtractionModel{}
	return &this
}

// GetIds returns the Ids field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunSelectModelExtractionModel) GetIds() TestRunExtractionModelIds {
	if o == nil || IsNil(o.Ids.Get()) {
		var ret TestRunExtractionModelIds
		return ret
	}
	return *o.Ids.Get()
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunSelectModelExtractionModel) GetIdsOk() (*TestRunExtractionModelIds, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ids.Get(), o.Ids.IsSet()
}

// HasIds returns a boolean if a field has been set.
func (o *TestRunSelectModelExtractionModel) HasIds() bool {
	if o != nil && o.Ids.IsSet() {
		return true
	}

	return false
}

// SetIds gets a reference to the given NullableTestRunExtractionModelIds and assigns it to the Ids field.
func (o *TestRunSelectModelExtractionModel) SetIds(v TestRunExtractionModelIds) {
	o.Ids.Set(&v)
}
// SetIdsNil sets the value for Ids to be an explicit nil
func (o *TestRunSelectModelExtractionModel) SetIdsNil() {
	o.Ids.Set(nil)
}

// UnsetIds ensures that no value is present for Ids, not even an explicit nil
func (o *TestRunSelectModelExtractionModel) UnsetIds() {
	o.Ids.Unset()
}

func (o TestRunSelectModelExtractionModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestRunSelectModelExtractionModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Ids.IsSet() {
		toSerialize["ids"] = o.Ids.Get()
	}
	return toSerialize, nil
}

type NullableTestRunSelectModelExtractionModel struct {
	value *TestRunSelectModelExtractionModel
	isSet bool
}

func (v NullableTestRunSelectModelExtractionModel) Get() *TestRunSelectModelExtractionModel {
	return v.value
}

func (v *NullableTestRunSelectModelExtractionModel) Set(val *TestRunSelectModelExtractionModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestRunSelectModelExtractionModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestRunSelectModelExtractionModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestRunSelectModelExtractionModel(val *TestRunSelectModelExtractionModel) *NullableTestRunSelectModelExtractionModel {
	return &NullableTestRunSelectModelExtractionModel{value: val, isSet: true}
}

func (v NullableTestRunSelectModelExtractionModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestRunSelectModelExtractionModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


