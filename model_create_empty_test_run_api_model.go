/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateEmptyTestRunApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEmptyTestRunApiModel{}

// CreateEmptyTestRunApiModel struct for CreateEmptyTestRunApiModel
type CreateEmptyTestRunApiModel struct {
	// Project unique identifier              This property is to link test run with a project
	ProjectId string `json:"projectId"`
	// Test run name
	Name NullableString `json:"name,omitempty"`
	// Test run description
	Description NullableString `json:"description,omitempty"`
	// Test run launch source
	LaunchSource NullableString `json:"launchSource,omitempty"`
	// Collection of attachments to relate to the test run
	Attachments []AssignAttachmentApiModel `json:"attachments,omitempty"`
	// Collection of links to relate to the test run
	Links []CreateLinkApiModel `json:"links,omitempty"`
}

type _CreateEmptyTestRunApiModel CreateEmptyTestRunApiModel

// NewCreateEmptyTestRunApiModel instantiates a new CreateEmptyTestRunApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEmptyTestRunApiModel(projectId string) *CreateEmptyTestRunApiModel {
	this := CreateEmptyTestRunApiModel{}
	this.ProjectId = projectId
	return &this
}

// NewCreateEmptyTestRunApiModelWithDefaults instantiates a new CreateEmptyTestRunApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEmptyTestRunApiModelWithDefaults() *CreateEmptyTestRunApiModel {
	this := CreateEmptyTestRunApiModel{}
	return &this
}

// GetProjectId returns the ProjectId field value
func (o *CreateEmptyTestRunApiModel) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *CreateEmptyTestRunApiModel) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *CreateEmptyTestRunApiModel) SetProjectId(v string) {
	o.ProjectId = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmptyTestRunApiModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmptyTestRunApiModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CreateEmptyTestRunApiModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CreateEmptyTestRunApiModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CreateEmptyTestRunApiModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CreateEmptyTestRunApiModel) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmptyTestRunApiModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmptyTestRunApiModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateEmptyTestRunApiModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateEmptyTestRunApiModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateEmptyTestRunApiModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateEmptyTestRunApiModel) UnsetDescription() {
	o.Description.Unset()
}

// GetLaunchSource returns the LaunchSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmptyTestRunApiModel) GetLaunchSource() string {
	if o == nil || IsNil(o.LaunchSource.Get()) {
		var ret string
		return ret
	}
	return *o.LaunchSource.Get()
}

// GetLaunchSourceOk returns a tuple with the LaunchSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmptyTestRunApiModel) GetLaunchSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LaunchSource.Get(), o.LaunchSource.IsSet()
}

// HasLaunchSource returns a boolean if a field has been set.
func (o *CreateEmptyTestRunApiModel) HasLaunchSource() bool {
	if o != nil && o.LaunchSource.IsSet() {
		return true
	}

	return false
}

// SetLaunchSource gets a reference to the given NullableString and assigns it to the LaunchSource field.
func (o *CreateEmptyTestRunApiModel) SetLaunchSource(v string) {
	o.LaunchSource.Set(&v)
}
// SetLaunchSourceNil sets the value for LaunchSource to be an explicit nil
func (o *CreateEmptyTestRunApiModel) SetLaunchSourceNil() {
	o.LaunchSource.Set(nil)
}

// UnsetLaunchSource ensures that no value is present for LaunchSource, not even an explicit nil
func (o *CreateEmptyTestRunApiModel) UnsetLaunchSource() {
	o.LaunchSource.Unset()
}

// GetAttachments returns the Attachments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmptyTestRunApiModel) GetAttachments() []AssignAttachmentApiModel {
	if o == nil {
		var ret []AssignAttachmentApiModel
		return ret
	}
	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmptyTestRunApiModel) GetAttachmentsOk() ([]AssignAttachmentApiModel, bool) {
	if o == nil || IsNil(o.Attachments) {
		return nil, false
	}
	return o.Attachments, true
}

// HasAttachments returns a boolean if a field has been set.
func (o *CreateEmptyTestRunApiModel) HasAttachments() bool {
	if o != nil && !IsNil(o.Attachments) {
		return true
	}

	return false
}

// SetAttachments gets a reference to the given []AssignAttachmentApiModel and assigns it to the Attachments field.
func (o *CreateEmptyTestRunApiModel) SetAttachments(v []AssignAttachmentApiModel) {
	o.Attachments = v
}

// GetLinks returns the Links field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmptyTestRunApiModel) GetLinks() []CreateLinkApiModel {
	if o == nil {
		var ret []CreateLinkApiModel
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmptyTestRunApiModel) GetLinksOk() ([]CreateLinkApiModel, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CreateEmptyTestRunApiModel) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []CreateLinkApiModel and assigns it to the Links field.
func (o *CreateEmptyTestRunApiModel) SetLinks(v []CreateLinkApiModel) {
	o.Links = v
}

func (o CreateEmptyTestRunApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEmptyTestRunApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["projectId"] = o.ProjectId
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.LaunchSource.IsSet() {
		toSerialize["launchSource"] = o.LaunchSource.Get()
	}
	if o.Attachments != nil {
		toSerialize["attachments"] = o.Attachments
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	return toSerialize, nil
}

func (o *CreateEmptyTestRunApiModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"projectId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateEmptyTestRunApiModel := _CreateEmptyTestRunApiModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateEmptyTestRunApiModel)

	if err != nil {
		return err
	}

	*o = CreateEmptyTestRunApiModel(varCreateEmptyTestRunApiModel)

	return err
}

type NullableCreateEmptyTestRunApiModel struct {
	value *CreateEmptyTestRunApiModel
	isSet bool
}

func (v NullableCreateEmptyTestRunApiModel) Get() *CreateEmptyTestRunApiModel {
	return v.value
}

func (v *NullableCreateEmptyTestRunApiModel) Set(val *CreateEmptyTestRunApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEmptyTestRunApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEmptyTestRunApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEmptyTestRunApiModel(val *CreateEmptyTestRunApiModel) *NullableCreateEmptyTestRunApiModel {
	return &NullableCreateEmptyTestRunApiModel{value: val, isSet: true}
}

func (v NullableCreateEmptyTestRunApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEmptyTestRunApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


