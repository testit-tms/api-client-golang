/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WorkflowApiResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkflowApiResult{}

// WorkflowApiResult struct for WorkflowApiResult
type WorkflowApiResult struct {
	Id string `json:"id"`
	Name string `json:"name"`
	IsSystem bool `json:"isSystem"`
	IsDefault bool `json:"isDefault"`
	Statuses []WorkflowStatusApiResult `json:"statuses"`
}

type _WorkflowApiResult WorkflowApiResult

// NewWorkflowApiResult instantiates a new WorkflowApiResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowApiResult(id string, name string, isSystem bool, isDefault bool, statuses []WorkflowStatusApiResult) *WorkflowApiResult {
	this := WorkflowApiResult{}
	this.Id = id
	this.Name = name
	this.IsSystem = isSystem
	this.IsDefault = isDefault
	this.Statuses = statuses
	return &this
}

// NewWorkflowApiResultWithDefaults instantiates a new WorkflowApiResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowApiResultWithDefaults() *WorkflowApiResult {
	this := WorkflowApiResult{}
	return &this
}

// GetId returns the Id field value
func (o *WorkflowApiResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WorkflowApiResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WorkflowApiResult) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *WorkflowApiResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WorkflowApiResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WorkflowApiResult) SetName(v string) {
	o.Name = v
}

// GetIsSystem returns the IsSystem field value
func (o *WorkflowApiResult) GetIsSystem() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSystem
}

// GetIsSystemOk returns a tuple with the IsSystem field value
// and a boolean to check if the value has been set.
func (o *WorkflowApiResult) GetIsSystemOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsSystem, true
}

// SetIsSystem sets field value
func (o *WorkflowApiResult) SetIsSystem(v bool) {
	o.IsSystem = v
}

// GetIsDefault returns the IsDefault field value
func (o *WorkflowApiResult) GetIsDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value
// and a boolean to check if the value has been set.
func (o *WorkflowApiResult) GetIsDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDefault, true
}

// SetIsDefault sets field value
func (o *WorkflowApiResult) SetIsDefault(v bool) {
	o.IsDefault = v
}

// GetStatuses returns the Statuses field value
func (o *WorkflowApiResult) GetStatuses() []WorkflowStatusApiResult {
	if o == nil {
		var ret []WorkflowStatusApiResult
		return ret
	}

	return o.Statuses
}

// GetStatusesOk returns a tuple with the Statuses field value
// and a boolean to check if the value has been set.
func (o *WorkflowApiResult) GetStatusesOk() ([]WorkflowStatusApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Statuses, true
}

// SetStatuses sets field value
func (o *WorkflowApiResult) SetStatuses(v []WorkflowStatusApiResult) {
	o.Statuses = v
}

func (o WorkflowApiResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkflowApiResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["isSystem"] = o.IsSystem
	toSerialize["isDefault"] = o.IsDefault
	toSerialize["statuses"] = o.Statuses
	return toSerialize, nil
}

func (o *WorkflowApiResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"isSystem",
		"isDefault",
		"statuses",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkflowApiResult := _WorkflowApiResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkflowApiResult)

	if err != nil {
		return err
	}

	*o = WorkflowApiResult(varWorkflowApiResult)

	return err
}

type NullableWorkflowApiResult struct {
	value *WorkflowApiResult
	isSet bool
}

func (v NullableWorkflowApiResult) Get() *WorkflowApiResult {
	return v.value
}

func (v *NullableWorkflowApiResult) Set(val *WorkflowApiResult) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowApiResult) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowApiResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowApiResult(val *WorkflowApiResult) *NullableWorkflowApiResult {
	return &NullableWorkflowApiResult{value: val, isSet: true}
}

func (v NullableWorkflowApiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowApiResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


