/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TestResultStepCommentUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestResultStepCommentUpdateRequest{}

// TestResultStepCommentUpdateRequest struct for TestResultStepCommentUpdateRequest
type TestResultStepCommentUpdateRequest struct {
	// Entity unique identifier
	Id string `json:"id"`
	Text string `json:"text"`
	StepId string `json:"stepId"`
	ParentStepId NullableString `json:"parentStepId,omitempty"`
	Attachments []AttachmentUpdateRequest `json:"attachments"`
}

type _TestResultStepCommentUpdateRequest TestResultStepCommentUpdateRequest

// NewTestResultStepCommentUpdateRequest instantiates a new TestResultStepCommentUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestResultStepCommentUpdateRequest(id string, text string, stepId string, attachments []AttachmentUpdateRequest) *TestResultStepCommentUpdateRequest {
	this := TestResultStepCommentUpdateRequest{}
	this.Id = id
	this.Text = text
	this.StepId = stepId
	this.Attachments = attachments
	return &this
}

// NewTestResultStepCommentUpdateRequestWithDefaults instantiates a new TestResultStepCommentUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestResultStepCommentUpdateRequestWithDefaults() *TestResultStepCommentUpdateRequest {
	this := TestResultStepCommentUpdateRequest{}
	return &this
}

// GetId returns the Id field value
func (o *TestResultStepCommentUpdateRequest) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TestResultStepCommentUpdateRequest) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TestResultStepCommentUpdateRequest) SetId(v string) {
	o.Id = v
}

// GetText returns the Text field value
func (o *TestResultStepCommentUpdateRequest) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *TestResultStepCommentUpdateRequest) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *TestResultStepCommentUpdateRequest) SetText(v string) {
	o.Text = v
}

// GetStepId returns the StepId field value
func (o *TestResultStepCommentUpdateRequest) GetStepId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StepId
}

// GetStepIdOk returns a tuple with the StepId field value
// and a boolean to check if the value has been set.
func (o *TestResultStepCommentUpdateRequest) GetStepIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StepId, true
}

// SetStepId sets field value
func (o *TestResultStepCommentUpdateRequest) SetStepId(v string) {
	o.StepId = v
}

// GetParentStepId returns the ParentStepId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestResultStepCommentUpdateRequest) GetParentStepId() string {
	if o == nil || IsNil(o.ParentStepId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentStepId.Get()
}

// GetParentStepIdOk returns a tuple with the ParentStepId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestResultStepCommentUpdateRequest) GetParentStepIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentStepId.Get(), o.ParentStepId.IsSet()
}

// HasParentStepId returns a boolean if a field has been set.
func (o *TestResultStepCommentUpdateRequest) HasParentStepId() bool {
	if o != nil && o.ParentStepId.IsSet() {
		return true
	}

	return false
}

// SetParentStepId gets a reference to the given NullableString and assigns it to the ParentStepId field.
func (o *TestResultStepCommentUpdateRequest) SetParentStepId(v string) {
	o.ParentStepId.Set(&v)
}
// SetParentStepIdNil sets the value for ParentStepId to be an explicit nil
func (o *TestResultStepCommentUpdateRequest) SetParentStepIdNil() {
	o.ParentStepId.Set(nil)
}

// UnsetParentStepId ensures that no value is present for ParentStepId, not even an explicit nil
func (o *TestResultStepCommentUpdateRequest) UnsetParentStepId() {
	o.ParentStepId.Unset()
}

// GetAttachments returns the Attachments field value
func (o *TestResultStepCommentUpdateRequest) GetAttachments() []AttachmentUpdateRequest {
	if o == nil {
		var ret []AttachmentUpdateRequest
		return ret
	}

	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value
// and a boolean to check if the value has been set.
func (o *TestResultStepCommentUpdateRequest) GetAttachmentsOk() ([]AttachmentUpdateRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attachments, true
}

// SetAttachments sets field value
func (o *TestResultStepCommentUpdateRequest) SetAttachments(v []AttachmentUpdateRequest) {
	o.Attachments = v
}

func (o TestResultStepCommentUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestResultStepCommentUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["text"] = o.Text
	toSerialize["stepId"] = o.StepId
	if o.ParentStepId.IsSet() {
		toSerialize["parentStepId"] = o.ParentStepId.Get()
	}
	toSerialize["attachments"] = o.Attachments
	return toSerialize, nil
}

func (o *TestResultStepCommentUpdateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"text",
		"stepId",
		"attachments",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestResultStepCommentUpdateRequest := _TestResultStepCommentUpdateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestResultStepCommentUpdateRequest)

	if err != nil {
		return err
	}

	*o = TestResultStepCommentUpdateRequest(varTestResultStepCommentUpdateRequest)

	return err
}

type NullableTestResultStepCommentUpdateRequest struct {
	value *TestResultStepCommentUpdateRequest
	isSet bool
}

func (v NullableTestResultStepCommentUpdateRequest) Get() *TestResultStepCommentUpdateRequest {
	return v.value
}

func (v *NullableTestResultStepCommentUpdateRequest) Set(val *TestResultStepCommentUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTestResultStepCommentUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTestResultStepCommentUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestResultStepCommentUpdateRequest(val *TestResultStepCommentUpdateRequest) *NullableTestResultStepCommentUpdateRequest {
	return &NullableTestResultStepCommentUpdateRequest{value: val, isSet: true}
}

func (v NullableTestResultStepCommentUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestResultStepCommentUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


