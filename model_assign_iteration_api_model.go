/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AssignIterationApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssignIterationApiModel{}

// AssignIterationApiModel struct for AssignIterationApiModel
type AssignIterationApiModel struct {
	Parameters []ParameterIterationModel `json:"parameters"`
	// Iteration identifier, must be empty for new or changed iteration
	Id string `json:"id"`
}

type _AssignIterationApiModel AssignIterationApiModel

// NewAssignIterationApiModel instantiates a new AssignIterationApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignIterationApiModel(parameters []ParameterIterationModel, id string) *AssignIterationApiModel {
	this := AssignIterationApiModel{}
	this.Parameters = parameters
	this.Id = id
	return &this
}

// NewAssignIterationApiModelWithDefaults instantiates a new AssignIterationApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignIterationApiModelWithDefaults() *AssignIterationApiModel {
	this := AssignIterationApiModel{}
	return &this
}

// GetParameters returns the Parameters field value
func (o *AssignIterationApiModel) GetParameters() []ParameterIterationModel {
	if o == nil {
		var ret []ParameterIterationModel
		return ret
	}

	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value
// and a boolean to check if the value has been set.
func (o *AssignIterationApiModel) GetParametersOk() ([]ParameterIterationModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Parameters, true
}

// SetParameters sets field value
func (o *AssignIterationApiModel) SetParameters(v []ParameterIterationModel) {
	o.Parameters = v
}

// GetId returns the Id field value
func (o *AssignIterationApiModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AssignIterationApiModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AssignIterationApiModel) SetId(v string) {
	o.Id = v
}

func (o AssignIterationApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssignIterationApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["parameters"] = o.Parameters
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

func (o *AssignIterationApiModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"parameters",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAssignIterationApiModel := _AssignIterationApiModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAssignIterationApiModel)

	if err != nil {
		return err
	}

	*o = AssignIterationApiModel(varAssignIterationApiModel)

	return err
}

type NullableAssignIterationApiModel struct {
	value *AssignIterationApiModel
	isSet bool
}

func (v NullableAssignIterationApiModel) Get() *AssignIterationApiModel {
	return v.value
}

func (v *NullableAssignIterationApiModel) Set(val *AssignIterationApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignIterationApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignIterationApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignIterationApiModel(val *AssignIterationApiModel) *NullableAssignIterationApiModel {
	return &NullableAssignIterationApiModel{value: val, isSet: true}
}

func (v NullableAssignIterationApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignIterationApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


