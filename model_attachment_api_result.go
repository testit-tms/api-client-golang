/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AttachmentApiResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AttachmentApiResult{}

// AttachmentApiResult struct for AttachmentApiResult
type AttachmentApiResult struct {
	// Unique ID of the attachment
	Id string `json:"id"`
	// Unique ID of the attachment file
	FileId string `json:"fileId"`
	// MIME type of the attachment
	Type string `json:"type"`
	// Size in bytes of the attachment file
	Size float32 `json:"size"`
	// Creation date of the attachment
	CreatedDate time.Time `json:"createdDate"`
	// Last modification date of the attachment
	ModifiedDate NullableTime `json:"modifiedDate,omitempty"`
	// Unique ID of the attachment creator
	CreatedById string `json:"createdById"`
	// Unique ID of the attachment last editor
	ModifiedById NullableString `json:"modifiedById,omitempty"`
	// Name of the attachment file
	Name string `json:"name"`
}

type _AttachmentApiResult AttachmentApiResult

// NewAttachmentApiResult instantiates a new AttachmentApiResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachmentApiResult(id string, fileId string, type_ string, size float32, createdDate time.Time, createdById string, name string) *AttachmentApiResult {
	this := AttachmentApiResult{}
	this.Id = id
	this.FileId = fileId
	this.Type = type_
	this.Size = size
	this.CreatedDate = createdDate
	this.CreatedById = createdById
	this.Name = name
	return &this
}

// NewAttachmentApiResultWithDefaults instantiates a new AttachmentApiResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachmentApiResultWithDefaults() *AttachmentApiResult {
	this := AttachmentApiResult{}
	return &this
}

// GetId returns the Id field value
func (o *AttachmentApiResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AttachmentApiResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AttachmentApiResult) SetId(v string) {
	o.Id = v
}

// GetFileId returns the FileId field value
func (o *AttachmentApiResult) GetFileId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileId
}

// GetFileIdOk returns a tuple with the FileId field value
// and a boolean to check if the value has been set.
func (o *AttachmentApiResult) GetFileIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileId, true
}

// SetFileId sets field value
func (o *AttachmentApiResult) SetFileId(v string) {
	o.FileId = v
}

// GetType returns the Type field value
func (o *AttachmentApiResult) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AttachmentApiResult) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AttachmentApiResult) SetType(v string) {
	o.Type = v
}

// GetSize returns the Size field value
func (o *AttachmentApiResult) GetSize() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *AttachmentApiResult) GetSizeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *AttachmentApiResult) SetSize(v float32) {
	o.Size = v
}

// GetCreatedDate returns the CreatedDate field value
func (o *AttachmentApiResult) GetCreatedDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value
// and a boolean to check if the value has been set.
func (o *AttachmentApiResult) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedDate, true
}

// SetCreatedDate sets field value
func (o *AttachmentApiResult) SetCreatedDate(v time.Time) {
	o.CreatedDate = v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AttachmentApiResult) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate.Get()
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AttachmentApiResult) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedDate.Get(), o.ModifiedDate.IsSet()
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *AttachmentApiResult) HasModifiedDate() bool {
	if o != nil && o.ModifiedDate.IsSet() {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given NullableTime and assigns it to the ModifiedDate field.
func (o *AttachmentApiResult) SetModifiedDate(v time.Time) {
	o.ModifiedDate.Set(&v)
}
// SetModifiedDateNil sets the value for ModifiedDate to be an explicit nil
func (o *AttachmentApiResult) SetModifiedDateNil() {
	o.ModifiedDate.Set(nil)
}

// UnsetModifiedDate ensures that no value is present for ModifiedDate, not even an explicit nil
func (o *AttachmentApiResult) UnsetModifiedDate() {
	o.ModifiedDate.Unset()
}

// GetCreatedById returns the CreatedById field value
func (o *AttachmentApiResult) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *AttachmentApiResult) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *AttachmentApiResult) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetModifiedById returns the ModifiedById field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AttachmentApiResult) GetModifiedById() string {
	if o == nil || IsNil(o.ModifiedById.Get()) {
		var ret string
		return ret
	}
	return *o.ModifiedById.Get()
}

// GetModifiedByIdOk returns a tuple with the ModifiedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AttachmentApiResult) GetModifiedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedById.Get(), o.ModifiedById.IsSet()
}

// HasModifiedById returns a boolean if a field has been set.
func (o *AttachmentApiResult) HasModifiedById() bool {
	if o != nil && o.ModifiedById.IsSet() {
		return true
	}

	return false
}

// SetModifiedById gets a reference to the given NullableString and assigns it to the ModifiedById field.
func (o *AttachmentApiResult) SetModifiedById(v string) {
	o.ModifiedById.Set(&v)
}
// SetModifiedByIdNil sets the value for ModifiedById to be an explicit nil
func (o *AttachmentApiResult) SetModifiedByIdNil() {
	o.ModifiedById.Set(nil)
}

// UnsetModifiedById ensures that no value is present for ModifiedById, not even an explicit nil
func (o *AttachmentApiResult) UnsetModifiedById() {
	o.ModifiedById.Unset()
}

// GetName returns the Name field value
func (o *AttachmentApiResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AttachmentApiResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AttachmentApiResult) SetName(v string) {
	o.Name = v
}

func (o AttachmentApiResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AttachmentApiResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["fileId"] = o.FileId
	toSerialize["type"] = o.Type
	toSerialize["size"] = o.Size
	toSerialize["createdDate"] = o.CreatedDate
	if o.ModifiedDate.IsSet() {
		toSerialize["modifiedDate"] = o.ModifiedDate.Get()
	}
	toSerialize["createdById"] = o.CreatedById
	if o.ModifiedById.IsSet() {
		toSerialize["modifiedById"] = o.ModifiedById.Get()
	}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *AttachmentApiResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"fileId",
		"type",
		"size",
		"createdDate",
		"createdById",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAttachmentApiResult := _AttachmentApiResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAttachmentApiResult)

	if err != nil {
		return err
	}

	*o = AttachmentApiResult(varAttachmentApiResult)

	return err
}

type NullableAttachmentApiResult struct {
	value *AttachmentApiResult
	isSet bool
}

func (v NullableAttachmentApiResult) Get() *AttachmentApiResult {
	return v.value
}

func (v *NullableAttachmentApiResult) Set(val *AttachmentApiResult) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachmentApiResult) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachmentApiResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachmentApiResult(val *AttachmentApiResult) *NullableAttachmentApiResult {
	return &NullableAttachmentApiResult{value: val, isSet: true}
}

func (v NullableAttachmentApiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachmentApiResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


