/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateWorkItemApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateWorkItemApiModel{}

// UpdateWorkItemApiModel struct for UpdateWorkItemApiModel
type UpdateWorkItemApiModel struct {
	// Workitem internal identifier
	Id string `json:"id"`
	// Internal identifier of section where workitem is located
	SectionId string `json:"sectionId"`
	// Workitem description
	Description NullableString `json:"description,omitempty"`
	State WorkItemStates `json:"state"`
	Priority WorkItemPriorityModel `json:"priority"`
	SourceType NullableWorkItemSourceTypeModel `json:"sourceType,omitempty"`
	// Collection of workitem steps
	Steps []UpdateStepApiModel `json:"steps"`
	// Collection of workitem precondtion steps
	PreconditionSteps []UpdateStepApiModel `json:"preconditionSteps"`
	// Collection of workitem postcondition steps
	PostconditionSteps []UpdateStepApiModel `json:"postconditionSteps"`
	// Workitem duration in milliseconds
	Duration int32 `json:"duration"`
	// Key value pair of custom workitem attributes
	Attributes map[string]interface{} `json:"attributes"`
	// Collection of workitem tags
	Tags []TagModel `json:"tags"`
	// Collection of workitem links
	Links []UpdateLinkApiModel `json:"links"`
	// Workitem name
	Name string `json:"name"`
	Attachments []AssignAttachmentApiModel `json:"attachments"`
	// Collection of parameter id sets
	Iterations []AssignIterationApiModel `json:"iterations,omitempty"`
	// Collection of autotest internal ids
	AutoTests []AutoTestIdModel `json:"autoTests,omitempty"`
}

type _UpdateWorkItemApiModel UpdateWorkItemApiModel

// NewUpdateWorkItemApiModel instantiates a new UpdateWorkItemApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateWorkItemApiModel(id string, sectionId string, state WorkItemStates, priority WorkItemPriorityModel, steps []UpdateStepApiModel, preconditionSteps []UpdateStepApiModel, postconditionSteps []UpdateStepApiModel, duration int32, attributes map[string]interface{}, tags []TagModel, links []UpdateLinkApiModel, name string, attachments []AssignAttachmentApiModel) *UpdateWorkItemApiModel {
	this := UpdateWorkItemApiModel{}
	this.Id = id
	this.SectionId = sectionId
	this.State = state
	this.Priority = priority
	this.Steps = steps
	this.PreconditionSteps = preconditionSteps
	this.PostconditionSteps = postconditionSteps
	this.Duration = duration
	this.Attributes = attributes
	this.Tags = tags
	this.Links = links
	this.Name = name
	this.Attachments = attachments
	return &this
}

// NewUpdateWorkItemApiModelWithDefaults instantiates a new UpdateWorkItemApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateWorkItemApiModelWithDefaults() *UpdateWorkItemApiModel {
	this := UpdateWorkItemApiModel{}
	return &this
}

// GetId returns the Id field value
func (o *UpdateWorkItemApiModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UpdateWorkItemApiModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UpdateWorkItemApiModel) SetId(v string) {
	o.Id = v
}

// GetSectionId returns the SectionId field value
func (o *UpdateWorkItemApiModel) GetSectionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SectionId
}

// GetSectionIdOk returns a tuple with the SectionId field value
// and a boolean to check if the value has been set.
func (o *UpdateWorkItemApiModel) GetSectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SectionId, true
}

// SetSectionId sets field value
func (o *UpdateWorkItemApiModel) SetSectionId(v string) {
	o.SectionId = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateWorkItemApiModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateWorkItemApiModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateWorkItemApiModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *UpdateWorkItemApiModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *UpdateWorkItemApiModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *UpdateWorkItemApiModel) UnsetDescription() {
	o.Description.Unset()
}

// GetState returns the State field value
func (o *UpdateWorkItemApiModel) GetState() WorkItemStates {
	if o == nil {
		var ret WorkItemStates
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *UpdateWorkItemApiModel) GetStateOk() (*WorkItemStates, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *UpdateWorkItemApiModel) SetState(v WorkItemStates) {
	o.State = v
}

// GetPriority returns the Priority field value
func (o *UpdateWorkItemApiModel) GetPriority() WorkItemPriorityModel {
	if o == nil {
		var ret WorkItemPriorityModel
		return ret
	}

	return o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value
// and a boolean to check if the value has been set.
func (o *UpdateWorkItemApiModel) GetPriorityOk() (*WorkItemPriorityModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Priority, true
}

// SetPriority sets field value
func (o *UpdateWorkItemApiModel) SetPriority(v WorkItemPriorityModel) {
	o.Priority = v
}

// GetSourceType returns the SourceType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateWorkItemApiModel) GetSourceType() WorkItemSourceTypeModel {
	if o == nil || IsNil(o.SourceType.Get()) {
		var ret WorkItemSourceTypeModel
		return ret
	}
	return *o.SourceType.Get()
}

// GetSourceTypeOk returns a tuple with the SourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateWorkItemApiModel) GetSourceTypeOk() (*WorkItemSourceTypeModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceType.Get(), o.SourceType.IsSet()
}

// HasSourceType returns a boolean if a field has been set.
func (o *UpdateWorkItemApiModel) HasSourceType() bool {
	if o != nil && o.SourceType.IsSet() {
		return true
	}

	return false
}

// SetSourceType gets a reference to the given NullableWorkItemSourceTypeModel and assigns it to the SourceType field.
func (o *UpdateWorkItemApiModel) SetSourceType(v WorkItemSourceTypeModel) {
	o.SourceType.Set(&v)
}
// SetSourceTypeNil sets the value for SourceType to be an explicit nil
func (o *UpdateWorkItemApiModel) SetSourceTypeNil() {
	o.SourceType.Set(nil)
}

// UnsetSourceType ensures that no value is present for SourceType, not even an explicit nil
func (o *UpdateWorkItemApiModel) UnsetSourceType() {
	o.SourceType.Unset()
}

// GetSteps returns the Steps field value
func (o *UpdateWorkItemApiModel) GetSteps() []UpdateStepApiModel {
	if o == nil {
		var ret []UpdateStepApiModel
		return ret
	}

	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value
// and a boolean to check if the value has been set.
func (o *UpdateWorkItemApiModel) GetStepsOk() ([]UpdateStepApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Steps, true
}

// SetSteps sets field value
func (o *UpdateWorkItemApiModel) SetSteps(v []UpdateStepApiModel) {
	o.Steps = v
}

// GetPreconditionSteps returns the PreconditionSteps field value
func (o *UpdateWorkItemApiModel) GetPreconditionSteps() []UpdateStepApiModel {
	if o == nil {
		var ret []UpdateStepApiModel
		return ret
	}

	return o.PreconditionSteps
}

// GetPreconditionStepsOk returns a tuple with the PreconditionSteps field value
// and a boolean to check if the value has been set.
func (o *UpdateWorkItemApiModel) GetPreconditionStepsOk() ([]UpdateStepApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.PreconditionSteps, true
}

// SetPreconditionSteps sets field value
func (o *UpdateWorkItemApiModel) SetPreconditionSteps(v []UpdateStepApiModel) {
	o.PreconditionSteps = v
}

// GetPostconditionSteps returns the PostconditionSteps field value
func (o *UpdateWorkItemApiModel) GetPostconditionSteps() []UpdateStepApiModel {
	if o == nil {
		var ret []UpdateStepApiModel
		return ret
	}

	return o.PostconditionSteps
}

// GetPostconditionStepsOk returns a tuple with the PostconditionSteps field value
// and a boolean to check if the value has been set.
func (o *UpdateWorkItemApiModel) GetPostconditionStepsOk() ([]UpdateStepApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.PostconditionSteps, true
}

// SetPostconditionSteps sets field value
func (o *UpdateWorkItemApiModel) SetPostconditionSteps(v []UpdateStepApiModel) {
	o.PostconditionSteps = v
}

// GetDuration returns the Duration field value
func (o *UpdateWorkItemApiModel) GetDuration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *UpdateWorkItemApiModel) GetDurationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *UpdateWorkItemApiModel) SetDuration(v int32) {
	o.Duration = v
}

// GetAttributes returns the Attributes field value
func (o *UpdateWorkItemApiModel) GetAttributes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value
// and a boolean to check if the value has been set.
func (o *UpdateWorkItemApiModel) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// SetAttributes sets field value
func (o *UpdateWorkItemApiModel) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetTags returns the Tags field value
func (o *UpdateWorkItemApiModel) GetTags() []TagModel {
	if o == nil {
		var ret []TagModel
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *UpdateWorkItemApiModel) GetTagsOk() ([]TagModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *UpdateWorkItemApiModel) SetTags(v []TagModel) {
	o.Tags = v
}

// GetLinks returns the Links field value
func (o *UpdateWorkItemApiModel) GetLinks() []UpdateLinkApiModel {
	if o == nil {
		var ret []UpdateLinkApiModel
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *UpdateWorkItemApiModel) GetLinksOk() ([]UpdateLinkApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Links, true
}

// SetLinks sets field value
func (o *UpdateWorkItemApiModel) SetLinks(v []UpdateLinkApiModel) {
	o.Links = v
}

// GetName returns the Name field value
func (o *UpdateWorkItemApiModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateWorkItemApiModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateWorkItemApiModel) SetName(v string) {
	o.Name = v
}

// GetAttachments returns the Attachments field value
func (o *UpdateWorkItemApiModel) GetAttachments() []AssignAttachmentApiModel {
	if o == nil {
		var ret []AssignAttachmentApiModel
		return ret
	}

	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value
// and a boolean to check if the value has been set.
func (o *UpdateWorkItemApiModel) GetAttachmentsOk() ([]AssignAttachmentApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attachments, true
}

// SetAttachments sets field value
func (o *UpdateWorkItemApiModel) SetAttachments(v []AssignAttachmentApiModel) {
	o.Attachments = v
}

// GetIterations returns the Iterations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateWorkItemApiModel) GetIterations() []AssignIterationApiModel {
	if o == nil {
		var ret []AssignIterationApiModel
		return ret
	}
	return o.Iterations
}

// GetIterationsOk returns a tuple with the Iterations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateWorkItemApiModel) GetIterationsOk() ([]AssignIterationApiModel, bool) {
	if o == nil || IsNil(o.Iterations) {
		return nil, false
	}
	return o.Iterations, true
}

// HasIterations returns a boolean if a field has been set.
func (o *UpdateWorkItemApiModel) HasIterations() bool {
	if o != nil && !IsNil(o.Iterations) {
		return true
	}

	return false
}

// SetIterations gets a reference to the given []AssignIterationApiModel and assigns it to the Iterations field.
func (o *UpdateWorkItemApiModel) SetIterations(v []AssignIterationApiModel) {
	o.Iterations = v
}

// GetAutoTests returns the AutoTests field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateWorkItemApiModel) GetAutoTests() []AutoTestIdModel {
	if o == nil {
		var ret []AutoTestIdModel
		return ret
	}
	return o.AutoTests
}

// GetAutoTestsOk returns a tuple with the AutoTests field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateWorkItemApiModel) GetAutoTestsOk() ([]AutoTestIdModel, bool) {
	if o == nil || IsNil(o.AutoTests) {
		return nil, false
	}
	return o.AutoTests, true
}

// HasAutoTests returns a boolean if a field has been set.
func (o *UpdateWorkItemApiModel) HasAutoTests() bool {
	if o != nil && !IsNil(o.AutoTests) {
		return true
	}

	return false
}

// SetAutoTests gets a reference to the given []AutoTestIdModel and assigns it to the AutoTests field.
func (o *UpdateWorkItemApiModel) SetAutoTests(v []AutoTestIdModel) {
	o.AutoTests = v
}

func (o UpdateWorkItemApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateWorkItemApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["sectionId"] = o.SectionId
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["state"] = o.State
	toSerialize["priority"] = o.Priority
	if o.SourceType.IsSet() {
		toSerialize["sourceType"] = o.SourceType.Get()
	}
	toSerialize["steps"] = o.Steps
	toSerialize["preconditionSteps"] = o.PreconditionSteps
	toSerialize["postconditionSteps"] = o.PostconditionSteps
	toSerialize["duration"] = o.Duration
	toSerialize["attributes"] = o.Attributes
	toSerialize["tags"] = o.Tags
	toSerialize["links"] = o.Links
	toSerialize["name"] = o.Name
	toSerialize["attachments"] = o.Attachments
	if o.Iterations != nil {
		toSerialize["iterations"] = o.Iterations
	}
	if o.AutoTests != nil {
		toSerialize["autoTests"] = o.AutoTests
	}
	return toSerialize, nil
}

func (o *UpdateWorkItemApiModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"sectionId",
		"state",
		"priority",
		"steps",
		"preconditionSteps",
		"postconditionSteps",
		"duration",
		"attributes",
		"tags",
		"links",
		"name",
		"attachments",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateWorkItemApiModel := _UpdateWorkItemApiModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateWorkItemApiModel)

	if err != nil {
		return err
	}

	*o = UpdateWorkItemApiModel(varUpdateWorkItemApiModel)

	return err
}

type NullableUpdateWorkItemApiModel struct {
	value *UpdateWorkItemApiModel
	isSet bool
}

func (v NullableUpdateWorkItemApiModel) Get() *UpdateWorkItemApiModel {
	return v.value
}

func (v *NullableUpdateWorkItemApiModel) Set(val *UpdateWorkItemApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateWorkItemApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateWorkItemApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateWorkItemApiModel(val *UpdateWorkItemApiModel) *NullableUpdateWorkItemApiModel {
	return &NullableUpdateWorkItemApiModel{value: val, isSet: true}
}

func (v NullableUpdateWorkItemApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateWorkItemApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


