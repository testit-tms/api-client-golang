/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the SectionSharedStep type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SectionSharedStep{}

// SectionSharedStep Nested shared steps are allowed
type SectionSharedStep struct {
	VersionId string `json:"versionId"`
	GlobalId int64 `json:"globalId"`
	Name NullableString `json:"name,omitempty"`
	// Deprecated
	Steps []StepModel `json:"steps,omitempty"`
	IsDeleted bool `json:"isDeleted"`
}

// NewSectionSharedStep instantiates a new SectionSharedStep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSectionSharedStep(versionId string, globalId int64, isDeleted bool) *SectionSharedStep {
	this := SectionSharedStep{}
	this.VersionId = versionId
	this.GlobalId = globalId
	this.IsDeleted = isDeleted
	return &this
}

// NewSectionSharedStepWithDefaults instantiates a new SectionSharedStep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSectionSharedStepWithDefaults() *SectionSharedStep {
	this := SectionSharedStep{}
	return &this
}

// GetVersionId returns the VersionId field value
func (o *SectionSharedStep) GetVersionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VersionId
}

// GetVersionIdOk returns a tuple with the VersionId field value
// and a boolean to check if the value has been set.
func (o *SectionSharedStep) GetVersionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VersionId, true
}

// SetVersionId sets field value
func (o *SectionSharedStep) SetVersionId(v string) {
	o.VersionId = v
}

// GetGlobalId returns the GlobalId field value
func (o *SectionSharedStep) GetGlobalId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.GlobalId
}

// GetGlobalIdOk returns a tuple with the GlobalId field value
// and a boolean to check if the value has been set.
func (o *SectionSharedStep) GetGlobalIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GlobalId, true
}

// SetGlobalId sets field value
func (o *SectionSharedStep) SetGlobalId(v int64) {
	o.GlobalId = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SectionSharedStep) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SectionSharedStep) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *SectionSharedStep) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *SectionSharedStep) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *SectionSharedStep) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *SectionSharedStep) UnsetName() {
	o.Name.Unset()
}

// GetSteps returns the Steps field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *SectionSharedStep) GetSteps() []StepModel {
	if o == nil {
		var ret []StepModel
		return ret
	}
	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *SectionSharedStep) GetStepsOk() ([]StepModel, bool) {
	if o == nil || IsNil(o.Steps) {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *SectionSharedStep) HasSteps() bool {
	if o != nil && IsNil(o.Steps) {
		return true
	}

	return false
}

// SetSteps gets a reference to the given []StepModel and assigns it to the Steps field.
// Deprecated
func (o *SectionSharedStep) SetSteps(v []StepModel) {
	o.Steps = v
}

// GetIsDeleted returns the IsDeleted field value
func (o *SectionSharedStep) GetIsDeleted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value
// and a boolean to check if the value has been set.
func (o *SectionSharedStep) GetIsDeletedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDeleted, true
}

// SetIsDeleted sets field value
func (o *SectionSharedStep) SetIsDeleted(v bool) {
	o.IsDeleted = v
}

func (o SectionSharedStep) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SectionSharedStep) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["versionId"] = o.VersionId
	toSerialize["globalId"] = o.GlobalId
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Steps != nil {
		toSerialize["steps"] = o.Steps
	}
	toSerialize["isDeleted"] = o.IsDeleted
	return toSerialize, nil
}

type NullableSectionSharedStep struct {
	value *SectionSharedStep
	isSet bool
}

func (v NullableSectionSharedStep) Get() *SectionSharedStep {
	return v.value
}

func (v *NullableSectionSharedStep) Set(val *SectionSharedStep) {
	v.value = val
	v.isSet = true
}

func (v NullableSectionSharedStep) IsSet() bool {
	return v.isSet
}

func (v *NullableSectionSharedStep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSectionSharedStep(val *SectionSharedStep) *NullableSectionSharedStep {
	return &NullableSectionSharedStep{value: val, isSet: true}
}

func (v NullableSectionSharedStep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSectionSharedStep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


