/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the TestRunV2ApiResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestRunV2ApiResult{}

// TestRunV2ApiResult struct for TestRunV2ApiResult
type TestRunV2ApiResult struct {
	// Test run unique identifier
	Id string `json:"id"`
	// Test run name
	Name string `json:"name"`
	// Test run description
	Description NullableString `json:"description,omitempty"`
	// Test run launch source                Once launch source is specified it cannot be updated.
	LaunchSource NullableString `json:"launchSource,omitempty"`
	// Date and time of test run start
	StartedOn NullableTime `json:"startedOn,omitempty"`
	// Date and time of test run end
	CompletedOn NullableTime `json:"completedOn,omitempty"`
	// Test run state
	// Deprecated
	StateName TestRunState `json:"stateName"`
	// Test run status
	Status TestStatusApiResult `json:"status"`
	// Project unique identifier                This property is used to link test run with project.
	ProjectId string `json:"projectId"`
	// Test plan unique identifier                This property is used to link test run with test plan.
	TestPlanId NullableString `json:"testPlanId,omitempty"`
	// Enumeration of test results related to test run
	TestResults []TestResultV2GetModel `json:"testResults,omitempty"`
	// Date and time of test run creation
	CreatedDate time.Time `json:"createdDate"`
	// Date and time of last test run  modification
	ModifiedDate NullableTime `json:"modifiedDate,omitempty"`
	// Unique identifier of user who created test run
	CreatedById string `json:"createdById"`
	// Unique identifier of user who applied last test run  modification
	ModifiedById NullableString `json:"modifiedById,omitempty"`
	// Username of user who created test run
	CreatedByUserName NullableString `json:"createdByUserName,omitempty"`
	// Collection of attachments related to the test run
	Attachments []AttachmentApiResult `json:"attachments"`
	// Collection of links related to the test run
	Links []LinkApiResult `json:"links"`
	// Customers test run parameters
	CustomParameters map[string]string `json:"customParameters,omitempty"`
	// Enabled webhooks
	Webhooks []NamedEntityApiModel `json:"webhooks"`
	// Run count
	RunCount int32 `json:"runCount"`
}

type _TestRunV2ApiResult TestRunV2ApiResult

// NewTestRunV2ApiResult instantiates a new TestRunV2ApiResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestRunV2ApiResult(id string, name string, stateName TestRunState, status TestStatusApiResult, projectId string, createdDate time.Time, createdById string, attachments []AttachmentApiResult, links []LinkApiResult, webhooks []NamedEntityApiModel, runCount int32) *TestRunV2ApiResult {
	this := TestRunV2ApiResult{}
	this.Id = id
	this.Name = name
	this.StateName = stateName
	this.Status = status
	this.ProjectId = projectId
	this.CreatedDate = createdDate
	this.CreatedById = createdById
	this.Attachments = attachments
	this.Links = links
	this.Webhooks = webhooks
	this.RunCount = runCount
	return &this
}

// NewTestRunV2ApiResultWithDefaults instantiates a new TestRunV2ApiResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestRunV2ApiResultWithDefaults() *TestRunV2ApiResult {
	this := TestRunV2ApiResult{}
	return &this
}

// GetId returns the Id field value
func (o *TestRunV2ApiResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TestRunV2ApiResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TestRunV2ApiResult) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *TestRunV2ApiResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TestRunV2ApiResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TestRunV2ApiResult) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunV2ApiResult) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunV2ApiResult) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *TestRunV2ApiResult) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *TestRunV2ApiResult) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *TestRunV2ApiResult) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *TestRunV2ApiResult) UnsetDescription() {
	o.Description.Unset()
}

// GetLaunchSource returns the LaunchSource field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunV2ApiResult) GetLaunchSource() string {
	if o == nil || IsNil(o.LaunchSource.Get()) {
		var ret string
		return ret
	}
	return *o.LaunchSource.Get()
}

// GetLaunchSourceOk returns a tuple with the LaunchSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunV2ApiResult) GetLaunchSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LaunchSource.Get(), o.LaunchSource.IsSet()
}

// HasLaunchSource returns a boolean if a field has been set.
func (o *TestRunV2ApiResult) HasLaunchSource() bool {
	if o != nil && o.LaunchSource.IsSet() {
		return true
	}

	return false
}

// SetLaunchSource gets a reference to the given NullableString and assigns it to the LaunchSource field.
func (o *TestRunV2ApiResult) SetLaunchSource(v string) {
	o.LaunchSource.Set(&v)
}
// SetLaunchSourceNil sets the value for LaunchSource to be an explicit nil
func (o *TestRunV2ApiResult) SetLaunchSourceNil() {
	o.LaunchSource.Set(nil)
}

// UnsetLaunchSource ensures that no value is present for LaunchSource, not even an explicit nil
func (o *TestRunV2ApiResult) UnsetLaunchSource() {
	o.LaunchSource.Unset()
}

// GetStartedOn returns the StartedOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunV2ApiResult) GetStartedOn() time.Time {
	if o == nil || IsNil(o.StartedOn.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartedOn.Get()
}

// GetStartedOnOk returns a tuple with the StartedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunV2ApiResult) GetStartedOnOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedOn.Get(), o.StartedOn.IsSet()
}

// HasStartedOn returns a boolean if a field has been set.
func (o *TestRunV2ApiResult) HasStartedOn() bool {
	if o != nil && o.StartedOn.IsSet() {
		return true
	}

	return false
}

// SetStartedOn gets a reference to the given NullableTime and assigns it to the StartedOn field.
func (o *TestRunV2ApiResult) SetStartedOn(v time.Time) {
	o.StartedOn.Set(&v)
}
// SetStartedOnNil sets the value for StartedOn to be an explicit nil
func (o *TestRunV2ApiResult) SetStartedOnNil() {
	o.StartedOn.Set(nil)
}

// UnsetStartedOn ensures that no value is present for StartedOn, not even an explicit nil
func (o *TestRunV2ApiResult) UnsetStartedOn() {
	o.StartedOn.Unset()
}

// GetCompletedOn returns the CompletedOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunV2ApiResult) GetCompletedOn() time.Time {
	if o == nil || IsNil(o.CompletedOn.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CompletedOn.Get()
}

// GetCompletedOnOk returns a tuple with the CompletedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunV2ApiResult) GetCompletedOnOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedOn.Get(), o.CompletedOn.IsSet()
}

// HasCompletedOn returns a boolean if a field has been set.
func (o *TestRunV2ApiResult) HasCompletedOn() bool {
	if o != nil && o.CompletedOn.IsSet() {
		return true
	}

	return false
}

// SetCompletedOn gets a reference to the given NullableTime and assigns it to the CompletedOn field.
func (o *TestRunV2ApiResult) SetCompletedOn(v time.Time) {
	o.CompletedOn.Set(&v)
}
// SetCompletedOnNil sets the value for CompletedOn to be an explicit nil
func (o *TestRunV2ApiResult) SetCompletedOnNil() {
	o.CompletedOn.Set(nil)
}

// UnsetCompletedOn ensures that no value is present for CompletedOn, not even an explicit nil
func (o *TestRunV2ApiResult) UnsetCompletedOn() {
	o.CompletedOn.Unset()
}

// GetStateName returns the StateName field value
// Deprecated
func (o *TestRunV2ApiResult) GetStateName() TestRunState {
	if o == nil {
		var ret TestRunState
		return ret
	}

	return o.StateName
}

// GetStateNameOk returns a tuple with the StateName field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *TestRunV2ApiResult) GetStateNameOk() (*TestRunState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StateName, true
}

// SetStateName sets field value
// Deprecated
func (o *TestRunV2ApiResult) SetStateName(v TestRunState) {
	o.StateName = v
}

// GetStatus returns the Status field value
func (o *TestRunV2ApiResult) GetStatus() TestStatusApiResult {
	if o == nil {
		var ret TestStatusApiResult
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *TestRunV2ApiResult) GetStatusOk() (*TestStatusApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *TestRunV2ApiResult) SetStatus(v TestStatusApiResult) {
	o.Status = v
}

// GetProjectId returns the ProjectId field value
func (o *TestRunV2ApiResult) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *TestRunV2ApiResult) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *TestRunV2ApiResult) SetProjectId(v string) {
	o.ProjectId = v
}

// GetTestPlanId returns the TestPlanId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunV2ApiResult) GetTestPlanId() string {
	if o == nil || IsNil(o.TestPlanId.Get()) {
		var ret string
		return ret
	}
	return *o.TestPlanId.Get()
}

// GetTestPlanIdOk returns a tuple with the TestPlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunV2ApiResult) GetTestPlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TestPlanId.Get(), o.TestPlanId.IsSet()
}

// HasTestPlanId returns a boolean if a field has been set.
func (o *TestRunV2ApiResult) HasTestPlanId() bool {
	if o != nil && o.TestPlanId.IsSet() {
		return true
	}

	return false
}

// SetTestPlanId gets a reference to the given NullableString and assigns it to the TestPlanId field.
func (o *TestRunV2ApiResult) SetTestPlanId(v string) {
	o.TestPlanId.Set(&v)
}
// SetTestPlanIdNil sets the value for TestPlanId to be an explicit nil
func (o *TestRunV2ApiResult) SetTestPlanIdNil() {
	o.TestPlanId.Set(nil)
}

// UnsetTestPlanId ensures that no value is present for TestPlanId, not even an explicit nil
func (o *TestRunV2ApiResult) UnsetTestPlanId() {
	o.TestPlanId.Unset()
}

// GetTestResults returns the TestResults field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunV2ApiResult) GetTestResults() []TestResultV2GetModel {
	if o == nil {
		var ret []TestResultV2GetModel
		return ret
	}
	return o.TestResults
}

// GetTestResultsOk returns a tuple with the TestResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunV2ApiResult) GetTestResultsOk() ([]TestResultV2GetModel, bool) {
	if o == nil || IsNil(o.TestResults) {
		return nil, false
	}
	return o.TestResults, true
}

// HasTestResults returns a boolean if a field has been set.
func (o *TestRunV2ApiResult) HasTestResults() bool {
	if o != nil && !IsNil(o.TestResults) {
		return true
	}

	return false
}

// SetTestResults gets a reference to the given []TestResultV2GetModel and assigns it to the TestResults field.
func (o *TestRunV2ApiResult) SetTestResults(v []TestResultV2GetModel) {
	o.TestResults = v
}

// GetCreatedDate returns the CreatedDate field value
func (o *TestRunV2ApiResult) GetCreatedDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value
// and a boolean to check if the value has been set.
func (o *TestRunV2ApiResult) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedDate, true
}

// SetCreatedDate sets field value
func (o *TestRunV2ApiResult) SetCreatedDate(v time.Time) {
	o.CreatedDate = v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunV2ApiResult) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate.Get()
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunV2ApiResult) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedDate.Get(), o.ModifiedDate.IsSet()
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *TestRunV2ApiResult) HasModifiedDate() bool {
	if o != nil && o.ModifiedDate.IsSet() {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given NullableTime and assigns it to the ModifiedDate field.
func (o *TestRunV2ApiResult) SetModifiedDate(v time.Time) {
	o.ModifiedDate.Set(&v)
}
// SetModifiedDateNil sets the value for ModifiedDate to be an explicit nil
func (o *TestRunV2ApiResult) SetModifiedDateNil() {
	o.ModifiedDate.Set(nil)
}

// UnsetModifiedDate ensures that no value is present for ModifiedDate, not even an explicit nil
func (o *TestRunV2ApiResult) UnsetModifiedDate() {
	o.ModifiedDate.Unset()
}

// GetCreatedById returns the CreatedById field value
func (o *TestRunV2ApiResult) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *TestRunV2ApiResult) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *TestRunV2ApiResult) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetModifiedById returns the ModifiedById field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunV2ApiResult) GetModifiedById() string {
	if o == nil || IsNil(o.ModifiedById.Get()) {
		var ret string
		return ret
	}
	return *o.ModifiedById.Get()
}

// GetModifiedByIdOk returns a tuple with the ModifiedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunV2ApiResult) GetModifiedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedById.Get(), o.ModifiedById.IsSet()
}

// HasModifiedById returns a boolean if a field has been set.
func (o *TestRunV2ApiResult) HasModifiedById() bool {
	if o != nil && o.ModifiedById.IsSet() {
		return true
	}

	return false
}

// SetModifiedById gets a reference to the given NullableString and assigns it to the ModifiedById field.
func (o *TestRunV2ApiResult) SetModifiedById(v string) {
	o.ModifiedById.Set(&v)
}
// SetModifiedByIdNil sets the value for ModifiedById to be an explicit nil
func (o *TestRunV2ApiResult) SetModifiedByIdNil() {
	o.ModifiedById.Set(nil)
}

// UnsetModifiedById ensures that no value is present for ModifiedById, not even an explicit nil
func (o *TestRunV2ApiResult) UnsetModifiedById() {
	o.ModifiedById.Unset()
}

// GetCreatedByUserName returns the CreatedByUserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunV2ApiResult) GetCreatedByUserName() string {
	if o == nil || IsNil(o.CreatedByUserName.Get()) {
		var ret string
		return ret
	}
	return *o.CreatedByUserName.Get()
}

// GetCreatedByUserNameOk returns a tuple with the CreatedByUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunV2ApiResult) GetCreatedByUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedByUserName.Get(), o.CreatedByUserName.IsSet()
}

// HasCreatedByUserName returns a boolean if a field has been set.
func (o *TestRunV2ApiResult) HasCreatedByUserName() bool {
	if o != nil && o.CreatedByUserName.IsSet() {
		return true
	}

	return false
}

// SetCreatedByUserName gets a reference to the given NullableString and assigns it to the CreatedByUserName field.
func (o *TestRunV2ApiResult) SetCreatedByUserName(v string) {
	o.CreatedByUserName.Set(&v)
}
// SetCreatedByUserNameNil sets the value for CreatedByUserName to be an explicit nil
func (o *TestRunV2ApiResult) SetCreatedByUserNameNil() {
	o.CreatedByUserName.Set(nil)
}

// UnsetCreatedByUserName ensures that no value is present for CreatedByUserName, not even an explicit nil
func (o *TestRunV2ApiResult) UnsetCreatedByUserName() {
	o.CreatedByUserName.Unset()
}

// GetAttachments returns the Attachments field value
func (o *TestRunV2ApiResult) GetAttachments() []AttachmentApiResult {
	if o == nil {
		var ret []AttachmentApiResult
		return ret
	}

	return o.Attachments
}

// GetAttachmentsOk returns a tuple with the Attachments field value
// and a boolean to check if the value has been set.
func (o *TestRunV2ApiResult) GetAttachmentsOk() ([]AttachmentApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Attachments, true
}

// SetAttachments sets field value
func (o *TestRunV2ApiResult) SetAttachments(v []AttachmentApiResult) {
	o.Attachments = v
}

// GetLinks returns the Links field value
func (o *TestRunV2ApiResult) GetLinks() []LinkApiResult {
	if o == nil {
		var ret []LinkApiResult
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *TestRunV2ApiResult) GetLinksOk() ([]LinkApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Links, true
}

// SetLinks sets field value
func (o *TestRunV2ApiResult) SetLinks(v []LinkApiResult) {
	o.Links = v
}

// GetCustomParameters returns the CustomParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunV2ApiResult) GetCustomParameters() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.CustomParameters
}

// GetCustomParametersOk returns a tuple with the CustomParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunV2ApiResult) GetCustomParametersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.CustomParameters) {
		return nil, false
	}
	return &o.CustomParameters, true
}

// HasCustomParameters returns a boolean if a field has been set.
func (o *TestRunV2ApiResult) HasCustomParameters() bool {
	if o != nil && !IsNil(o.CustomParameters) {
		return true
	}

	return false
}

// SetCustomParameters gets a reference to the given map[string]string and assigns it to the CustomParameters field.
func (o *TestRunV2ApiResult) SetCustomParameters(v map[string]string) {
	o.CustomParameters = v
}

// GetWebhooks returns the Webhooks field value
func (o *TestRunV2ApiResult) GetWebhooks() []NamedEntityApiModel {
	if o == nil {
		var ret []NamedEntityApiModel
		return ret
	}

	return o.Webhooks
}

// GetWebhooksOk returns a tuple with the Webhooks field value
// and a boolean to check if the value has been set.
func (o *TestRunV2ApiResult) GetWebhooksOk() ([]NamedEntityApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Webhooks, true
}

// SetWebhooks sets field value
func (o *TestRunV2ApiResult) SetWebhooks(v []NamedEntityApiModel) {
	o.Webhooks = v
}

// GetRunCount returns the RunCount field value
func (o *TestRunV2ApiResult) GetRunCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RunCount
}

// GetRunCountOk returns a tuple with the RunCount field value
// and a boolean to check if the value has been set.
func (o *TestRunV2ApiResult) GetRunCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RunCount, true
}

// SetRunCount sets field value
func (o *TestRunV2ApiResult) SetRunCount(v int32) {
	o.RunCount = v
}

func (o TestRunV2ApiResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestRunV2ApiResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.LaunchSource.IsSet() {
		toSerialize["launchSource"] = o.LaunchSource.Get()
	}
	if o.StartedOn.IsSet() {
		toSerialize["startedOn"] = o.StartedOn.Get()
	}
	if o.CompletedOn.IsSet() {
		toSerialize["completedOn"] = o.CompletedOn.Get()
	}
	toSerialize["stateName"] = o.StateName
	toSerialize["status"] = o.Status
	toSerialize["projectId"] = o.ProjectId
	if o.TestPlanId.IsSet() {
		toSerialize["testPlanId"] = o.TestPlanId.Get()
	}
	if o.TestResults != nil {
		toSerialize["testResults"] = o.TestResults
	}
	toSerialize["createdDate"] = o.CreatedDate
	if o.ModifiedDate.IsSet() {
		toSerialize["modifiedDate"] = o.ModifiedDate.Get()
	}
	toSerialize["createdById"] = o.CreatedById
	if o.ModifiedById.IsSet() {
		toSerialize["modifiedById"] = o.ModifiedById.Get()
	}
	if o.CreatedByUserName.IsSet() {
		toSerialize["createdByUserName"] = o.CreatedByUserName.Get()
	}
	toSerialize["attachments"] = o.Attachments
	toSerialize["links"] = o.Links
	if o.CustomParameters != nil {
		toSerialize["customParameters"] = o.CustomParameters
	}
	toSerialize["webhooks"] = o.Webhooks
	toSerialize["runCount"] = o.RunCount
	return toSerialize, nil
}

func (o *TestRunV2ApiResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"stateName",
		"status",
		"projectId",
		"createdDate",
		"createdById",
		"attachments",
		"links",
		"webhooks",
		"runCount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestRunV2ApiResult := _TestRunV2ApiResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestRunV2ApiResult)

	if err != nil {
		return err
	}

	*o = TestRunV2ApiResult(varTestRunV2ApiResult)

	return err
}

type NullableTestRunV2ApiResult struct {
	value *TestRunV2ApiResult
	isSet bool
}

func (v NullableTestRunV2ApiResult) Get() *TestRunV2ApiResult {
	return v.value
}

func (v *NullableTestRunV2ApiResult) Set(val *TestRunV2ApiResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTestRunV2ApiResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTestRunV2ApiResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestRunV2ApiResult(val *TestRunV2ApiResult) *NullableTestRunV2ApiResult {
	return &NullableTestRunV2ApiResult{value: val, isSet: true}
}

func (v NullableTestRunV2ApiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestRunV2ApiResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


