/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ProjectFailureCategoryApiResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectFailureCategoryApiResult{}

// ProjectFailureCategoryApiResult struct for ProjectFailureCategoryApiResult
type ProjectFailureCategoryApiResult struct {
	// Failure category identifier
	Id string `json:"id"`
	// Failure category name
	Name NullableString `json:"name,omitempty"`
	// Category type
	FailureCategory FailureCategory `json:"failureCategory"`
	// Failure category creation date
	CreatedDate time.Time `json:"createdDate"`
	// Failure category creator identifier
	CreatedById string `json:"createdById"`
	// Failure category last modification date
	ModifiedDate NullableTime `json:"modifiedDate,omitempty"`
	// Failure category last modifier identifier
	ModifiedById NullableString `json:"modifiedById,omitempty"`
	// Projects relations count
	ProjectsCount int32 `json:"projectsCount"`
	// Category type index
	FailureCategoryId int32 `json:"failureCategoryId"`
	// Regexes count
	RegexCount int32 `json:"regexCount"`
}

type _ProjectFailureCategoryApiResult ProjectFailureCategoryApiResult

// NewProjectFailureCategoryApiResult instantiates a new ProjectFailureCategoryApiResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectFailureCategoryApiResult(id string, failureCategory FailureCategory, createdDate time.Time, createdById string, projectsCount int32, failureCategoryId int32, regexCount int32) *ProjectFailureCategoryApiResult {
	this := ProjectFailureCategoryApiResult{}
	this.Id = id
	this.FailureCategory = failureCategory
	this.CreatedDate = createdDate
	this.CreatedById = createdById
	this.ProjectsCount = projectsCount
	this.FailureCategoryId = failureCategoryId
	this.RegexCount = regexCount
	return &this
}

// NewProjectFailureCategoryApiResultWithDefaults instantiates a new ProjectFailureCategoryApiResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectFailureCategoryApiResultWithDefaults() *ProjectFailureCategoryApiResult {
	this := ProjectFailureCategoryApiResult{}
	return &this
}

// GetId returns the Id field value
func (o *ProjectFailureCategoryApiResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProjectFailureCategoryApiResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProjectFailureCategoryApiResult) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFailureCategoryApiResult) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFailureCategoryApiResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ProjectFailureCategoryApiResult) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ProjectFailureCategoryApiResult) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ProjectFailureCategoryApiResult) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ProjectFailureCategoryApiResult) UnsetName() {
	o.Name.Unset()
}

// GetFailureCategory returns the FailureCategory field value
func (o *ProjectFailureCategoryApiResult) GetFailureCategory() FailureCategory {
	if o == nil {
		var ret FailureCategory
		return ret
	}

	return o.FailureCategory
}

// GetFailureCategoryOk returns a tuple with the FailureCategory field value
// and a boolean to check if the value has been set.
func (o *ProjectFailureCategoryApiResult) GetFailureCategoryOk() (*FailureCategory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailureCategory, true
}

// SetFailureCategory sets field value
func (o *ProjectFailureCategoryApiResult) SetFailureCategory(v FailureCategory) {
	o.FailureCategory = v
}

// GetCreatedDate returns the CreatedDate field value
func (o *ProjectFailureCategoryApiResult) GetCreatedDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value
// and a boolean to check if the value has been set.
func (o *ProjectFailureCategoryApiResult) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedDate, true
}

// SetCreatedDate sets field value
func (o *ProjectFailureCategoryApiResult) SetCreatedDate(v time.Time) {
	o.CreatedDate = v
}

// GetCreatedById returns the CreatedById field value
func (o *ProjectFailureCategoryApiResult) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *ProjectFailureCategoryApiResult) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *ProjectFailureCategoryApiResult) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFailureCategoryApiResult) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate.Get()
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFailureCategoryApiResult) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedDate.Get(), o.ModifiedDate.IsSet()
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *ProjectFailureCategoryApiResult) HasModifiedDate() bool {
	if o != nil && o.ModifiedDate.IsSet() {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given NullableTime and assigns it to the ModifiedDate field.
func (o *ProjectFailureCategoryApiResult) SetModifiedDate(v time.Time) {
	o.ModifiedDate.Set(&v)
}
// SetModifiedDateNil sets the value for ModifiedDate to be an explicit nil
func (o *ProjectFailureCategoryApiResult) SetModifiedDateNil() {
	o.ModifiedDate.Set(nil)
}

// UnsetModifiedDate ensures that no value is present for ModifiedDate, not even an explicit nil
func (o *ProjectFailureCategoryApiResult) UnsetModifiedDate() {
	o.ModifiedDate.Unset()
}

// GetModifiedById returns the ModifiedById field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectFailureCategoryApiResult) GetModifiedById() string {
	if o == nil || IsNil(o.ModifiedById.Get()) {
		var ret string
		return ret
	}
	return *o.ModifiedById.Get()
}

// GetModifiedByIdOk returns a tuple with the ModifiedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectFailureCategoryApiResult) GetModifiedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedById.Get(), o.ModifiedById.IsSet()
}

// HasModifiedById returns a boolean if a field has been set.
func (o *ProjectFailureCategoryApiResult) HasModifiedById() bool {
	if o != nil && o.ModifiedById.IsSet() {
		return true
	}

	return false
}

// SetModifiedById gets a reference to the given NullableString and assigns it to the ModifiedById field.
func (o *ProjectFailureCategoryApiResult) SetModifiedById(v string) {
	o.ModifiedById.Set(&v)
}
// SetModifiedByIdNil sets the value for ModifiedById to be an explicit nil
func (o *ProjectFailureCategoryApiResult) SetModifiedByIdNil() {
	o.ModifiedById.Set(nil)
}

// UnsetModifiedById ensures that no value is present for ModifiedById, not even an explicit nil
func (o *ProjectFailureCategoryApiResult) UnsetModifiedById() {
	o.ModifiedById.Unset()
}

// GetProjectsCount returns the ProjectsCount field value
func (o *ProjectFailureCategoryApiResult) GetProjectsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProjectsCount
}

// GetProjectsCountOk returns a tuple with the ProjectsCount field value
// and a boolean to check if the value has been set.
func (o *ProjectFailureCategoryApiResult) GetProjectsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectsCount, true
}

// SetProjectsCount sets field value
func (o *ProjectFailureCategoryApiResult) SetProjectsCount(v int32) {
	o.ProjectsCount = v
}

// GetFailureCategoryId returns the FailureCategoryId field value
func (o *ProjectFailureCategoryApiResult) GetFailureCategoryId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FailureCategoryId
}

// GetFailureCategoryIdOk returns a tuple with the FailureCategoryId field value
// and a boolean to check if the value has been set.
func (o *ProjectFailureCategoryApiResult) GetFailureCategoryIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailureCategoryId, true
}

// SetFailureCategoryId sets field value
func (o *ProjectFailureCategoryApiResult) SetFailureCategoryId(v int32) {
	o.FailureCategoryId = v
}

// GetRegexCount returns the RegexCount field value
func (o *ProjectFailureCategoryApiResult) GetRegexCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RegexCount
}

// GetRegexCountOk returns a tuple with the RegexCount field value
// and a boolean to check if the value has been set.
func (o *ProjectFailureCategoryApiResult) GetRegexCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegexCount, true
}

// SetRegexCount sets field value
func (o *ProjectFailureCategoryApiResult) SetRegexCount(v int32) {
	o.RegexCount = v
}

func (o ProjectFailureCategoryApiResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectFailureCategoryApiResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	toSerialize["failureCategory"] = o.FailureCategory
	toSerialize["createdDate"] = o.CreatedDate
	toSerialize["createdById"] = o.CreatedById
	if o.ModifiedDate.IsSet() {
		toSerialize["modifiedDate"] = o.ModifiedDate.Get()
	}
	if o.ModifiedById.IsSet() {
		toSerialize["modifiedById"] = o.ModifiedById.Get()
	}
	toSerialize["projectsCount"] = o.ProjectsCount
	toSerialize["failureCategoryId"] = o.FailureCategoryId
	toSerialize["regexCount"] = o.RegexCount
	return toSerialize, nil
}

func (o *ProjectFailureCategoryApiResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"failureCategory",
		"createdDate",
		"createdById",
		"projectsCount",
		"failureCategoryId",
		"regexCount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProjectFailureCategoryApiResult := _ProjectFailureCategoryApiResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProjectFailureCategoryApiResult)

	if err != nil {
		return err
	}

	*o = ProjectFailureCategoryApiResult(varProjectFailureCategoryApiResult)

	return err
}

type NullableProjectFailureCategoryApiResult struct {
	value *ProjectFailureCategoryApiResult
	isSet bool
}

func (v NullableProjectFailureCategoryApiResult) Get() *ProjectFailureCategoryApiResult {
	return v.value
}

func (v *NullableProjectFailureCategoryApiResult) Set(val *ProjectFailureCategoryApiResult) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectFailureCategoryApiResult) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectFailureCategoryApiResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectFailureCategoryApiResult(val *ProjectFailureCategoryApiResult) *NullableProjectFailureCategoryApiResult {
	return &NullableProjectFailureCategoryApiResult{value: val, isSet: true}
}

func (v NullableProjectFailureCategoryApiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectFailureCategoryApiResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


