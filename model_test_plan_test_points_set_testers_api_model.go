/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TestPlanTestPointsSetTestersApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestPlanTestPointsSetTestersApiModel{}

// TestPlanTestPointsSetTestersApiModel struct for TestPlanTestPointsSetTestersApiModel
type TestPlanTestPointsSetTestersApiModel struct {
	Filter NullableTestPlanTestPointsSearchApiModel `json:"filter,omitempty"`
	ExtractionModel NullableTestPlanTestPointsExtractionApiModel `json:"extractionModel,omitempty"`
	TesterIds []string `json:"testerIds"`
}

type _TestPlanTestPointsSetTestersApiModel TestPlanTestPointsSetTestersApiModel

// NewTestPlanTestPointsSetTestersApiModel instantiates a new TestPlanTestPointsSetTestersApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestPlanTestPointsSetTestersApiModel(testerIds []string) *TestPlanTestPointsSetTestersApiModel {
	this := TestPlanTestPointsSetTestersApiModel{}
	this.TesterIds = testerIds
	return &this
}

// NewTestPlanTestPointsSetTestersApiModelWithDefaults instantiates a new TestPlanTestPointsSetTestersApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestPlanTestPointsSetTestersApiModelWithDefaults() *TestPlanTestPointsSetTestersApiModel {
	this := TestPlanTestPointsSetTestersApiModel{}
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPlanTestPointsSetTestersApiModel) GetFilter() TestPlanTestPointsSearchApiModel {
	if o == nil || IsNil(o.Filter.Get()) {
		var ret TestPlanTestPointsSearchApiModel
		return ret
	}
	return *o.Filter.Get()
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPlanTestPointsSetTestersApiModel) GetFilterOk() (*TestPlanTestPointsSearchApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Filter.Get(), o.Filter.IsSet()
}

// HasFilter returns a boolean if a field has been set.
func (o *TestPlanTestPointsSetTestersApiModel) HasFilter() bool {
	if o != nil && o.Filter.IsSet() {
		return true
	}

	return false
}

// SetFilter gets a reference to the given NullableTestPlanTestPointsSearchApiModel and assigns it to the Filter field.
func (o *TestPlanTestPointsSetTestersApiModel) SetFilter(v TestPlanTestPointsSearchApiModel) {
	o.Filter.Set(&v)
}
// SetFilterNil sets the value for Filter to be an explicit nil
func (o *TestPlanTestPointsSetTestersApiModel) SetFilterNil() {
	o.Filter.Set(nil)
}

// UnsetFilter ensures that no value is present for Filter, not even an explicit nil
func (o *TestPlanTestPointsSetTestersApiModel) UnsetFilter() {
	o.Filter.Unset()
}

// GetExtractionModel returns the ExtractionModel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPlanTestPointsSetTestersApiModel) GetExtractionModel() TestPlanTestPointsExtractionApiModel {
	if o == nil || IsNil(o.ExtractionModel.Get()) {
		var ret TestPlanTestPointsExtractionApiModel
		return ret
	}
	return *o.ExtractionModel.Get()
}

// GetExtractionModelOk returns a tuple with the ExtractionModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPlanTestPointsSetTestersApiModel) GetExtractionModelOk() (*TestPlanTestPointsExtractionApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtractionModel.Get(), o.ExtractionModel.IsSet()
}

// HasExtractionModel returns a boolean if a field has been set.
func (o *TestPlanTestPointsSetTestersApiModel) HasExtractionModel() bool {
	if o != nil && o.ExtractionModel.IsSet() {
		return true
	}

	return false
}

// SetExtractionModel gets a reference to the given NullableTestPlanTestPointsExtractionApiModel and assigns it to the ExtractionModel field.
func (o *TestPlanTestPointsSetTestersApiModel) SetExtractionModel(v TestPlanTestPointsExtractionApiModel) {
	o.ExtractionModel.Set(&v)
}
// SetExtractionModelNil sets the value for ExtractionModel to be an explicit nil
func (o *TestPlanTestPointsSetTestersApiModel) SetExtractionModelNil() {
	o.ExtractionModel.Set(nil)
}

// UnsetExtractionModel ensures that no value is present for ExtractionModel, not even an explicit nil
func (o *TestPlanTestPointsSetTestersApiModel) UnsetExtractionModel() {
	o.ExtractionModel.Unset()
}

// GetTesterIds returns the TesterIds field value
func (o *TestPlanTestPointsSetTestersApiModel) GetTesterIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TesterIds
}

// GetTesterIdsOk returns a tuple with the TesterIds field value
// and a boolean to check if the value has been set.
func (o *TestPlanTestPointsSetTestersApiModel) GetTesterIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TesterIds, true
}

// SetTesterIds sets field value
func (o *TestPlanTestPointsSetTestersApiModel) SetTesterIds(v []string) {
	o.TesterIds = v
}

func (o TestPlanTestPointsSetTestersApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestPlanTestPointsSetTestersApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Filter.IsSet() {
		toSerialize["filter"] = o.Filter.Get()
	}
	if o.ExtractionModel.IsSet() {
		toSerialize["extractionModel"] = o.ExtractionModel.Get()
	}
	toSerialize["testerIds"] = o.TesterIds
	return toSerialize, nil
}

func (o *TestPlanTestPointsSetTestersApiModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"testerIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestPlanTestPointsSetTestersApiModel := _TestPlanTestPointsSetTestersApiModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestPlanTestPointsSetTestersApiModel)

	if err != nil {
		return err
	}

	*o = TestPlanTestPointsSetTestersApiModel(varTestPlanTestPointsSetTestersApiModel)

	return err
}

type NullableTestPlanTestPointsSetTestersApiModel struct {
	value *TestPlanTestPointsSetTestersApiModel
	isSet bool
}

func (v NullableTestPlanTestPointsSetTestersApiModel) Get() *TestPlanTestPointsSetTestersApiModel {
	return v.value
}

func (v *NullableTestPlanTestPointsSetTestersApiModel) Set(val *TestPlanTestPointsSetTestersApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestPlanTestPointsSetTestersApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestPlanTestPointsSetTestersApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestPlanTestPointsSetTestersApiModel(val *TestPlanTestPointsSetTestersApiModel) *NullableTestPlanTestPointsSetTestersApiModel {
	return &NullableTestPlanTestPointsSetTestersApiModel{value: val, isSet: true}
}

func (v NullableTestPlanTestPointsSetTestersApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestPlanTestPointsSetTestersApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


