/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AutoTestResultReasonGroupItemApiResultReply type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoTestResultReasonGroupItemApiResultReply{}

// AutoTestResultReasonGroupItemApiResultReply struct for AutoTestResultReasonGroupItemApiResultReply
type AutoTestResultReasonGroupItemApiResultReply struct {
	Data []AutoTestResultReasonGroupItemApiResult `json:"data"`
	TotalCount int32 `json:"totalCount"`
}

type _AutoTestResultReasonGroupItemApiResultReply AutoTestResultReasonGroupItemApiResultReply

// NewAutoTestResultReasonGroupItemApiResultReply instantiates a new AutoTestResultReasonGroupItemApiResultReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoTestResultReasonGroupItemApiResultReply(data []AutoTestResultReasonGroupItemApiResult, totalCount int32) *AutoTestResultReasonGroupItemApiResultReply {
	this := AutoTestResultReasonGroupItemApiResultReply{}
	this.Data = data
	this.TotalCount = totalCount
	return &this
}

// NewAutoTestResultReasonGroupItemApiResultReplyWithDefaults instantiates a new AutoTestResultReasonGroupItemApiResultReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoTestResultReasonGroupItemApiResultReplyWithDefaults() *AutoTestResultReasonGroupItemApiResultReply {
	this := AutoTestResultReasonGroupItemApiResultReply{}
	return &this
}

// GetData returns the Data field value
func (o *AutoTestResultReasonGroupItemApiResultReply) GetData() []AutoTestResultReasonGroupItemApiResult {
	if o == nil {
		var ret []AutoTestResultReasonGroupItemApiResult
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *AutoTestResultReasonGroupItemApiResultReply) GetDataOk() ([]AutoTestResultReasonGroupItemApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *AutoTestResultReasonGroupItemApiResultReply) SetData(v []AutoTestResultReasonGroupItemApiResult) {
	o.Data = v
}

// GetTotalCount returns the TotalCount field value
func (o *AutoTestResultReasonGroupItemApiResultReply) GetTotalCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *AutoTestResultReasonGroupItemApiResultReply) GetTotalCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *AutoTestResultReasonGroupItemApiResultReply) SetTotalCount(v int32) {
	o.TotalCount = v
}

func (o AutoTestResultReasonGroupItemApiResultReply) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoTestResultReasonGroupItemApiResultReply) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	toSerialize["totalCount"] = o.TotalCount
	return toSerialize, nil
}

func (o *AutoTestResultReasonGroupItemApiResultReply) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"totalCount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoTestResultReasonGroupItemApiResultReply := _AutoTestResultReasonGroupItemApiResultReply{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoTestResultReasonGroupItemApiResultReply)

	if err != nil {
		return err
	}

	*o = AutoTestResultReasonGroupItemApiResultReply(varAutoTestResultReasonGroupItemApiResultReply)

	return err
}

type NullableAutoTestResultReasonGroupItemApiResultReply struct {
	value *AutoTestResultReasonGroupItemApiResultReply
	isSet bool
}

func (v NullableAutoTestResultReasonGroupItemApiResultReply) Get() *AutoTestResultReasonGroupItemApiResultReply {
	return v.value
}

func (v *NullableAutoTestResultReasonGroupItemApiResultReply) Set(val *AutoTestResultReasonGroupItemApiResultReply) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoTestResultReasonGroupItemApiResultReply) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoTestResultReasonGroupItemApiResultReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoTestResultReasonGroupItemApiResultReply(val *AutoTestResultReasonGroupItemApiResultReply) *NullableAutoTestResultReasonGroupItemApiResultReply {
	return &NullableAutoTestResultReasonGroupItemApiResultReply{value: val, isSet: true}
}

func (v NullableAutoTestResultReasonGroupItemApiResultReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoTestResultReasonGroupItemApiResultReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


