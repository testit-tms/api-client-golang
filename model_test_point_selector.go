/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the TestPointSelector type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestPointSelector{}

// TestPointSelector struct for TestPointSelector
type TestPointSelector struct {
	// Specifies the configuration GUIDs, from which test points are created. You can specify several GUIDs.
	ConfigurationId string `json:"configurationId"`
	// Specifies the work item GUIDs, from which test points are created. You can specify several GUIDs.
	WorkItemIds []string `json:"workItemIds"`
}

// NewTestPointSelector instantiates a new TestPointSelector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestPointSelector(configurationId string, workItemIds []string) *TestPointSelector {
	this := TestPointSelector{}
	this.ConfigurationId = configurationId
	this.WorkItemIds = workItemIds
	return &this
}

// NewTestPointSelectorWithDefaults instantiates a new TestPointSelector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestPointSelectorWithDefaults() *TestPointSelector {
	this := TestPointSelector{}
	return &this
}

// GetConfigurationId returns the ConfigurationId field value
func (o *TestPointSelector) GetConfigurationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigurationId
}

// GetConfigurationIdOk returns a tuple with the ConfigurationId field value
// and a boolean to check if the value has been set.
func (o *TestPointSelector) GetConfigurationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfigurationId, true
}

// SetConfigurationId sets field value
func (o *TestPointSelector) SetConfigurationId(v string) {
	o.ConfigurationId = v
}

// GetWorkItemIds returns the WorkItemIds field value
func (o *TestPointSelector) GetWorkItemIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.WorkItemIds
}

// GetWorkItemIdsOk returns a tuple with the WorkItemIds field value
// and a boolean to check if the value has been set.
func (o *TestPointSelector) GetWorkItemIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkItemIds, true
}

// SetWorkItemIds sets field value
func (o *TestPointSelector) SetWorkItemIds(v []string) {
	o.WorkItemIds = v
}

func (o TestPointSelector) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestPointSelector) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["configurationId"] = o.ConfigurationId
	toSerialize["workItemIds"] = o.WorkItemIds
	return toSerialize, nil
}

type NullableTestPointSelector struct {
	value *TestPointSelector
	isSet bool
}

func (v NullableTestPointSelector) Get() *TestPointSelector {
	return v.value
}

func (v *NullableTestPointSelector) Set(val *TestPointSelector) {
	v.value = val
	v.isSet = true
}

func (v NullableTestPointSelector) IsSet() bool {
	return v.isSet
}

func (v *NullableTestPointSelector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestPointSelector(val *TestPointSelector) *NullableTestPointSelector {
	return &NullableTestPointSelector{value: val, isSet: true}
}

func (v NullableTestPointSelector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestPointSelector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


