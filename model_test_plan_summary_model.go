/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TestPlanSummaryModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestPlanSummaryModel{}

// TestPlanSummaryModel struct for TestPlanSummaryModel
type TestPlanSummaryModel struct {
	TotalTestPointsCount int32 `json:"totalTestPointsCount"`
	ManualTestPointsCount int32 `json:"manualTestPointsCount"`
	AutomatedTestPointsCount int32 `json:"automatedTestPointsCount"`
	CompletedTestPointsCount int32 `json:"completedTestPointsCount"`
	DefectsCount int32 `json:"defectsCount"`
	PlannedTestPointsDuration int64 `json:"plannedTestPointsDuration"`
	SpentTestPointsDuration NullableInt64 `json:"spentTestPointsDuration,omitempty"`
}

type _TestPlanSummaryModel TestPlanSummaryModel

// NewTestPlanSummaryModel instantiates a new TestPlanSummaryModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestPlanSummaryModel(totalTestPointsCount int32, manualTestPointsCount int32, automatedTestPointsCount int32, completedTestPointsCount int32, defectsCount int32, plannedTestPointsDuration int64) *TestPlanSummaryModel {
	this := TestPlanSummaryModel{}
	this.TotalTestPointsCount = totalTestPointsCount
	this.ManualTestPointsCount = manualTestPointsCount
	this.AutomatedTestPointsCount = automatedTestPointsCount
	this.CompletedTestPointsCount = completedTestPointsCount
	this.DefectsCount = defectsCount
	this.PlannedTestPointsDuration = plannedTestPointsDuration
	return &this
}

// NewTestPlanSummaryModelWithDefaults instantiates a new TestPlanSummaryModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestPlanSummaryModelWithDefaults() *TestPlanSummaryModel {
	this := TestPlanSummaryModel{}
	return &this
}

// GetTotalTestPointsCount returns the TotalTestPointsCount field value
func (o *TestPlanSummaryModel) GetTotalTestPointsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalTestPointsCount
}

// GetTotalTestPointsCountOk returns a tuple with the TotalTestPointsCount field value
// and a boolean to check if the value has been set.
func (o *TestPlanSummaryModel) GetTotalTestPointsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalTestPointsCount, true
}

// SetTotalTestPointsCount sets field value
func (o *TestPlanSummaryModel) SetTotalTestPointsCount(v int32) {
	o.TotalTestPointsCount = v
}

// GetManualTestPointsCount returns the ManualTestPointsCount field value
func (o *TestPlanSummaryModel) GetManualTestPointsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ManualTestPointsCount
}

// GetManualTestPointsCountOk returns a tuple with the ManualTestPointsCount field value
// and a boolean to check if the value has been set.
func (o *TestPlanSummaryModel) GetManualTestPointsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ManualTestPointsCount, true
}

// SetManualTestPointsCount sets field value
func (o *TestPlanSummaryModel) SetManualTestPointsCount(v int32) {
	o.ManualTestPointsCount = v
}

// GetAutomatedTestPointsCount returns the AutomatedTestPointsCount field value
func (o *TestPlanSummaryModel) GetAutomatedTestPointsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AutomatedTestPointsCount
}

// GetAutomatedTestPointsCountOk returns a tuple with the AutomatedTestPointsCount field value
// and a boolean to check if the value has been set.
func (o *TestPlanSummaryModel) GetAutomatedTestPointsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutomatedTestPointsCount, true
}

// SetAutomatedTestPointsCount sets field value
func (o *TestPlanSummaryModel) SetAutomatedTestPointsCount(v int32) {
	o.AutomatedTestPointsCount = v
}

// GetCompletedTestPointsCount returns the CompletedTestPointsCount field value
func (o *TestPlanSummaryModel) GetCompletedTestPointsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CompletedTestPointsCount
}

// GetCompletedTestPointsCountOk returns a tuple with the CompletedTestPointsCount field value
// and a boolean to check if the value has been set.
func (o *TestPlanSummaryModel) GetCompletedTestPointsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompletedTestPointsCount, true
}

// SetCompletedTestPointsCount sets field value
func (o *TestPlanSummaryModel) SetCompletedTestPointsCount(v int32) {
	o.CompletedTestPointsCount = v
}

// GetDefectsCount returns the DefectsCount field value
func (o *TestPlanSummaryModel) GetDefectsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DefectsCount
}

// GetDefectsCountOk returns a tuple with the DefectsCount field value
// and a boolean to check if the value has been set.
func (o *TestPlanSummaryModel) GetDefectsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefectsCount, true
}

// SetDefectsCount sets field value
func (o *TestPlanSummaryModel) SetDefectsCount(v int32) {
	o.DefectsCount = v
}

// GetPlannedTestPointsDuration returns the PlannedTestPointsDuration field value
func (o *TestPlanSummaryModel) GetPlannedTestPointsDuration() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PlannedTestPointsDuration
}

// GetPlannedTestPointsDurationOk returns a tuple with the PlannedTestPointsDuration field value
// and a boolean to check if the value has been set.
func (o *TestPlanSummaryModel) GetPlannedTestPointsDurationOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlannedTestPointsDuration, true
}

// SetPlannedTestPointsDuration sets field value
func (o *TestPlanSummaryModel) SetPlannedTestPointsDuration(v int64) {
	o.PlannedTestPointsDuration = v
}

// GetSpentTestPointsDuration returns the SpentTestPointsDuration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPlanSummaryModel) GetSpentTestPointsDuration() int64 {
	if o == nil || IsNil(o.SpentTestPointsDuration.Get()) {
		var ret int64
		return ret
	}
	return *o.SpentTestPointsDuration.Get()
}

// GetSpentTestPointsDurationOk returns a tuple with the SpentTestPointsDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPlanSummaryModel) GetSpentTestPointsDurationOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpentTestPointsDuration.Get(), o.SpentTestPointsDuration.IsSet()
}

// HasSpentTestPointsDuration returns a boolean if a field has been set.
func (o *TestPlanSummaryModel) HasSpentTestPointsDuration() bool {
	if o != nil && o.SpentTestPointsDuration.IsSet() {
		return true
	}

	return false
}

// SetSpentTestPointsDuration gets a reference to the given NullableInt64 and assigns it to the SpentTestPointsDuration field.
func (o *TestPlanSummaryModel) SetSpentTestPointsDuration(v int64) {
	o.SpentTestPointsDuration.Set(&v)
}
// SetSpentTestPointsDurationNil sets the value for SpentTestPointsDuration to be an explicit nil
func (o *TestPlanSummaryModel) SetSpentTestPointsDurationNil() {
	o.SpentTestPointsDuration.Set(nil)
}

// UnsetSpentTestPointsDuration ensures that no value is present for SpentTestPointsDuration, not even an explicit nil
func (o *TestPlanSummaryModel) UnsetSpentTestPointsDuration() {
	o.SpentTestPointsDuration.Unset()
}

func (o TestPlanSummaryModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestPlanSummaryModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["totalTestPointsCount"] = o.TotalTestPointsCount
	toSerialize["manualTestPointsCount"] = o.ManualTestPointsCount
	toSerialize["automatedTestPointsCount"] = o.AutomatedTestPointsCount
	toSerialize["completedTestPointsCount"] = o.CompletedTestPointsCount
	toSerialize["defectsCount"] = o.DefectsCount
	toSerialize["plannedTestPointsDuration"] = o.PlannedTestPointsDuration
	if o.SpentTestPointsDuration.IsSet() {
		toSerialize["spentTestPointsDuration"] = o.SpentTestPointsDuration.Get()
	}
	return toSerialize, nil
}

func (o *TestPlanSummaryModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"totalTestPointsCount",
		"manualTestPointsCount",
		"automatedTestPointsCount",
		"completedTestPointsCount",
		"defectsCount",
		"plannedTestPointsDuration",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestPlanSummaryModel := _TestPlanSummaryModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestPlanSummaryModel)

	if err != nil {
		return err
	}

	*o = TestPlanSummaryModel(varTestPlanSummaryModel)

	return err
}

type NullableTestPlanSummaryModel struct {
	value *TestPlanSummaryModel
	isSet bool
}

func (v NullableTestPlanSummaryModel) Get() *TestPlanSummaryModel {
	return v.value
}

func (v *NullableTestPlanSummaryModel) Set(val *TestPlanSummaryModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestPlanSummaryModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestPlanSummaryModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestPlanSummaryModel(val *TestPlanSummaryModel) *NullableTestPlanSummaryModel {
	return &NullableTestPlanSummaryModel{value: val, isSet: true}
}

func (v NullableTestPlanSummaryModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestPlanSummaryModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


