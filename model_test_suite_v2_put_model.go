/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the TestSuiteV2PutModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestSuiteV2PutModel{}

// TestSuiteV2PutModel struct for TestSuiteV2PutModel
type TestSuiteV2PutModel struct {
	Id string `json:"id"`
	ParentId NullableString `json:"parentId,omitempty"`
	Name string `json:"name"`
	IsDeleted *bool `json:"isDeleted,omitempty"`
}

// NewTestSuiteV2PutModel instantiates a new TestSuiteV2PutModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestSuiteV2PutModel(id string, name string) *TestSuiteV2PutModel {
	this := TestSuiteV2PutModel{}
	this.Id = id
	this.Name = name
	return &this
}

// NewTestSuiteV2PutModelWithDefaults instantiates a new TestSuiteV2PutModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestSuiteV2PutModelWithDefaults() *TestSuiteV2PutModel {
	this := TestSuiteV2PutModel{}
	return &this
}

// GetId returns the Id field value
func (o *TestSuiteV2PutModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TestSuiteV2PutModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TestSuiteV2PutModel) SetId(v string) {
	o.Id = v
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestSuiteV2PutModel) GetParentId() string {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestSuiteV2PutModel) GetParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *TestSuiteV2PutModel) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableString and assigns it to the ParentId field.
func (o *TestSuiteV2PutModel) SetParentId(v string) {
	o.ParentId.Set(&v)
}
// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *TestSuiteV2PutModel) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *TestSuiteV2PutModel) UnsetParentId() {
	o.ParentId.Unset()
}

// GetName returns the Name field value
func (o *TestSuiteV2PutModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TestSuiteV2PutModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TestSuiteV2PutModel) SetName(v string) {
	o.Name = v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *TestSuiteV2PutModel) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestSuiteV2PutModel) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *TestSuiteV2PutModel) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *TestSuiteV2PutModel) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

func (o TestSuiteV2PutModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestSuiteV2PutModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if o.ParentId.IsSet() {
		toSerialize["parentId"] = o.ParentId.Get()
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.IsDeleted) {
		toSerialize["isDeleted"] = o.IsDeleted
	}
	return toSerialize, nil
}

type NullableTestSuiteV2PutModel struct {
	value *TestSuiteV2PutModel
	isSet bool
}

func (v NullableTestSuiteV2PutModel) Get() *TestSuiteV2PutModel {
	return v.value
}

func (v *NullableTestSuiteV2PutModel) Set(val *TestSuiteV2PutModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestSuiteV2PutModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestSuiteV2PutModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestSuiteV2PutModel(val *TestSuiteV2PutModel) *NullableTestSuiteV2PutModel {
	return &NullableTestSuiteV2PutModel{value: val, isSet: true}
}

func (v NullableTestSuiteV2PutModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestSuiteV2PutModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


