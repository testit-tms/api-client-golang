/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateLinkApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateLinkApiModel{}

// UpdateLinkApiModel struct for UpdateLinkApiModel
type UpdateLinkApiModel struct {
	// Link unique identifier
	Id NullableString `json:"id,omitempty"`
	// Link name.
	Title NullableString `json:"title,omitempty"`
	// Address can be specified without protocol, but necessarily with the domain.
	Url string `json:"url"`
	// Link description.
	Description NullableString `json:"description,omitempty"`
	// Specifies the type of the link.
	Type NullableLinkType `json:"type,omitempty"`
	// Flag defines if link relates to integrated jira service
	HasInfo bool `json:"hasInfo"`
}

type _UpdateLinkApiModel UpdateLinkApiModel

// NewUpdateLinkApiModel instantiates a new UpdateLinkApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLinkApiModel(url string, hasInfo bool) *UpdateLinkApiModel {
	this := UpdateLinkApiModel{}
	this.Url = url
	this.HasInfo = hasInfo
	return &this
}

// NewUpdateLinkApiModelWithDefaults instantiates a new UpdateLinkApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLinkApiModelWithDefaults() *UpdateLinkApiModel {
	this := UpdateLinkApiModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateLinkApiModel) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLinkApiModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *UpdateLinkApiModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *UpdateLinkApiModel) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *UpdateLinkApiModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *UpdateLinkApiModel) UnsetId() {
	o.Id.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateLinkApiModel) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLinkApiModel) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateLinkApiModel) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *UpdateLinkApiModel) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *UpdateLinkApiModel) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *UpdateLinkApiModel) UnsetTitle() {
	o.Title.Unset()
}

// GetUrl returns the Url field value
func (o *UpdateLinkApiModel) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *UpdateLinkApiModel) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *UpdateLinkApiModel) SetUrl(v string) {
	o.Url = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateLinkApiModel) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLinkApiModel) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateLinkApiModel) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *UpdateLinkApiModel) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *UpdateLinkApiModel) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *UpdateLinkApiModel) UnsetDescription() {
	o.Description.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateLinkApiModel) GetType() LinkType {
	if o == nil || IsNil(o.Type.Get()) {
		var ret LinkType
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateLinkApiModel) GetTypeOk() (*LinkType, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *UpdateLinkApiModel) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableLinkType and assigns it to the Type field.
func (o *UpdateLinkApiModel) SetType(v LinkType) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *UpdateLinkApiModel) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *UpdateLinkApiModel) UnsetType() {
	o.Type.Unset()
}

// GetHasInfo returns the HasInfo field value
func (o *UpdateLinkApiModel) GetHasInfo() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasInfo
}

// GetHasInfoOk returns a tuple with the HasInfo field value
// and a boolean to check if the value has been set.
func (o *UpdateLinkApiModel) GetHasInfoOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasInfo, true
}

// SetHasInfo sets field value
func (o *UpdateLinkApiModel) SetHasInfo(v bool) {
	o.HasInfo = v
}

func (o UpdateLinkApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateLinkApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	toSerialize["url"] = o.Url
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	toSerialize["hasInfo"] = o.HasInfo
	return toSerialize, nil
}

func (o *UpdateLinkApiModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
		"hasInfo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateLinkApiModel := _UpdateLinkApiModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateLinkApiModel)

	if err != nil {
		return err
	}

	*o = UpdateLinkApiModel(varUpdateLinkApiModel)

	return err
}

type NullableUpdateLinkApiModel struct {
	value *UpdateLinkApiModel
	isSet bool
}

func (v NullableUpdateLinkApiModel) Get() *UpdateLinkApiModel {
	return v.value
}

func (v *NullableUpdateLinkApiModel) Set(val *UpdateLinkApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLinkApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLinkApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLinkApiModel(val *UpdateLinkApiModel) *NullableUpdateLinkApiModel {
	return &NullableUpdateLinkApiModel{value: val, isSet: true}
}

func (v NullableUpdateLinkApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLinkApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


