/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the TestSuiteApiResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestSuiteApiResult{}

// TestSuiteApiResult struct for TestSuiteApiResult
type TestSuiteApiResult struct {
	// Unique ID of the test suite
	Id string `json:"id"`
	// Name of the test suite
	Name string `json:"name"`
	// Type of the test suite
	Type TestSuiteTypeApiResult `json:"type"`
	// Flag indicating whether the structure of the test suite should be saved
	SaveStructure NullableBool `json:"saveStructure"`
	// Flag indicating whether auto-refresh functionality is enabled for the test suite
	AutoRefresh NullableBool `json:"autoRefresh"`
	// The last time the test suite's results were refreshed
	RefreshDate NullableTime `json:"refreshDate"`
	// Unique ID of the parent test suite, if any
	ParentId NullableString `json:"parentId"`
	// Unique ID of the associated test plan
	TestPlanId NullableString `json:"testPlanId"`
}

type _TestSuiteApiResult TestSuiteApiResult

// NewTestSuiteApiResult instantiates a new TestSuiteApiResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestSuiteApiResult(id string, name string, type_ TestSuiteTypeApiResult, saveStructure NullableBool, autoRefresh NullableBool, refreshDate NullableTime, parentId NullableString, testPlanId NullableString) *TestSuiteApiResult {
	this := TestSuiteApiResult{}
	this.Id = id
	this.Name = name
	this.Type = type_
	this.SaveStructure = saveStructure
	this.AutoRefresh = autoRefresh
	this.RefreshDate = refreshDate
	this.ParentId = parentId
	this.TestPlanId = testPlanId
	return &this
}

// NewTestSuiteApiResultWithDefaults instantiates a new TestSuiteApiResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestSuiteApiResultWithDefaults() *TestSuiteApiResult {
	this := TestSuiteApiResult{}
	return &this
}

// GetId returns the Id field value
func (o *TestSuiteApiResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TestSuiteApiResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TestSuiteApiResult) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *TestSuiteApiResult) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TestSuiteApiResult) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TestSuiteApiResult) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *TestSuiteApiResult) GetType() TestSuiteTypeApiResult {
	if o == nil {
		var ret TestSuiteTypeApiResult
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *TestSuiteApiResult) GetTypeOk() (*TestSuiteTypeApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *TestSuiteApiResult) SetType(v TestSuiteTypeApiResult) {
	o.Type = v
}

// GetSaveStructure returns the SaveStructure field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *TestSuiteApiResult) GetSaveStructure() bool {
	if o == nil || o.SaveStructure.Get() == nil {
		var ret bool
		return ret
	}

	return *o.SaveStructure.Get()
}

// GetSaveStructureOk returns a tuple with the SaveStructure field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestSuiteApiResult) GetSaveStructureOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.SaveStructure.Get(), o.SaveStructure.IsSet()
}

// SetSaveStructure sets field value
func (o *TestSuiteApiResult) SetSaveStructure(v bool) {
	o.SaveStructure.Set(&v)
}

// GetAutoRefresh returns the AutoRefresh field value
// If the value is explicit nil, the zero value for bool will be returned
func (o *TestSuiteApiResult) GetAutoRefresh() bool {
	if o == nil || o.AutoRefresh.Get() == nil {
		var ret bool
		return ret
	}

	return *o.AutoRefresh.Get()
}

// GetAutoRefreshOk returns a tuple with the AutoRefresh field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestSuiteApiResult) GetAutoRefreshOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoRefresh.Get(), o.AutoRefresh.IsSet()
}

// SetAutoRefresh sets field value
func (o *TestSuiteApiResult) SetAutoRefresh(v bool) {
	o.AutoRefresh.Set(&v)
}

// GetRefreshDate returns the RefreshDate field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *TestSuiteApiResult) GetRefreshDate() time.Time {
	if o == nil || o.RefreshDate.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.RefreshDate.Get()
}

// GetRefreshDateOk returns a tuple with the RefreshDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestSuiteApiResult) GetRefreshDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.RefreshDate.Get(), o.RefreshDate.IsSet()
}

// SetRefreshDate sets field value
func (o *TestSuiteApiResult) SetRefreshDate(v time.Time) {
	o.RefreshDate.Set(&v)
}

// GetParentId returns the ParentId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TestSuiteApiResult) GetParentId() string {
	if o == nil || o.ParentId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestSuiteApiResult) GetParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// SetParentId sets field value
func (o *TestSuiteApiResult) SetParentId(v string) {
	o.ParentId.Set(&v)
}

// GetTestPlanId returns the TestPlanId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TestSuiteApiResult) GetTestPlanId() string {
	if o == nil || o.TestPlanId.Get() == nil {
		var ret string
		return ret
	}

	return *o.TestPlanId.Get()
}

// GetTestPlanIdOk returns a tuple with the TestPlanId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestSuiteApiResult) GetTestPlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TestPlanId.Get(), o.TestPlanId.IsSet()
}

// SetTestPlanId sets field value
func (o *TestSuiteApiResult) SetTestPlanId(v string) {
	o.TestPlanId.Set(&v)
}

func (o TestSuiteApiResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestSuiteApiResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	toSerialize["saveStructure"] = o.SaveStructure.Get()
	toSerialize["autoRefresh"] = o.AutoRefresh.Get()
	toSerialize["refreshDate"] = o.RefreshDate.Get()
	toSerialize["parentId"] = o.ParentId.Get()
	toSerialize["testPlanId"] = o.TestPlanId.Get()
	return toSerialize, nil
}

func (o *TestSuiteApiResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"type",
		"saveStructure",
		"autoRefresh",
		"refreshDate",
		"parentId",
		"testPlanId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestSuiteApiResult := _TestSuiteApiResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestSuiteApiResult)

	if err != nil {
		return err
	}

	*o = TestSuiteApiResult(varTestSuiteApiResult)

	return err
}

type NullableTestSuiteApiResult struct {
	value *TestSuiteApiResult
	isSet bool
}

func (v NullableTestSuiteApiResult) Get() *TestSuiteApiResult {
	return v.value
}

func (v *NullableTestSuiteApiResult) Set(val *TestSuiteApiResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTestSuiteApiResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTestSuiteApiResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestSuiteApiResult(val *TestSuiteApiResult) *NullableTestSuiteApiResult {
	return &NullableTestSuiteApiResult{value: val, isSet: true}
}

func (v NullableTestSuiteApiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestSuiteApiResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


