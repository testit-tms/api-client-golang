/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ReplaceProjectExternalServiceApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplaceProjectExternalServiceApiModel{}

// ReplaceProjectExternalServiceApiModel struct for ReplaceProjectExternalServiceApiModel
type ReplaceProjectExternalServiceApiModel struct {
	// The unique ID of the new external service that will replace the current one
	NewExternalServiceId string `json:"newExternalServiceId"`
	// External service settings
	Settings interface{} `json:"settings,omitempty"`
}

type _ReplaceProjectExternalServiceApiModel ReplaceProjectExternalServiceApiModel

// NewReplaceProjectExternalServiceApiModel instantiates a new ReplaceProjectExternalServiceApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplaceProjectExternalServiceApiModel(newExternalServiceId string) *ReplaceProjectExternalServiceApiModel {
	this := ReplaceProjectExternalServiceApiModel{}
	this.NewExternalServiceId = newExternalServiceId
	return &this
}

// NewReplaceProjectExternalServiceApiModelWithDefaults instantiates a new ReplaceProjectExternalServiceApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplaceProjectExternalServiceApiModelWithDefaults() *ReplaceProjectExternalServiceApiModel {
	this := ReplaceProjectExternalServiceApiModel{}
	return &this
}

// GetNewExternalServiceId returns the NewExternalServiceId field value
func (o *ReplaceProjectExternalServiceApiModel) GetNewExternalServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NewExternalServiceId
}

// GetNewExternalServiceIdOk returns a tuple with the NewExternalServiceId field value
// and a boolean to check if the value has been set.
func (o *ReplaceProjectExternalServiceApiModel) GetNewExternalServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewExternalServiceId, true
}

// SetNewExternalServiceId sets field value
func (o *ReplaceProjectExternalServiceApiModel) SetNewExternalServiceId(v string) {
	o.NewExternalServiceId = v
}

// GetSettings returns the Settings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReplaceProjectExternalServiceApiModel) GetSettings() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReplaceProjectExternalServiceApiModel) GetSettingsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return &o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *ReplaceProjectExternalServiceApiModel) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given interface{} and assigns it to the Settings field.
func (o *ReplaceProjectExternalServiceApiModel) SetSettings(v interface{}) {
	o.Settings = v
}

func (o ReplaceProjectExternalServiceApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplaceProjectExternalServiceApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["newExternalServiceId"] = o.NewExternalServiceId
	if o.Settings != nil {
		toSerialize["settings"] = o.Settings
	}
	return toSerialize, nil
}

func (o *ReplaceProjectExternalServiceApiModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"newExternalServiceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReplaceProjectExternalServiceApiModel := _ReplaceProjectExternalServiceApiModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReplaceProjectExternalServiceApiModel)

	if err != nil {
		return err
	}

	*o = ReplaceProjectExternalServiceApiModel(varReplaceProjectExternalServiceApiModel)

	return err
}

type NullableReplaceProjectExternalServiceApiModel struct {
	value *ReplaceProjectExternalServiceApiModel
	isSet bool
}

func (v NullableReplaceProjectExternalServiceApiModel) Get() *ReplaceProjectExternalServiceApiModel {
	return v.value
}

func (v *NullableReplaceProjectExternalServiceApiModel) Set(val *ReplaceProjectExternalServiceApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableReplaceProjectExternalServiceApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableReplaceProjectExternalServiceApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplaceProjectExternalServiceApiModel(val *ReplaceProjectExternalServiceApiModel) *NullableReplaceProjectExternalServiceApiModel {
	return &NullableReplaceProjectExternalServiceApiModel{value: val, isSet: true}
}

func (v NullableReplaceProjectExternalServiceApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplaceProjectExternalServiceApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


