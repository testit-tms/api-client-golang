/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NoContentResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NoContentResult{}

// NoContentResult struct for NoContentResult
type NoContentResult struct {
	StatusCode int32 `json:"statusCode"`
}

type _NoContentResult NoContentResult

// NewNoContentResult instantiates a new NoContentResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNoContentResult(statusCode int32) *NoContentResult {
	this := NoContentResult{}
	this.StatusCode = statusCode
	return &this
}

// NewNoContentResultWithDefaults instantiates a new NoContentResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNoContentResultWithDefaults() *NoContentResult {
	this := NoContentResult{}
	return &this
}

// GetStatusCode returns the StatusCode field value
func (o *NoContentResult) GetStatusCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StatusCode
}

// GetStatusCodeOk returns a tuple with the StatusCode field value
// and a boolean to check if the value has been set.
func (o *NoContentResult) GetStatusCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusCode, true
}

// SetStatusCode sets field value
func (o *NoContentResult) SetStatusCode(v int32) {
	o.StatusCode = v
}

func (o NoContentResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NoContentResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["statusCode"] = o.StatusCode
	return toSerialize, nil
}

func (o *NoContentResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"statusCode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNoContentResult := _NoContentResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNoContentResult)

	if err != nil {
		return err
	}

	*o = NoContentResult(varNoContentResult)

	return err
}

type NullableNoContentResult struct {
	value *NoContentResult
	isSet bool
}

func (v NullableNoContentResult) Get() *NoContentResult {
	return v.value
}

func (v *NullableNoContentResult) Set(val *NoContentResult) {
	v.value = val
	v.isSet = true
}

func (v NullableNoContentResult) IsSet() bool {
	return v.isSet
}

func (v *NullableNoContentResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNoContentResult(val *NoContentResult) *NullableNoContentResult {
	return &NullableNoContentResult{value: val, isSet: true}
}

func (v NullableNoContentResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNoContentResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


