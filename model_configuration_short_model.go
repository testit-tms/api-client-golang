/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConfigurationShortModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigurationShortModel{}

// ConfigurationShortModel struct for ConfigurationShortModel
type ConfigurationShortModel struct {
	Id string `json:"id"`
	Name string `json:"name"`
}

type _ConfigurationShortModel ConfigurationShortModel

// NewConfigurationShortModel instantiates a new ConfigurationShortModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigurationShortModel(id string, name string) *ConfigurationShortModel {
	this := ConfigurationShortModel{}
	this.Id = id
	this.Name = name
	return &this
}

// NewConfigurationShortModelWithDefaults instantiates a new ConfigurationShortModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigurationShortModelWithDefaults() *ConfigurationShortModel {
	this := ConfigurationShortModel{}
	return &this
}

// GetId returns the Id field value
func (o *ConfigurationShortModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConfigurationShortModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConfigurationShortModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ConfigurationShortModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ConfigurationShortModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ConfigurationShortModel) SetName(v string) {
	o.Name = v
}

func (o ConfigurationShortModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigurationShortModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *ConfigurationShortModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConfigurationShortModel := _ConfigurationShortModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConfigurationShortModel)

	if err != nil {
		return err
	}

	*o = ConfigurationShortModel(varConfigurationShortModel)

	return err
}

type NullableConfigurationShortModel struct {
	value *ConfigurationShortModel
	isSet bool
}

func (v NullableConfigurationShortModel) Get() *ConfigurationShortModel {
	return v.value
}

func (v *NullableConfigurationShortModel) Set(val *ConfigurationShortModel) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigurationShortModel) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigurationShortModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigurationShortModel(val *ConfigurationShortModel) *NullableConfigurationShortModel {
	return &NullableConfigurationShortModel{value: val, isSet: true}
}

func (v NullableConfigurationShortModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigurationShortModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


