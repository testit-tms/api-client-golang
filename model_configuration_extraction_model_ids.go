/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the ConfigurationExtractionModelIds type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigurationExtractionModelIds{}

// ConfigurationExtractionModelIds Extraction parameters for configurations
type ConfigurationExtractionModelIds struct {
	Include []string `json:"include,omitempty"`
	Exclude []string `json:"exclude,omitempty"`
}

// NewConfigurationExtractionModelIds instantiates a new ConfigurationExtractionModelIds object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigurationExtractionModelIds() *ConfigurationExtractionModelIds {
	this := ConfigurationExtractionModelIds{}
	return &this
}

// NewConfigurationExtractionModelIdsWithDefaults instantiates a new ConfigurationExtractionModelIds object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigurationExtractionModelIdsWithDefaults() *ConfigurationExtractionModelIds {
	this := ConfigurationExtractionModelIds{}
	return &this
}

// GetInclude returns the Include field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigurationExtractionModelIds) GetInclude() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Include
}

// GetIncludeOk returns a tuple with the Include field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigurationExtractionModelIds) GetIncludeOk() ([]string, bool) {
	if o == nil || IsNil(o.Include) {
		return nil, false
	}
	return o.Include, true
}

// HasInclude returns a boolean if a field has been set.
func (o *ConfigurationExtractionModelIds) HasInclude() bool {
	if o != nil && IsNil(o.Include) {
		return true
	}

	return false
}

// SetInclude gets a reference to the given []string and assigns it to the Include field.
func (o *ConfigurationExtractionModelIds) SetInclude(v []string) {
	o.Include = v
}

// GetExclude returns the Exclude field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConfigurationExtractionModelIds) GetExclude() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Exclude
}

// GetExcludeOk returns a tuple with the Exclude field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConfigurationExtractionModelIds) GetExcludeOk() ([]string, bool) {
	if o == nil || IsNil(o.Exclude) {
		return nil, false
	}
	return o.Exclude, true
}

// HasExclude returns a boolean if a field has been set.
func (o *ConfigurationExtractionModelIds) HasExclude() bool {
	if o != nil && IsNil(o.Exclude) {
		return true
	}

	return false
}

// SetExclude gets a reference to the given []string and assigns it to the Exclude field.
func (o *ConfigurationExtractionModelIds) SetExclude(v []string) {
	o.Exclude = v
}

func (o ConfigurationExtractionModelIds) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigurationExtractionModelIds) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Include != nil {
		toSerialize["include"] = o.Include
	}
	if o.Exclude != nil {
		toSerialize["exclude"] = o.Exclude
	}
	return toSerialize, nil
}

type NullableConfigurationExtractionModelIds struct {
	value *ConfigurationExtractionModelIds
	isSet bool
}

func (v NullableConfigurationExtractionModelIds) Get() *ConfigurationExtractionModelIds {
	return v.value
}

func (v *NullableConfigurationExtractionModelIds) Set(val *ConfigurationExtractionModelIds) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigurationExtractionModelIds) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigurationExtractionModelIds) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigurationExtractionModelIds(val *ConfigurationExtractionModelIds) *NullableConfigurationExtractionModelIds {
	return &NullableConfigurationExtractionModelIds{value: val, isSet: true}
}

func (v NullableConfigurationExtractionModelIds) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigurationExtractionModelIds) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


