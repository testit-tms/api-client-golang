/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TestPlanTestPointsSearchApiResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestPlanTestPointsSearchApiResult{}

// TestPlanTestPointsSearchApiResult struct for TestPlanTestPointsSearchApiResult
type TestPlanTestPointsSearchApiResult struct {
	Id string `json:"id"`
	Created AuditApiResult `json:"created"`
	Modified NullableAuditApiResult `json:"modified,omitempty"`
	// Deprecated
	Status string `json:"status"`
	StatusModel TestStatusShortApiResult `json:"statusModel"`
	InProgress bool `json:"inProgress"`
	Configuration ConfigurationShortApiResult `json:"configuration"`
	Tester NullableUserNameApiResult `json:"tester,omitempty"`
	TestSuite TestPlanTestPointsTestSuiteSearchApiResult `json:"testSuite"`
	WorkItem TestPlanTestPointsWorkItemSearchApiResult `json:"workItem"`
	Parameters []ParameterShortApiResult `json:"parameters"`
	LastTestResult NullableLastTestResultApiResult `json:"lastTestResult,omitempty"`
}

type _TestPlanTestPointsSearchApiResult TestPlanTestPointsSearchApiResult

// NewTestPlanTestPointsSearchApiResult instantiates a new TestPlanTestPointsSearchApiResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestPlanTestPointsSearchApiResult(id string, created AuditApiResult, status string, statusModel TestStatusShortApiResult, inProgress bool, configuration ConfigurationShortApiResult, testSuite TestPlanTestPointsTestSuiteSearchApiResult, workItem TestPlanTestPointsWorkItemSearchApiResult, parameters []ParameterShortApiResult) *TestPlanTestPointsSearchApiResult {
	this := TestPlanTestPointsSearchApiResult{}
	this.Id = id
	this.Created = created
	this.Status = status
	this.StatusModel = statusModel
	this.InProgress = inProgress
	this.Configuration = configuration
	this.TestSuite = testSuite
	this.WorkItem = workItem
	this.Parameters = parameters
	return &this
}

// NewTestPlanTestPointsSearchApiResultWithDefaults instantiates a new TestPlanTestPointsSearchApiResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestPlanTestPointsSearchApiResultWithDefaults() *TestPlanTestPointsSearchApiResult {
	this := TestPlanTestPointsSearchApiResult{}
	return &this
}

// GetId returns the Id field value
func (o *TestPlanTestPointsSearchApiResult) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TestPlanTestPointsSearchApiResult) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TestPlanTestPointsSearchApiResult) SetId(v string) {
	o.Id = v
}

// GetCreated returns the Created field value
func (o *TestPlanTestPointsSearchApiResult) GetCreated() AuditApiResult {
	if o == nil {
		var ret AuditApiResult
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *TestPlanTestPointsSearchApiResult) GetCreatedOk() (*AuditApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *TestPlanTestPointsSearchApiResult) SetCreated(v AuditApiResult) {
	o.Created = v
}

// GetModified returns the Modified field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPlanTestPointsSearchApiResult) GetModified() AuditApiResult {
	if o == nil || IsNil(o.Modified.Get()) {
		var ret AuditApiResult
		return ret
	}
	return *o.Modified.Get()
}

// GetModifiedOk returns a tuple with the Modified field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPlanTestPointsSearchApiResult) GetModifiedOk() (*AuditApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Modified.Get(), o.Modified.IsSet()
}

// HasModified returns a boolean if a field has been set.
func (o *TestPlanTestPointsSearchApiResult) HasModified() bool {
	if o != nil && o.Modified.IsSet() {
		return true
	}

	return false
}

// SetModified gets a reference to the given NullableAuditApiResult and assigns it to the Modified field.
func (o *TestPlanTestPointsSearchApiResult) SetModified(v AuditApiResult) {
	o.Modified.Set(&v)
}
// SetModifiedNil sets the value for Modified to be an explicit nil
func (o *TestPlanTestPointsSearchApiResult) SetModifiedNil() {
	o.Modified.Set(nil)
}

// UnsetModified ensures that no value is present for Modified, not even an explicit nil
func (o *TestPlanTestPointsSearchApiResult) UnsetModified() {
	o.Modified.Unset()
}

// GetStatus returns the Status field value
// Deprecated
func (o *TestPlanTestPointsSearchApiResult) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *TestPlanTestPointsSearchApiResult) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
// Deprecated
func (o *TestPlanTestPointsSearchApiResult) SetStatus(v string) {
	o.Status = v
}

// GetStatusModel returns the StatusModel field value
func (o *TestPlanTestPointsSearchApiResult) GetStatusModel() TestStatusShortApiResult {
	if o == nil {
		var ret TestStatusShortApiResult
		return ret
	}

	return o.StatusModel
}

// GetStatusModelOk returns a tuple with the StatusModel field value
// and a boolean to check if the value has been set.
func (o *TestPlanTestPointsSearchApiResult) GetStatusModelOk() (*TestStatusShortApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusModel, true
}

// SetStatusModel sets field value
func (o *TestPlanTestPointsSearchApiResult) SetStatusModel(v TestStatusShortApiResult) {
	o.StatusModel = v
}

// GetInProgress returns the InProgress field value
func (o *TestPlanTestPointsSearchApiResult) GetInProgress() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.InProgress
}

// GetInProgressOk returns a tuple with the InProgress field value
// and a boolean to check if the value has been set.
func (o *TestPlanTestPointsSearchApiResult) GetInProgressOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InProgress, true
}

// SetInProgress sets field value
func (o *TestPlanTestPointsSearchApiResult) SetInProgress(v bool) {
	o.InProgress = v
}

// GetConfiguration returns the Configuration field value
func (o *TestPlanTestPointsSearchApiResult) GetConfiguration() ConfigurationShortApiResult {
	if o == nil {
		var ret ConfigurationShortApiResult
		return ret
	}

	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value
// and a boolean to check if the value has been set.
func (o *TestPlanTestPointsSearchApiResult) GetConfigurationOk() (*ConfigurationShortApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Configuration, true
}

// SetConfiguration sets field value
func (o *TestPlanTestPointsSearchApiResult) SetConfiguration(v ConfigurationShortApiResult) {
	o.Configuration = v
}

// GetTester returns the Tester field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPlanTestPointsSearchApiResult) GetTester() UserNameApiResult {
	if o == nil || IsNil(o.Tester.Get()) {
		var ret UserNameApiResult
		return ret
	}
	return *o.Tester.Get()
}

// GetTesterOk returns a tuple with the Tester field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPlanTestPointsSearchApiResult) GetTesterOk() (*UserNameApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tester.Get(), o.Tester.IsSet()
}

// HasTester returns a boolean if a field has been set.
func (o *TestPlanTestPointsSearchApiResult) HasTester() bool {
	if o != nil && o.Tester.IsSet() {
		return true
	}

	return false
}

// SetTester gets a reference to the given NullableUserNameApiResult and assigns it to the Tester field.
func (o *TestPlanTestPointsSearchApiResult) SetTester(v UserNameApiResult) {
	o.Tester.Set(&v)
}
// SetTesterNil sets the value for Tester to be an explicit nil
func (o *TestPlanTestPointsSearchApiResult) SetTesterNil() {
	o.Tester.Set(nil)
}

// UnsetTester ensures that no value is present for Tester, not even an explicit nil
func (o *TestPlanTestPointsSearchApiResult) UnsetTester() {
	o.Tester.Unset()
}

// GetTestSuite returns the TestSuite field value
func (o *TestPlanTestPointsSearchApiResult) GetTestSuite() TestPlanTestPointsTestSuiteSearchApiResult {
	if o == nil {
		var ret TestPlanTestPointsTestSuiteSearchApiResult
		return ret
	}

	return o.TestSuite
}

// GetTestSuiteOk returns a tuple with the TestSuite field value
// and a boolean to check if the value has been set.
func (o *TestPlanTestPointsSearchApiResult) GetTestSuiteOk() (*TestPlanTestPointsTestSuiteSearchApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TestSuite, true
}

// SetTestSuite sets field value
func (o *TestPlanTestPointsSearchApiResult) SetTestSuite(v TestPlanTestPointsTestSuiteSearchApiResult) {
	o.TestSuite = v
}

// GetWorkItem returns the WorkItem field value
func (o *TestPlanTestPointsSearchApiResult) GetWorkItem() TestPlanTestPointsWorkItemSearchApiResult {
	if o == nil {
		var ret TestPlanTestPointsWorkItemSearchApiResult
		return ret
	}

	return o.WorkItem
}

// GetWorkItemOk returns a tuple with the WorkItem field value
// and a boolean to check if the value has been set.
func (o *TestPlanTestPointsSearchApiResult) GetWorkItemOk() (*TestPlanTestPointsWorkItemSearchApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WorkItem, true
}

// SetWorkItem sets field value
func (o *TestPlanTestPointsSearchApiResult) SetWorkItem(v TestPlanTestPointsWorkItemSearchApiResult) {
	o.WorkItem = v
}

// GetParameters returns the Parameters field value
func (o *TestPlanTestPointsSearchApiResult) GetParameters() []ParameterShortApiResult {
	if o == nil {
		var ret []ParameterShortApiResult
		return ret
	}

	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value
// and a boolean to check if the value has been set.
func (o *TestPlanTestPointsSearchApiResult) GetParametersOk() ([]ParameterShortApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.Parameters, true
}

// SetParameters sets field value
func (o *TestPlanTestPointsSearchApiResult) SetParameters(v []ParameterShortApiResult) {
	o.Parameters = v
}

// GetLastTestResult returns the LastTestResult field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPlanTestPointsSearchApiResult) GetLastTestResult() LastTestResultApiResult {
	if o == nil || IsNil(o.LastTestResult.Get()) {
		var ret LastTestResultApiResult
		return ret
	}
	return *o.LastTestResult.Get()
}

// GetLastTestResultOk returns a tuple with the LastTestResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPlanTestPointsSearchApiResult) GetLastTestResultOk() (*LastTestResultApiResult, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastTestResult.Get(), o.LastTestResult.IsSet()
}

// HasLastTestResult returns a boolean if a field has been set.
func (o *TestPlanTestPointsSearchApiResult) HasLastTestResult() bool {
	if o != nil && o.LastTestResult.IsSet() {
		return true
	}

	return false
}

// SetLastTestResult gets a reference to the given NullableLastTestResultApiResult and assigns it to the LastTestResult field.
func (o *TestPlanTestPointsSearchApiResult) SetLastTestResult(v LastTestResultApiResult) {
	o.LastTestResult.Set(&v)
}
// SetLastTestResultNil sets the value for LastTestResult to be an explicit nil
func (o *TestPlanTestPointsSearchApiResult) SetLastTestResultNil() {
	o.LastTestResult.Set(nil)
}

// UnsetLastTestResult ensures that no value is present for LastTestResult, not even an explicit nil
func (o *TestPlanTestPointsSearchApiResult) UnsetLastTestResult() {
	o.LastTestResult.Unset()
}

func (o TestPlanTestPointsSearchApiResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestPlanTestPointsSearchApiResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created"] = o.Created
	if o.Modified.IsSet() {
		toSerialize["modified"] = o.Modified.Get()
	}
	toSerialize["status"] = o.Status
	toSerialize["statusModel"] = o.StatusModel
	toSerialize["inProgress"] = o.InProgress
	toSerialize["configuration"] = o.Configuration
	if o.Tester.IsSet() {
		toSerialize["tester"] = o.Tester.Get()
	}
	toSerialize["testSuite"] = o.TestSuite
	toSerialize["workItem"] = o.WorkItem
	toSerialize["parameters"] = o.Parameters
	if o.LastTestResult.IsSet() {
		toSerialize["lastTestResult"] = o.LastTestResult.Get()
	}
	return toSerialize, nil
}

func (o *TestPlanTestPointsSearchApiResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created",
		"status",
		"statusModel",
		"inProgress",
		"configuration",
		"testSuite",
		"workItem",
		"parameters",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestPlanTestPointsSearchApiResult := _TestPlanTestPointsSearchApiResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestPlanTestPointsSearchApiResult)

	if err != nil {
		return err
	}

	*o = TestPlanTestPointsSearchApiResult(varTestPlanTestPointsSearchApiResult)

	return err
}

type NullableTestPlanTestPointsSearchApiResult struct {
	value *TestPlanTestPointsSearchApiResult
	isSet bool
}

func (v NullableTestPlanTestPointsSearchApiResult) Get() *TestPlanTestPointsSearchApiResult {
	return v.value
}

func (v *NullableTestPlanTestPointsSearchApiResult) Set(val *TestPlanTestPointsSearchApiResult) {
	v.value = val
	v.isSet = true
}

func (v NullableTestPlanTestPointsSearchApiResult) IsSet() bool {
	return v.isSet
}

func (v *NullableTestPlanTestPointsSearchApiResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestPlanTestPointsSearchApiResult(val *TestPlanTestPointsSearchApiResult) *NullableTestPlanTestPointsSearchApiResult {
	return &NullableTestPlanTestPointsSearchApiResult{value: val, isSet: true}
}

func (v NullableTestPlanTestPointsSearchApiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestPlanTestPointsSearchApiResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


