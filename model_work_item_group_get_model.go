/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WorkItemGroupGetModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkItemGroupGetModel{}

// WorkItemGroupGetModel struct for WorkItemGroupGetModel
type WorkItemGroupGetModel struct {
	// Model containing options to filter work items
	SelectModel NullableWorkItemLocalSelectModel `json:"selectModel,omitempty"`
	GroupType WorkItemGroupType `json:"groupType"`
	CustomAttributeId NullableString `json:"customAttributeId,omitempty"`
}

type _WorkItemGroupGetModel WorkItemGroupGetModel

// NewWorkItemGroupGetModel instantiates a new WorkItemGroupGetModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkItemGroupGetModel(groupType WorkItemGroupType) *WorkItemGroupGetModel {
	this := WorkItemGroupGetModel{}
	this.GroupType = groupType
	return &this
}

// NewWorkItemGroupGetModelWithDefaults instantiates a new WorkItemGroupGetModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkItemGroupGetModelWithDefaults() *WorkItemGroupGetModel {
	this := WorkItemGroupGetModel{}
	return &this
}

// GetSelectModel returns the SelectModel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemGroupGetModel) GetSelectModel() WorkItemLocalSelectModel {
	if o == nil || IsNil(o.SelectModel.Get()) {
		var ret WorkItemLocalSelectModel
		return ret
	}
	return *o.SelectModel.Get()
}

// GetSelectModelOk returns a tuple with the SelectModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemGroupGetModel) GetSelectModelOk() (*WorkItemLocalSelectModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.SelectModel.Get(), o.SelectModel.IsSet()
}

// HasSelectModel returns a boolean if a field has been set.
func (o *WorkItemGroupGetModel) HasSelectModel() bool {
	if o != nil && o.SelectModel.IsSet() {
		return true
	}

	return false
}

// SetSelectModel gets a reference to the given NullableWorkItemLocalSelectModel and assigns it to the SelectModel field.
func (o *WorkItemGroupGetModel) SetSelectModel(v WorkItemLocalSelectModel) {
	o.SelectModel.Set(&v)
}
// SetSelectModelNil sets the value for SelectModel to be an explicit nil
func (o *WorkItemGroupGetModel) SetSelectModelNil() {
	o.SelectModel.Set(nil)
}

// UnsetSelectModel ensures that no value is present for SelectModel, not even an explicit nil
func (o *WorkItemGroupGetModel) UnsetSelectModel() {
	o.SelectModel.Unset()
}

// GetGroupType returns the GroupType field value
func (o *WorkItemGroupGetModel) GetGroupType() WorkItemGroupType {
	if o == nil {
		var ret WorkItemGroupType
		return ret
	}

	return o.GroupType
}

// GetGroupTypeOk returns a tuple with the GroupType field value
// and a boolean to check if the value has been set.
func (o *WorkItemGroupGetModel) GetGroupTypeOk() (*WorkItemGroupType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupType, true
}

// SetGroupType sets field value
func (o *WorkItemGroupGetModel) SetGroupType(v WorkItemGroupType) {
	o.GroupType = v
}

// GetCustomAttributeId returns the CustomAttributeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *WorkItemGroupGetModel) GetCustomAttributeId() string {
	if o == nil || IsNil(o.CustomAttributeId.Get()) {
		var ret string
		return ret
	}
	return *o.CustomAttributeId.Get()
}

// GetCustomAttributeIdOk returns a tuple with the CustomAttributeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WorkItemGroupGetModel) GetCustomAttributeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CustomAttributeId.Get(), o.CustomAttributeId.IsSet()
}

// HasCustomAttributeId returns a boolean if a field has been set.
func (o *WorkItemGroupGetModel) HasCustomAttributeId() bool {
	if o != nil && o.CustomAttributeId.IsSet() {
		return true
	}

	return false
}

// SetCustomAttributeId gets a reference to the given NullableString and assigns it to the CustomAttributeId field.
func (o *WorkItemGroupGetModel) SetCustomAttributeId(v string) {
	o.CustomAttributeId.Set(&v)
}
// SetCustomAttributeIdNil sets the value for CustomAttributeId to be an explicit nil
func (o *WorkItemGroupGetModel) SetCustomAttributeIdNil() {
	o.CustomAttributeId.Set(nil)
}

// UnsetCustomAttributeId ensures that no value is present for CustomAttributeId, not even an explicit nil
func (o *WorkItemGroupGetModel) UnsetCustomAttributeId() {
	o.CustomAttributeId.Unset()
}

func (o WorkItemGroupGetModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkItemGroupGetModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SelectModel.IsSet() {
		toSerialize["selectModel"] = o.SelectModel.Get()
	}
	toSerialize["groupType"] = o.GroupType
	if o.CustomAttributeId.IsSet() {
		toSerialize["customAttributeId"] = o.CustomAttributeId.Get()
	}
	return toSerialize, nil
}

func (o *WorkItemGroupGetModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"groupType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkItemGroupGetModel := _WorkItemGroupGetModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkItemGroupGetModel)

	if err != nil {
		return err
	}

	*o = WorkItemGroupGetModel(varWorkItemGroupGetModel)

	return err
}

type NullableWorkItemGroupGetModel struct {
	value *WorkItemGroupGetModel
	isSet bool
}

func (v NullableWorkItemGroupGetModel) Get() *WorkItemGroupGetModel {
	return v.value
}

func (v *NullableWorkItemGroupGetModel) Set(val *WorkItemGroupGetModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkItemGroupGetModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkItemGroupGetModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkItemGroupGetModel(val *WorkItemGroupGetModel) *NullableWorkItemGroupGetModel {
	return &NullableWorkItemGroupGetModel{value: val, isSet: true}
}

func (v NullableWorkItemGroupGetModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkItemGroupGetModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


