/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TestPlanTestPointsGroupApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestPlanTestPointsGroupApiModel{}

// TestPlanTestPointsGroupApiModel struct for TestPlanTestPointsGroupApiModel
type TestPlanTestPointsGroupApiModel struct {
	Field string `json:"field"`
	DisplayField NullableString `json:"displayField,omitempty"`
}

type _TestPlanTestPointsGroupApiModel TestPlanTestPointsGroupApiModel

// NewTestPlanTestPointsGroupApiModel instantiates a new TestPlanTestPointsGroupApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestPlanTestPointsGroupApiModel(field string) *TestPlanTestPointsGroupApiModel {
	this := TestPlanTestPointsGroupApiModel{}
	this.Field = field
	return &this
}

// NewTestPlanTestPointsGroupApiModelWithDefaults instantiates a new TestPlanTestPointsGroupApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestPlanTestPointsGroupApiModelWithDefaults() *TestPlanTestPointsGroupApiModel {
	this := TestPlanTestPointsGroupApiModel{}
	return &this
}

// GetField returns the Field field value
func (o *TestPlanTestPointsGroupApiModel) GetField() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Field
}

// GetFieldOk returns a tuple with the Field field value
// and a boolean to check if the value has been set.
func (o *TestPlanTestPointsGroupApiModel) GetFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Field, true
}

// SetField sets field value
func (o *TestPlanTestPointsGroupApiModel) SetField(v string) {
	o.Field = v
}

// GetDisplayField returns the DisplayField field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestPlanTestPointsGroupApiModel) GetDisplayField() string {
	if o == nil || IsNil(o.DisplayField.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayField.Get()
}

// GetDisplayFieldOk returns a tuple with the DisplayField field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestPlanTestPointsGroupApiModel) GetDisplayFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayField.Get(), o.DisplayField.IsSet()
}

// HasDisplayField returns a boolean if a field has been set.
func (o *TestPlanTestPointsGroupApiModel) HasDisplayField() bool {
	if o != nil && o.DisplayField.IsSet() {
		return true
	}

	return false
}

// SetDisplayField gets a reference to the given NullableString and assigns it to the DisplayField field.
func (o *TestPlanTestPointsGroupApiModel) SetDisplayField(v string) {
	o.DisplayField.Set(&v)
}
// SetDisplayFieldNil sets the value for DisplayField to be an explicit nil
func (o *TestPlanTestPointsGroupApiModel) SetDisplayFieldNil() {
	o.DisplayField.Set(nil)
}

// UnsetDisplayField ensures that no value is present for DisplayField, not even an explicit nil
func (o *TestPlanTestPointsGroupApiModel) UnsetDisplayField() {
	o.DisplayField.Unset()
}

func (o TestPlanTestPointsGroupApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestPlanTestPointsGroupApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["field"] = o.Field
	if o.DisplayField.IsSet() {
		toSerialize["displayField"] = o.DisplayField.Get()
	}
	return toSerialize, nil
}

func (o *TestPlanTestPointsGroupApiModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"field",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTestPlanTestPointsGroupApiModel := _TestPlanTestPointsGroupApiModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTestPlanTestPointsGroupApiModel)

	if err != nil {
		return err
	}

	*o = TestPlanTestPointsGroupApiModel(varTestPlanTestPointsGroupApiModel)

	return err
}

type NullableTestPlanTestPointsGroupApiModel struct {
	value *TestPlanTestPointsGroupApiModel
	isSet bool
}

func (v NullableTestPlanTestPointsGroupApiModel) Get() *TestPlanTestPointsGroupApiModel {
	return v.value
}

func (v *NullableTestPlanTestPointsGroupApiModel) Set(val *TestPlanTestPointsGroupApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestPlanTestPointsGroupApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestPlanTestPointsGroupApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestPlanTestPointsGroupApiModel(val *TestPlanTestPointsGroupApiModel) *NullableTestPlanTestPointsGroupApiModel {
	return &NullableTestPlanTestPointsGroupApiModel{value: val, isSet: true}
}

func (v NullableTestPlanTestPointsGroupApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestPlanTestPointsGroupApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


