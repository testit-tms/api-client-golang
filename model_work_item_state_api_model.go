/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"fmt"
)

// WorkItemStateApiModel the model 'WorkItemStateApiModel'
type WorkItemStateApiModel string

// List of WorkItemStateApiModel
const (
	WORKITEMSTATEAPIMODEL_NEEDS_WORK WorkItemStateApiModel = "NeedsWork"
	WORKITEMSTATEAPIMODEL_NOT_READY WorkItemStateApiModel = "NotReady"
	WORKITEMSTATEAPIMODEL_READY WorkItemStateApiModel = "Ready"
)

// All allowed values of WorkItemStateApiModel enum
var AllowedWorkItemStateApiModelEnumValues = []WorkItemStateApiModel{
	"NeedsWork",
	"NotReady",
	"Ready",
}

func (v *WorkItemStateApiModel) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WorkItemStateApiModel(value)
	for _, existing := range AllowedWorkItemStateApiModelEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WorkItemStateApiModel", value)
}

// NewWorkItemStateApiModelFromValue returns a pointer to a valid WorkItemStateApiModel
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWorkItemStateApiModelFromValue(v string) (*WorkItemStateApiModel, error) {
	ev := WorkItemStateApiModel(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WorkItemStateApiModel: valid values are %v", v, AllowedWorkItemStateApiModelEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WorkItemStateApiModel) IsValid() bool {
	for _, existing := range AllowedWorkItemStateApiModelEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WorkItemStateApiModel value
func (v WorkItemStateApiModel) Ptr() *WorkItemStateApiModel {
	return &v
}

type NullableWorkItemStateApiModel struct {
	value *WorkItemStateApiModel
	isSet bool
}

func (v NullableWorkItemStateApiModel) Get() *WorkItemStateApiModel {
	return v.value
}

func (v *NullableWorkItemStateApiModel) Set(val *WorkItemStateApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkItemStateApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkItemStateApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkItemStateApiModel(val *WorkItemStateApiModel) *NullableWorkItemStateApiModel {
	return &NullableWorkItemStateApiModel{value: val, isSet: true}
}

func (v NullableWorkItemStateApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkItemStateApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

