/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the CreateAutoTestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAutoTestRequest{}

// CreateAutoTestRequest struct for CreateAutoTestRequest
type CreateAutoTestRequest struct {
	// Specifies the IDs of work items to link your autotest to. You can specify several IDs.
	WorkItemIdsForLinkWithAutoTest []string `json:"workItemIdsForLinkWithAutoTest,omitempty"`
	// Creates a test case linked to the autotest.
	ShouldCreateWorkItem NullableBool `json:"shouldCreateWorkItem,omitempty"`
	// Key value pair of custom work item attributes
	Attributes map[string]interface{} `json:"attributes,omitempty"`
	// External ID of the autotest
	ExternalId string `json:"externalId"`
	// Collection of the autotest links
	Links []LinkPostModel `json:"links,omitempty"`
	// Unique ID of the autotest project
	ProjectId string `json:"projectId"`
	// Name of the autotest
	Name string `json:"name"`
	// Name of the autotest namespace
	Namespace NullableString `json:"namespace,omitempty"`
	// Name of the autotest class
	Classname NullableString `json:"classname,omitempty"`
	// Collection of the autotest steps
	Steps []AutoTestStepModel `json:"steps,omitempty"`
	// Collection of the autotest setup steps
	Setup []AutoTestStepModel `json:"setup,omitempty"`
	// Collection of the autotest teardown steps
	Teardown []AutoTestStepModel `json:"teardown,omitempty"`
	// Name of the autotest in autotest's card
	Title NullableString `json:"title,omitempty"`
	// Description of the autotest in autotest's card
	Description NullableString `json:"description,omitempty"`
	// Collection of the autotest labels
	Labels []LabelPostModel `json:"labels,omitempty"`
	// Indicates if the autotest is marked as flaky
	IsFlaky NullableBool `json:"isFlaky,omitempty"`
	// External key of the autotest
	ExternalKey NullableString `json:"externalKey,omitempty"`
}

// NewCreateAutoTestRequest instantiates a new CreateAutoTestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAutoTestRequest(externalId string, projectId string, name string) *CreateAutoTestRequest {
	this := CreateAutoTestRequest{}
	this.ExternalId = externalId
	this.ProjectId = projectId
	this.Name = name
	return &this
}

// NewCreateAutoTestRequestWithDefaults instantiates a new CreateAutoTestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAutoTestRequestWithDefaults() *CreateAutoTestRequest {
	this := CreateAutoTestRequest{}
	return &this
}

// GetWorkItemIdsForLinkWithAutoTest returns the WorkItemIdsForLinkWithAutoTest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAutoTestRequest) GetWorkItemIdsForLinkWithAutoTest() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.WorkItemIdsForLinkWithAutoTest
}

// GetWorkItemIdsForLinkWithAutoTestOk returns a tuple with the WorkItemIdsForLinkWithAutoTest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAutoTestRequest) GetWorkItemIdsForLinkWithAutoTestOk() ([]string, bool) {
	if o == nil || IsNil(o.WorkItemIdsForLinkWithAutoTest) {
		return nil, false
	}
	return o.WorkItemIdsForLinkWithAutoTest, true
}

// HasWorkItemIdsForLinkWithAutoTest returns a boolean if a field has been set.
func (o *CreateAutoTestRequest) HasWorkItemIdsForLinkWithAutoTest() bool {
	if o != nil && IsNil(o.WorkItemIdsForLinkWithAutoTest) {
		return true
	}

	return false
}

// SetWorkItemIdsForLinkWithAutoTest gets a reference to the given []string and assigns it to the WorkItemIdsForLinkWithAutoTest field.
func (o *CreateAutoTestRequest) SetWorkItemIdsForLinkWithAutoTest(v []string) {
	o.WorkItemIdsForLinkWithAutoTest = v
}

// GetShouldCreateWorkItem returns the ShouldCreateWorkItem field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAutoTestRequest) GetShouldCreateWorkItem() bool {
	if o == nil || IsNil(o.ShouldCreateWorkItem.Get()) {
		var ret bool
		return ret
	}
	return *o.ShouldCreateWorkItem.Get()
}

// GetShouldCreateWorkItemOk returns a tuple with the ShouldCreateWorkItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAutoTestRequest) GetShouldCreateWorkItemOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShouldCreateWorkItem.Get(), o.ShouldCreateWorkItem.IsSet()
}

// HasShouldCreateWorkItem returns a boolean if a field has been set.
func (o *CreateAutoTestRequest) HasShouldCreateWorkItem() bool {
	if o != nil && o.ShouldCreateWorkItem.IsSet() {
		return true
	}

	return false
}

// SetShouldCreateWorkItem gets a reference to the given NullableBool and assigns it to the ShouldCreateWorkItem field.
func (o *CreateAutoTestRequest) SetShouldCreateWorkItem(v bool) {
	o.ShouldCreateWorkItem.Set(&v)
}
// SetShouldCreateWorkItemNil sets the value for ShouldCreateWorkItem to be an explicit nil
func (o *CreateAutoTestRequest) SetShouldCreateWorkItemNil() {
	o.ShouldCreateWorkItem.Set(nil)
}

// UnsetShouldCreateWorkItem ensures that no value is present for ShouldCreateWorkItem, not even an explicit nil
func (o *CreateAutoTestRequest) UnsetShouldCreateWorkItem() {
	o.ShouldCreateWorkItem.Unset()
}

// GetAttributes returns the Attributes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAutoTestRequest) GetAttributes() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAutoTestRequest) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Attributes) {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *CreateAutoTestRequest) HasAttributes() bool {
	if o != nil && IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *CreateAutoTestRequest) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetExternalId returns the ExternalId field value
func (o *CreateAutoTestRequest) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *CreateAutoTestRequest) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *CreateAutoTestRequest) SetExternalId(v string) {
	o.ExternalId = v
}

// GetLinks returns the Links field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAutoTestRequest) GetLinks() []LinkPostModel {
	if o == nil {
		var ret []LinkPostModel
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAutoTestRequest) GetLinksOk() ([]LinkPostModel, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CreateAutoTestRequest) HasLinks() bool {
	if o != nil && IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []LinkPostModel and assigns it to the Links field.
func (o *CreateAutoTestRequest) SetLinks(v []LinkPostModel) {
	o.Links = v
}

// GetProjectId returns the ProjectId field value
func (o *CreateAutoTestRequest) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *CreateAutoTestRequest) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *CreateAutoTestRequest) SetProjectId(v string) {
	o.ProjectId = v
}

// GetName returns the Name field value
func (o *CreateAutoTestRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateAutoTestRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateAutoTestRequest) SetName(v string) {
	o.Name = v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAutoTestRequest) GetNamespace() string {
	if o == nil || IsNil(o.Namespace.Get()) {
		var ret string
		return ret
	}
	return *o.Namespace.Get()
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAutoTestRequest) GetNamespaceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Namespace.Get(), o.Namespace.IsSet()
}

// HasNamespace returns a boolean if a field has been set.
func (o *CreateAutoTestRequest) HasNamespace() bool {
	if o != nil && o.Namespace.IsSet() {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given NullableString and assigns it to the Namespace field.
func (o *CreateAutoTestRequest) SetNamespace(v string) {
	o.Namespace.Set(&v)
}
// SetNamespaceNil sets the value for Namespace to be an explicit nil
func (o *CreateAutoTestRequest) SetNamespaceNil() {
	o.Namespace.Set(nil)
}

// UnsetNamespace ensures that no value is present for Namespace, not even an explicit nil
func (o *CreateAutoTestRequest) UnsetNamespace() {
	o.Namespace.Unset()
}

// GetClassname returns the Classname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAutoTestRequest) GetClassname() string {
	if o == nil || IsNil(o.Classname.Get()) {
		var ret string
		return ret
	}
	return *o.Classname.Get()
}

// GetClassnameOk returns a tuple with the Classname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAutoTestRequest) GetClassnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Classname.Get(), o.Classname.IsSet()
}

// HasClassname returns a boolean if a field has been set.
func (o *CreateAutoTestRequest) HasClassname() bool {
	if o != nil && o.Classname.IsSet() {
		return true
	}

	return false
}

// SetClassname gets a reference to the given NullableString and assigns it to the Classname field.
func (o *CreateAutoTestRequest) SetClassname(v string) {
	o.Classname.Set(&v)
}
// SetClassnameNil sets the value for Classname to be an explicit nil
func (o *CreateAutoTestRequest) SetClassnameNil() {
	o.Classname.Set(nil)
}

// UnsetClassname ensures that no value is present for Classname, not even an explicit nil
func (o *CreateAutoTestRequest) UnsetClassname() {
	o.Classname.Unset()
}

// GetSteps returns the Steps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAutoTestRequest) GetSteps() []AutoTestStepModel {
	if o == nil {
		var ret []AutoTestStepModel
		return ret
	}
	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAutoTestRequest) GetStepsOk() ([]AutoTestStepModel, bool) {
	if o == nil || IsNil(o.Steps) {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *CreateAutoTestRequest) HasSteps() bool {
	if o != nil && IsNil(o.Steps) {
		return true
	}

	return false
}

// SetSteps gets a reference to the given []AutoTestStepModel and assigns it to the Steps field.
func (o *CreateAutoTestRequest) SetSteps(v []AutoTestStepModel) {
	o.Steps = v
}

// GetSetup returns the Setup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAutoTestRequest) GetSetup() []AutoTestStepModel {
	if o == nil {
		var ret []AutoTestStepModel
		return ret
	}
	return o.Setup
}

// GetSetupOk returns a tuple with the Setup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAutoTestRequest) GetSetupOk() ([]AutoTestStepModel, bool) {
	if o == nil || IsNil(o.Setup) {
		return nil, false
	}
	return o.Setup, true
}

// HasSetup returns a boolean if a field has been set.
func (o *CreateAutoTestRequest) HasSetup() bool {
	if o != nil && IsNil(o.Setup) {
		return true
	}

	return false
}

// SetSetup gets a reference to the given []AutoTestStepModel and assigns it to the Setup field.
func (o *CreateAutoTestRequest) SetSetup(v []AutoTestStepModel) {
	o.Setup = v
}

// GetTeardown returns the Teardown field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAutoTestRequest) GetTeardown() []AutoTestStepModel {
	if o == nil {
		var ret []AutoTestStepModel
		return ret
	}
	return o.Teardown
}

// GetTeardownOk returns a tuple with the Teardown field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAutoTestRequest) GetTeardownOk() ([]AutoTestStepModel, bool) {
	if o == nil || IsNil(o.Teardown) {
		return nil, false
	}
	return o.Teardown, true
}

// HasTeardown returns a boolean if a field has been set.
func (o *CreateAutoTestRequest) HasTeardown() bool {
	if o != nil && IsNil(o.Teardown) {
		return true
	}

	return false
}

// SetTeardown gets a reference to the given []AutoTestStepModel and assigns it to the Teardown field.
func (o *CreateAutoTestRequest) SetTeardown(v []AutoTestStepModel) {
	o.Teardown = v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAutoTestRequest) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAutoTestRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *CreateAutoTestRequest) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *CreateAutoTestRequest) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *CreateAutoTestRequest) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *CreateAutoTestRequest) UnsetTitle() {
	o.Title.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAutoTestRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAutoTestRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateAutoTestRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateAutoTestRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateAutoTestRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateAutoTestRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetLabels returns the Labels field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAutoTestRequest) GetLabels() []LabelPostModel {
	if o == nil {
		var ret []LabelPostModel
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAutoTestRequest) GetLabelsOk() ([]LabelPostModel, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CreateAutoTestRequest) HasLabels() bool {
	if o != nil && IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []LabelPostModel and assigns it to the Labels field.
func (o *CreateAutoTestRequest) SetLabels(v []LabelPostModel) {
	o.Labels = v
}

// GetIsFlaky returns the IsFlaky field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAutoTestRequest) GetIsFlaky() bool {
	if o == nil || IsNil(o.IsFlaky.Get()) {
		var ret bool
		return ret
	}
	return *o.IsFlaky.Get()
}

// GetIsFlakyOk returns a tuple with the IsFlaky field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAutoTestRequest) GetIsFlakyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsFlaky.Get(), o.IsFlaky.IsSet()
}

// HasIsFlaky returns a boolean if a field has been set.
func (o *CreateAutoTestRequest) HasIsFlaky() bool {
	if o != nil && o.IsFlaky.IsSet() {
		return true
	}

	return false
}

// SetIsFlaky gets a reference to the given NullableBool and assigns it to the IsFlaky field.
func (o *CreateAutoTestRequest) SetIsFlaky(v bool) {
	o.IsFlaky.Set(&v)
}
// SetIsFlakyNil sets the value for IsFlaky to be an explicit nil
func (o *CreateAutoTestRequest) SetIsFlakyNil() {
	o.IsFlaky.Set(nil)
}

// UnsetIsFlaky ensures that no value is present for IsFlaky, not even an explicit nil
func (o *CreateAutoTestRequest) UnsetIsFlaky() {
	o.IsFlaky.Unset()
}

// GetExternalKey returns the ExternalKey field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateAutoTestRequest) GetExternalKey() string {
	if o == nil || IsNil(o.ExternalKey.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalKey.Get()
}

// GetExternalKeyOk returns a tuple with the ExternalKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateAutoTestRequest) GetExternalKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalKey.Get(), o.ExternalKey.IsSet()
}

// HasExternalKey returns a boolean if a field has been set.
func (o *CreateAutoTestRequest) HasExternalKey() bool {
	if o != nil && o.ExternalKey.IsSet() {
		return true
	}

	return false
}

// SetExternalKey gets a reference to the given NullableString and assigns it to the ExternalKey field.
func (o *CreateAutoTestRequest) SetExternalKey(v string) {
	o.ExternalKey.Set(&v)
}
// SetExternalKeyNil sets the value for ExternalKey to be an explicit nil
func (o *CreateAutoTestRequest) SetExternalKeyNil() {
	o.ExternalKey.Set(nil)
}

// UnsetExternalKey ensures that no value is present for ExternalKey, not even an explicit nil
func (o *CreateAutoTestRequest) UnsetExternalKey() {
	o.ExternalKey.Unset()
}

func (o CreateAutoTestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAutoTestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.WorkItemIdsForLinkWithAutoTest != nil {
		toSerialize["workItemIdsForLinkWithAutoTest"] = o.WorkItemIdsForLinkWithAutoTest
	}
	if o.ShouldCreateWorkItem.IsSet() {
		toSerialize["shouldCreateWorkItem"] = o.ShouldCreateWorkItem.Get()
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	toSerialize["externalId"] = o.ExternalId
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	toSerialize["projectId"] = o.ProjectId
	toSerialize["name"] = o.Name
	if o.Namespace.IsSet() {
		toSerialize["namespace"] = o.Namespace.Get()
	}
	if o.Classname.IsSet() {
		toSerialize["classname"] = o.Classname.Get()
	}
	if o.Steps != nil {
		toSerialize["steps"] = o.Steps
	}
	if o.Setup != nil {
		toSerialize["setup"] = o.Setup
	}
	if o.Teardown != nil {
		toSerialize["teardown"] = o.Teardown
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Labels != nil {
		toSerialize["labels"] = o.Labels
	}
	if o.IsFlaky.IsSet() {
		toSerialize["isFlaky"] = o.IsFlaky.Get()
	}
	if o.ExternalKey.IsSet() {
		toSerialize["externalKey"] = o.ExternalKey.Get()
	}
	return toSerialize, nil
}

type NullableCreateAutoTestRequest struct {
	value *CreateAutoTestRequest
	isSet bool
}

func (v NullableCreateAutoTestRequest) Get() *CreateAutoTestRequest {
	return v.value
}

func (v *NullableCreateAutoTestRequest) Set(val *CreateAutoTestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAutoTestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAutoTestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAutoTestRequest(val *CreateAutoTestRequest) *NullableCreateAutoTestRequest {
	return &NullableCreateAutoTestRequest{value: val, isSet: true}
}

func (v NullableCreateAutoTestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAutoTestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


