/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the WorkItemSelectModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkItemSelectModel{}

// WorkItemSelectModel Model containing options to filter work items
type WorkItemSelectModel struct {
	Filter *WorkItemFilterModel `json:"filter,omitempty"`
	ExtractionModel *WorkItemsExtractionModel `json:"extractionModel,omitempty"`
}

// NewWorkItemSelectModel instantiates a new WorkItemSelectModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkItemSelectModel() *WorkItemSelectModel {
	this := WorkItemSelectModel{}
	return &this
}

// NewWorkItemSelectModelWithDefaults instantiates a new WorkItemSelectModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkItemSelectModelWithDefaults() *WorkItemSelectModel {
	this := WorkItemSelectModel{}
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *WorkItemSelectModel) GetFilter() WorkItemFilterModel {
	if o == nil || IsNil(o.Filter) {
		var ret WorkItemFilterModel
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkItemSelectModel) GetFilterOk() (*WorkItemFilterModel, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *WorkItemSelectModel) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given WorkItemFilterModel and assigns it to the Filter field.
func (o *WorkItemSelectModel) SetFilter(v WorkItemFilterModel) {
	o.Filter = &v
}

// GetExtractionModel returns the ExtractionModel field value if set, zero value otherwise.
func (o *WorkItemSelectModel) GetExtractionModel() WorkItemsExtractionModel {
	if o == nil || IsNil(o.ExtractionModel) {
		var ret WorkItemsExtractionModel
		return ret
	}
	return *o.ExtractionModel
}

// GetExtractionModelOk returns a tuple with the ExtractionModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkItemSelectModel) GetExtractionModelOk() (*WorkItemsExtractionModel, bool) {
	if o == nil || IsNil(o.ExtractionModel) {
		return nil, false
	}
	return o.ExtractionModel, true
}

// HasExtractionModel returns a boolean if a field has been set.
func (o *WorkItemSelectModel) HasExtractionModel() bool {
	if o != nil && !IsNil(o.ExtractionModel) {
		return true
	}

	return false
}

// SetExtractionModel gets a reference to the given WorkItemsExtractionModel and assigns it to the ExtractionModel field.
func (o *WorkItemSelectModel) SetExtractionModel(v WorkItemsExtractionModel) {
	o.ExtractionModel = &v
}

func (o WorkItemSelectModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkItemSelectModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.ExtractionModel) {
		toSerialize["extractionModel"] = o.ExtractionModel
	}
	return toSerialize, nil
}

type NullableWorkItemSelectModel struct {
	value *WorkItemSelectModel
	isSet bool
}

func (v NullableWorkItemSelectModel) Get() *WorkItemSelectModel {
	return v.value
}

func (v *NullableWorkItemSelectModel) Set(val *WorkItemSelectModel) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkItemSelectModel) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkItemSelectModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkItemSelectModel(val *WorkItemSelectModel) *NullableWorkItemSelectModel {
	return &NullableWorkItemSelectModel{value: val, isSet: true}
}

func (v NullableWorkItemSelectModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkItemSelectModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


