/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"time"
)

// checks if the TestRunShortGetModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestRunShortGetModel{}

// TestRunShortGetModel struct for TestRunShortGetModel
type TestRunShortGetModel struct {
	// Unique ID of the test run
	Id *string `json:"id,omitempty"`
	// Name of the test run
	Name NullableString `json:"name,omitempty"`
	// Unique ID of project where test run is located
	ProjectId *string `json:"projectId,omitempty"`
	// Date when the test run was created
	CreatedDate *time.Time `json:"createdDate,omitempty"`
	// Unique ID of user who created the test run
	CreatedById *string `json:"createdById,omitempty"`
	// Date when the test run was modified last time
	ModifiedDate NullableTime `json:"modifiedDate,omitempty"`
	// Unique ID of user who modified the test run last time
	ModifiedById NullableString `json:"modifiedById,omitempty"`
	// Is the test run is deleted
	IsDeleted *bool `json:"isDeleted,omitempty"`
	State TestRunState `json:"state"`
	// Date when the test run was started
	StartedDate NullableTime `json:"startedDate,omitempty"`
	// Number of autotests run in the test run
	AutotestsCount *int32 `json:"autotestsCount,omitempty"`
	Statistics TestResultsStatisticsGetModel `json:"statistics"`
}

// NewTestRunShortGetModel instantiates a new TestRunShortGetModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestRunShortGetModel(state TestRunState, statistics TestResultsStatisticsGetModel) *TestRunShortGetModel {
	this := TestRunShortGetModel{}
	this.State = state
	this.Statistics = statistics
	return &this
}

// NewTestRunShortGetModelWithDefaults instantiates a new TestRunShortGetModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestRunShortGetModelWithDefaults() *TestRunShortGetModel {
	this := TestRunShortGetModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TestRunShortGetModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestRunShortGetModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TestRunShortGetModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TestRunShortGetModel) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunShortGetModel) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunShortGetModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *TestRunShortGetModel) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *TestRunShortGetModel) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *TestRunShortGetModel) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *TestRunShortGetModel) UnsetName() {
	o.Name.Unset()
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *TestRunShortGetModel) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestRunShortGetModel) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *TestRunShortGetModel) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *TestRunShortGetModel) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetCreatedDate returns the CreatedDate field value if set, zero value otherwise.
func (o *TestRunShortGetModel) GetCreatedDate() time.Time {
	if o == nil || IsNil(o.CreatedDate) {
		var ret time.Time
		return ret
	}
	return *o.CreatedDate
}

// GetCreatedDateOk returns a tuple with the CreatedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestRunShortGetModel) GetCreatedDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedDate) {
		return nil, false
	}
	return o.CreatedDate, true
}

// HasCreatedDate returns a boolean if a field has been set.
func (o *TestRunShortGetModel) HasCreatedDate() bool {
	if o != nil && !IsNil(o.CreatedDate) {
		return true
	}

	return false
}

// SetCreatedDate gets a reference to the given time.Time and assigns it to the CreatedDate field.
func (o *TestRunShortGetModel) SetCreatedDate(v time.Time) {
	o.CreatedDate = &v
}

// GetCreatedById returns the CreatedById field value if set, zero value otherwise.
func (o *TestRunShortGetModel) GetCreatedById() string {
	if o == nil || IsNil(o.CreatedById) {
		var ret string
		return ret
	}
	return *o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestRunShortGetModel) GetCreatedByIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedById) {
		return nil, false
	}
	return o.CreatedById, true
}

// HasCreatedById returns a boolean if a field has been set.
func (o *TestRunShortGetModel) HasCreatedById() bool {
	if o != nil && !IsNil(o.CreatedById) {
		return true
	}

	return false
}

// SetCreatedById gets a reference to the given string and assigns it to the CreatedById field.
func (o *TestRunShortGetModel) SetCreatedById(v string) {
	o.CreatedById = &v
}

// GetModifiedDate returns the ModifiedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunShortGetModel) GetModifiedDate() time.Time {
	if o == nil || IsNil(o.ModifiedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedDate.Get()
}

// GetModifiedDateOk returns a tuple with the ModifiedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunShortGetModel) GetModifiedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedDate.Get(), o.ModifiedDate.IsSet()
}

// HasModifiedDate returns a boolean if a field has been set.
func (o *TestRunShortGetModel) HasModifiedDate() bool {
	if o != nil && o.ModifiedDate.IsSet() {
		return true
	}

	return false
}

// SetModifiedDate gets a reference to the given NullableTime and assigns it to the ModifiedDate field.
func (o *TestRunShortGetModel) SetModifiedDate(v time.Time) {
	o.ModifiedDate.Set(&v)
}
// SetModifiedDateNil sets the value for ModifiedDate to be an explicit nil
func (o *TestRunShortGetModel) SetModifiedDateNil() {
	o.ModifiedDate.Set(nil)
}

// UnsetModifiedDate ensures that no value is present for ModifiedDate, not even an explicit nil
func (o *TestRunShortGetModel) UnsetModifiedDate() {
	o.ModifiedDate.Unset()
}

// GetModifiedById returns the ModifiedById field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunShortGetModel) GetModifiedById() string {
	if o == nil || IsNil(o.ModifiedById.Get()) {
		var ret string
		return ret
	}
	return *o.ModifiedById.Get()
}

// GetModifiedByIdOk returns a tuple with the ModifiedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunShortGetModel) GetModifiedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ModifiedById.Get(), o.ModifiedById.IsSet()
}

// HasModifiedById returns a boolean if a field has been set.
func (o *TestRunShortGetModel) HasModifiedById() bool {
	if o != nil && o.ModifiedById.IsSet() {
		return true
	}

	return false
}

// SetModifiedById gets a reference to the given NullableString and assigns it to the ModifiedById field.
func (o *TestRunShortGetModel) SetModifiedById(v string) {
	o.ModifiedById.Set(&v)
}
// SetModifiedByIdNil sets the value for ModifiedById to be an explicit nil
func (o *TestRunShortGetModel) SetModifiedByIdNil() {
	o.ModifiedById.Set(nil)
}

// UnsetModifiedById ensures that no value is present for ModifiedById, not even an explicit nil
func (o *TestRunShortGetModel) UnsetModifiedById() {
	o.ModifiedById.Unset()
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *TestRunShortGetModel) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestRunShortGetModel) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *TestRunShortGetModel) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *TestRunShortGetModel) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetState returns the State field value
func (o *TestRunShortGetModel) GetState() TestRunState {
	if o == nil {
		var ret TestRunState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *TestRunShortGetModel) GetStateOk() (*TestRunState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *TestRunShortGetModel) SetState(v TestRunState) {
	o.State = v
}

// GetStartedDate returns the StartedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunShortGetModel) GetStartedDate() time.Time {
	if o == nil || IsNil(o.StartedDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartedDate.Get()
}

// GetStartedDateOk returns a tuple with the StartedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunShortGetModel) GetStartedDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedDate.Get(), o.StartedDate.IsSet()
}

// HasStartedDate returns a boolean if a field has been set.
func (o *TestRunShortGetModel) HasStartedDate() bool {
	if o != nil && o.StartedDate.IsSet() {
		return true
	}

	return false
}

// SetStartedDate gets a reference to the given NullableTime and assigns it to the StartedDate field.
func (o *TestRunShortGetModel) SetStartedDate(v time.Time) {
	o.StartedDate.Set(&v)
}
// SetStartedDateNil sets the value for StartedDate to be an explicit nil
func (o *TestRunShortGetModel) SetStartedDateNil() {
	o.StartedDate.Set(nil)
}

// UnsetStartedDate ensures that no value is present for StartedDate, not even an explicit nil
func (o *TestRunShortGetModel) UnsetStartedDate() {
	o.StartedDate.Unset()
}

// GetAutotestsCount returns the AutotestsCount field value if set, zero value otherwise.
func (o *TestRunShortGetModel) GetAutotestsCount() int32 {
	if o == nil || IsNil(o.AutotestsCount) {
		var ret int32
		return ret
	}
	return *o.AutotestsCount
}

// GetAutotestsCountOk returns a tuple with the AutotestsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TestRunShortGetModel) GetAutotestsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.AutotestsCount) {
		return nil, false
	}
	return o.AutotestsCount, true
}

// HasAutotestsCount returns a boolean if a field has been set.
func (o *TestRunShortGetModel) HasAutotestsCount() bool {
	if o != nil && !IsNil(o.AutotestsCount) {
		return true
	}

	return false
}

// SetAutotestsCount gets a reference to the given int32 and assigns it to the AutotestsCount field.
func (o *TestRunShortGetModel) SetAutotestsCount(v int32) {
	o.AutotestsCount = &v
}

// GetStatistics returns the Statistics field value
func (o *TestRunShortGetModel) GetStatistics() TestResultsStatisticsGetModel {
	if o == nil {
		var ret TestResultsStatisticsGetModel
		return ret
	}

	return o.Statistics
}

// GetStatisticsOk returns a tuple with the Statistics field value
// and a boolean to check if the value has been set.
func (o *TestRunShortGetModel) GetStatisticsOk() (*TestResultsStatisticsGetModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Statistics, true
}

// SetStatistics sets field value
func (o *TestRunShortGetModel) SetStatistics(v TestResultsStatisticsGetModel) {
	o.Statistics = v
}

func (o TestRunShortGetModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestRunShortGetModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.CreatedDate) {
		toSerialize["createdDate"] = o.CreatedDate
	}
	if !IsNil(o.CreatedById) {
		toSerialize["createdById"] = o.CreatedById
	}
	if o.ModifiedDate.IsSet() {
		toSerialize["modifiedDate"] = o.ModifiedDate.Get()
	}
	if o.ModifiedById.IsSet() {
		toSerialize["modifiedById"] = o.ModifiedById.Get()
	}
	if !IsNil(o.IsDeleted) {
		toSerialize["isDeleted"] = o.IsDeleted
	}
	toSerialize["state"] = o.State
	if o.StartedDate.IsSet() {
		toSerialize["startedDate"] = o.StartedDate.Get()
	}
	if !IsNil(o.AutotestsCount) {
		toSerialize["autotestsCount"] = o.AutotestsCount
	}
	toSerialize["statistics"] = o.Statistics
	return toSerialize, nil
}

type NullableTestRunShortGetModel struct {
	value *TestRunShortGetModel
	isSet bool
}

func (v NullableTestRunShortGetModel) Get() *TestRunShortGetModel {
	return v.value
}

func (v *NullableTestRunShortGetModel) Set(val *TestRunShortGetModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestRunShortGetModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestRunShortGetModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestRunShortGetModel(val *TestRunShortGetModel) *NullableTestRunShortGetModel {
	return &NullableTestRunShortGetModel{value: val, isSet: true}
}

func (v NullableTestRunShortGetModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestRunShortGetModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


