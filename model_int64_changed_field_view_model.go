/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the Int64ChangedFieldViewModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Int64ChangedFieldViewModel{}

// Int64ChangedFieldViewModel struct for Int64ChangedFieldViewModel
type Int64ChangedFieldViewModel struct {
	OldValue int64 `json:"oldValue"`
	NewValue int64 `json:"newValue"`
}

type _Int64ChangedFieldViewModel Int64ChangedFieldViewModel

// NewInt64ChangedFieldViewModel instantiates a new Int64ChangedFieldViewModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInt64ChangedFieldViewModel(oldValue int64, newValue int64) *Int64ChangedFieldViewModel {
	this := Int64ChangedFieldViewModel{}
	this.OldValue = oldValue
	this.NewValue = newValue
	return &this
}

// NewInt64ChangedFieldViewModelWithDefaults instantiates a new Int64ChangedFieldViewModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInt64ChangedFieldViewModelWithDefaults() *Int64ChangedFieldViewModel {
	this := Int64ChangedFieldViewModel{}
	return &this
}

// GetOldValue returns the OldValue field value
func (o *Int64ChangedFieldViewModel) GetOldValue() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OldValue
}

// GetOldValueOk returns a tuple with the OldValue field value
// and a boolean to check if the value has been set.
func (o *Int64ChangedFieldViewModel) GetOldValueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OldValue, true
}

// SetOldValue sets field value
func (o *Int64ChangedFieldViewModel) SetOldValue(v int64) {
	o.OldValue = v
}

// GetNewValue returns the NewValue field value
func (o *Int64ChangedFieldViewModel) GetNewValue() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NewValue
}

// GetNewValueOk returns a tuple with the NewValue field value
// and a boolean to check if the value has been set.
func (o *Int64ChangedFieldViewModel) GetNewValueOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NewValue, true
}

// SetNewValue sets field value
func (o *Int64ChangedFieldViewModel) SetNewValue(v int64) {
	o.NewValue = v
}

func (o Int64ChangedFieldViewModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Int64ChangedFieldViewModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["oldValue"] = o.OldValue
	toSerialize["newValue"] = o.NewValue
	return toSerialize, nil
}

func (o *Int64ChangedFieldViewModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"oldValue",
		"newValue",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInt64ChangedFieldViewModel := _Int64ChangedFieldViewModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInt64ChangedFieldViewModel)

	if err != nil {
		return err
	}

	*o = Int64ChangedFieldViewModel(varInt64ChangedFieldViewModel)

	return err
}

type NullableInt64ChangedFieldViewModel struct {
	value *Int64ChangedFieldViewModel
	isSet bool
}

func (v NullableInt64ChangedFieldViewModel) Get() *Int64ChangedFieldViewModel {
	return v.value
}

func (v *NullableInt64ChangedFieldViewModel) Set(val *Int64ChangedFieldViewModel) {
	v.value = val
	v.isSet = true
}

func (v NullableInt64ChangedFieldViewModel) IsSet() bool {
	return v.isSet
}

func (v *NullableInt64ChangedFieldViewModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInt64ChangedFieldViewModel(val *Int64ChangedFieldViewModel) *NullableInt64ChangedFieldViewModel {
	return &NullableInt64ChangedFieldViewModel{value: val, isSet: true}
}

func (v NullableInt64ChangedFieldViewModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInt64ChangedFieldViewModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


