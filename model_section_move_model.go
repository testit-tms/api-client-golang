/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the SectionMoveModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SectionMoveModel{}

// SectionMoveModel struct for SectionMoveModel
type SectionMoveModel struct {
	// Unique ID of the section
	Id string `json:"id"`
	// Unique ID of the section's current parent section
	OldParentId string `json:"oldParentId"`
	// Unique ID of the section's target parent section
	ParentId string `json:"parentId"`
	// Unique ID of the section's following section
	NextSectionId NullableString `json:"nextSectionId,omitempty"`
}

// NewSectionMoveModel instantiates a new SectionMoveModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSectionMoveModel(id string, oldParentId string, parentId string) *SectionMoveModel {
	this := SectionMoveModel{}
	this.Id = id
	this.OldParentId = oldParentId
	this.ParentId = parentId
	return &this
}

// NewSectionMoveModelWithDefaults instantiates a new SectionMoveModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSectionMoveModelWithDefaults() *SectionMoveModel {
	this := SectionMoveModel{}
	return &this
}

// GetId returns the Id field value
func (o *SectionMoveModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SectionMoveModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SectionMoveModel) SetId(v string) {
	o.Id = v
}

// GetOldParentId returns the OldParentId field value
func (o *SectionMoveModel) GetOldParentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OldParentId
}

// GetOldParentIdOk returns a tuple with the OldParentId field value
// and a boolean to check if the value has been set.
func (o *SectionMoveModel) GetOldParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OldParentId, true
}

// SetOldParentId sets field value
func (o *SectionMoveModel) SetOldParentId(v string) {
	o.OldParentId = v
}

// GetParentId returns the ParentId field value
func (o *SectionMoveModel) GetParentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value
// and a boolean to check if the value has been set.
func (o *SectionMoveModel) GetParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParentId, true
}

// SetParentId sets field value
func (o *SectionMoveModel) SetParentId(v string) {
	o.ParentId = v
}

// GetNextSectionId returns the NextSectionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SectionMoveModel) GetNextSectionId() string {
	if o == nil || IsNil(o.NextSectionId.Get()) {
		var ret string
		return ret
	}
	return *o.NextSectionId.Get()
}

// GetNextSectionIdOk returns a tuple with the NextSectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SectionMoveModel) GetNextSectionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextSectionId.Get(), o.NextSectionId.IsSet()
}

// HasNextSectionId returns a boolean if a field has been set.
func (o *SectionMoveModel) HasNextSectionId() bool {
	if o != nil && o.NextSectionId.IsSet() {
		return true
	}

	return false
}

// SetNextSectionId gets a reference to the given NullableString and assigns it to the NextSectionId field.
func (o *SectionMoveModel) SetNextSectionId(v string) {
	o.NextSectionId.Set(&v)
}
// SetNextSectionIdNil sets the value for NextSectionId to be an explicit nil
func (o *SectionMoveModel) SetNextSectionIdNil() {
	o.NextSectionId.Set(nil)
}

// UnsetNextSectionId ensures that no value is present for NextSectionId, not even an explicit nil
func (o *SectionMoveModel) UnsetNextSectionId() {
	o.NextSectionId.Unset()
}

func (o SectionMoveModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SectionMoveModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["oldParentId"] = o.OldParentId
	toSerialize["parentId"] = o.ParentId
	if o.NextSectionId.IsSet() {
		toSerialize["nextSectionId"] = o.NextSectionId.Get()
	}
	return toSerialize, nil
}

type NullableSectionMoveModel struct {
	value *SectionMoveModel
	isSet bool
}

func (v NullableSectionMoveModel) Get() *SectionMoveModel {
	return v.value
}

func (v *NullableSectionMoveModel) Set(val *SectionMoveModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSectionMoveModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSectionMoveModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSectionMoveModel(val *SectionMoveModel) *NullableSectionMoveModel {
	return &NullableSectionMoveModel{value: val, isSet: true}
}

func (v NullableSectionMoveModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSectionMoveModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


