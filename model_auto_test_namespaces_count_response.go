/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AutoTestNamespacesCountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoTestNamespacesCountResponse{}

// AutoTestNamespacesCountResponse struct for AutoTestNamespacesCountResponse
type AutoTestNamespacesCountResponse struct {
	Namespaces []AutoTestNamespaceCountApiModel `json:"namespaces"`
}

type _AutoTestNamespacesCountResponse AutoTestNamespacesCountResponse

// NewAutoTestNamespacesCountResponse instantiates a new AutoTestNamespacesCountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoTestNamespacesCountResponse(namespaces []AutoTestNamespaceCountApiModel) *AutoTestNamespacesCountResponse {
	this := AutoTestNamespacesCountResponse{}
	this.Namespaces = namespaces
	return &this
}

// NewAutoTestNamespacesCountResponseWithDefaults instantiates a new AutoTestNamespacesCountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoTestNamespacesCountResponseWithDefaults() *AutoTestNamespacesCountResponse {
	this := AutoTestNamespacesCountResponse{}
	return &this
}

// GetNamespaces returns the Namespaces field value
func (o *AutoTestNamespacesCountResponse) GetNamespaces() []AutoTestNamespaceCountApiModel {
	if o == nil {
		var ret []AutoTestNamespaceCountApiModel
		return ret
	}

	return o.Namespaces
}

// GetNamespacesOk returns a tuple with the Namespaces field value
// and a boolean to check if the value has been set.
func (o *AutoTestNamespacesCountResponse) GetNamespacesOk() ([]AutoTestNamespaceCountApiModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Namespaces, true
}

// SetNamespaces sets field value
func (o *AutoTestNamespacesCountResponse) SetNamespaces(v []AutoTestNamespaceCountApiModel) {
	o.Namespaces = v
}

func (o AutoTestNamespacesCountResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoTestNamespacesCountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["namespaces"] = o.Namespaces
	return toSerialize, nil
}

func (o *AutoTestNamespacesCountResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"namespaces",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAutoTestNamespacesCountResponse := _AutoTestNamespacesCountResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAutoTestNamespacesCountResponse)

	if err != nil {
		return err
	}

	*o = AutoTestNamespacesCountResponse(varAutoTestNamespacesCountResponse)

	return err
}

type NullableAutoTestNamespacesCountResponse struct {
	value *AutoTestNamespacesCountResponse
	isSet bool
}

func (v NullableAutoTestNamespacesCountResponse) Get() *AutoTestNamespacesCountResponse {
	return v.value
}

func (v *NullableAutoTestNamespacesCountResponse) Set(val *AutoTestNamespacesCountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoTestNamespacesCountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoTestNamespacesCountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoTestNamespacesCountResponse(val *AutoTestNamespacesCountResponse) *NullableAutoTestNamespacesCountResponse {
	return &NullableAutoTestNamespacesCountResponse{value: val, isSet: true}
}

func (v NullableAutoTestNamespacesCountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoTestNamespacesCountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


