/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the AutoTestChangeViewModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoTestChangeViewModel{}

// AutoTestChangeViewModel struct for AutoTestChangeViewModel
type AutoTestChangeViewModel struct {
	Id *string `json:"id,omitempty"`
	ProjectId *string `json:"projectId,omitempty"`
	ExternalId NullableString `json:"externalId,omitempty"`
	GlobalId *int64 `json:"globalId,omitempty"`
}

// NewAutoTestChangeViewModel instantiates a new AutoTestChangeViewModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoTestChangeViewModel() *AutoTestChangeViewModel {
	this := AutoTestChangeViewModel{}
	return &this
}

// NewAutoTestChangeViewModelWithDefaults instantiates a new AutoTestChangeViewModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoTestChangeViewModelWithDefaults() *AutoTestChangeViewModel {
	this := AutoTestChangeViewModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AutoTestChangeViewModel) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTestChangeViewModel) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AutoTestChangeViewModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AutoTestChangeViewModel) SetId(v string) {
	o.Id = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *AutoTestChangeViewModel) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTestChangeViewModel) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *AutoTestChangeViewModel) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *AutoTestChangeViewModel) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AutoTestChangeViewModel) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId.Get()) {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AutoTestChangeViewModel) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *AutoTestChangeViewModel) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *AutoTestChangeViewModel) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *AutoTestChangeViewModel) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *AutoTestChangeViewModel) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetGlobalId returns the GlobalId field value if set, zero value otherwise.
func (o *AutoTestChangeViewModel) GetGlobalId() int64 {
	if o == nil || IsNil(o.GlobalId) {
		var ret int64
		return ret
	}
	return *o.GlobalId
}

// GetGlobalIdOk returns a tuple with the GlobalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTestChangeViewModel) GetGlobalIdOk() (*int64, bool) {
	if o == nil || IsNil(o.GlobalId) {
		return nil, false
	}
	return o.GlobalId, true
}

// HasGlobalId returns a boolean if a field has been set.
func (o *AutoTestChangeViewModel) HasGlobalId() bool {
	if o != nil && !IsNil(o.GlobalId) {
		return true
	}

	return false
}

// SetGlobalId gets a reference to the given int64 and assigns it to the GlobalId field.
func (o *AutoTestChangeViewModel) SetGlobalId(v int64) {
	o.GlobalId = &v
}

func (o AutoTestChangeViewModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoTestChangeViewModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if !IsNil(o.GlobalId) {
		toSerialize["globalId"] = o.GlobalId
	}
	return toSerialize, nil
}

type NullableAutoTestChangeViewModel struct {
	value *AutoTestChangeViewModel
	isSet bool
}

func (v NullableAutoTestChangeViewModel) Get() *AutoTestChangeViewModel {
	return v.value
}

func (v *NullableAutoTestChangeViewModel) Set(val *AutoTestChangeViewModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoTestChangeViewModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoTestChangeViewModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoTestChangeViewModel(val *AutoTestChangeViewModel) *NullableAutoTestChangeViewModel {
	return &NullableAutoTestChangeViewModel{value: val, isSet: true}
}

func (v NullableAutoTestChangeViewModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoTestChangeViewModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


