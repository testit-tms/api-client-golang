/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the AutotestSelectModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutotestSelectModel{}

// AutotestSelectModel struct for AutotestSelectModel
type AutotestSelectModel struct {
	Filter *AutotestFilterModel `json:"filter,omitempty"`
	ExtractionModel *AutotestsExtractionModel `json:"extractionModel,omitempty"`
}

// NewAutotestSelectModel instantiates a new AutotestSelectModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutotestSelectModel() *AutotestSelectModel {
	this := AutotestSelectModel{}
	return &this
}

// NewAutotestSelectModelWithDefaults instantiates a new AutotestSelectModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutotestSelectModelWithDefaults() *AutotestSelectModel {
	this := AutotestSelectModel{}
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *AutotestSelectModel) GetFilter() AutotestFilterModel {
	if o == nil || IsNil(o.Filter) {
		var ret AutotestFilterModel
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutotestSelectModel) GetFilterOk() (*AutotestFilterModel, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *AutotestSelectModel) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given AutotestFilterModel and assigns it to the Filter field.
func (o *AutotestSelectModel) SetFilter(v AutotestFilterModel) {
	o.Filter = &v
}

// GetExtractionModel returns the ExtractionModel field value if set, zero value otherwise.
func (o *AutotestSelectModel) GetExtractionModel() AutotestsExtractionModel {
	if o == nil || IsNil(o.ExtractionModel) {
		var ret AutotestsExtractionModel
		return ret
	}
	return *o.ExtractionModel
}

// GetExtractionModelOk returns a tuple with the ExtractionModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutotestSelectModel) GetExtractionModelOk() (*AutotestsExtractionModel, bool) {
	if o == nil || IsNil(o.ExtractionModel) {
		return nil, false
	}
	return o.ExtractionModel, true
}

// HasExtractionModel returns a boolean if a field has been set.
func (o *AutotestSelectModel) HasExtractionModel() bool {
	if o != nil && !IsNil(o.ExtractionModel) {
		return true
	}

	return false
}

// SetExtractionModel gets a reference to the given AutotestsExtractionModel and assigns it to the ExtractionModel field.
func (o *AutotestSelectModel) SetExtractionModel(v AutotestsExtractionModel) {
	o.ExtractionModel = &v
}

func (o AutotestSelectModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutotestSelectModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.ExtractionModel) {
		toSerialize["extractionModel"] = o.ExtractionModel
	}
	return toSerialize, nil
}

type NullableAutotestSelectModel struct {
	value *AutotestSelectModel
	isSet bool
}

func (v NullableAutotestSelectModel) Get() *AutotestSelectModel {
	return v.value
}

func (v *NullableAutotestSelectModel) Set(val *AutotestSelectModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAutotestSelectModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAutotestSelectModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutotestSelectModel(val *AutotestSelectModel) *NullableAutotestSelectModel {
	return &NullableAutotestSelectModel{value: val, isSet: true}
}

func (v NullableAutotestSelectModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutotestSelectModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


