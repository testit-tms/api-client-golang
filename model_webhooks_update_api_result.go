/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhooksUpdateApiResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhooksUpdateApiResult{}

// WebhooksUpdateApiResult struct for WebhooksUpdateApiResult
type WebhooksUpdateApiResult struct {
	UpdatedCount int32 `json:"updatedCount"`
}

type _WebhooksUpdateApiResult WebhooksUpdateApiResult

// NewWebhooksUpdateApiResult instantiates a new WebhooksUpdateApiResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhooksUpdateApiResult(updatedCount int32) *WebhooksUpdateApiResult {
	this := WebhooksUpdateApiResult{}
	this.UpdatedCount = updatedCount
	return &this
}

// NewWebhooksUpdateApiResultWithDefaults instantiates a new WebhooksUpdateApiResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhooksUpdateApiResultWithDefaults() *WebhooksUpdateApiResult {
	this := WebhooksUpdateApiResult{}
	return &this
}

// GetUpdatedCount returns the UpdatedCount field value
func (o *WebhooksUpdateApiResult) GetUpdatedCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UpdatedCount
}

// GetUpdatedCountOk returns a tuple with the UpdatedCount field value
// and a boolean to check if the value has been set.
func (o *WebhooksUpdateApiResult) GetUpdatedCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedCount, true
}

// SetUpdatedCount sets field value
func (o *WebhooksUpdateApiResult) SetUpdatedCount(v int32) {
	o.UpdatedCount = v
}

func (o WebhooksUpdateApiResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhooksUpdateApiResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["updatedCount"] = o.UpdatedCount
	return toSerialize, nil
}

func (o *WebhooksUpdateApiResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"updatedCount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhooksUpdateApiResult := _WebhooksUpdateApiResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhooksUpdateApiResult)

	if err != nil {
		return err
	}

	*o = WebhooksUpdateApiResult(varWebhooksUpdateApiResult)

	return err
}

type NullableWebhooksUpdateApiResult struct {
	value *WebhooksUpdateApiResult
	isSet bool
}

func (v NullableWebhooksUpdateApiResult) Get() *WebhooksUpdateApiResult {
	return v.value
}

func (v *NullableWebhooksUpdateApiResult) Set(val *WebhooksUpdateApiResult) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhooksUpdateApiResult) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhooksUpdateApiResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhooksUpdateApiResult(val *WebhooksUpdateApiResult) *NullableWebhooksUpdateApiResult {
	return &NullableWebhooksUpdateApiResult{value: val, isSet: true}
}

func (v NullableWebhooksUpdateApiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhooksUpdateApiResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


