/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the CreateSectionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSectionRequest{}

// CreateSectionRequest struct for CreateSectionRequest
type CreateSectionRequest struct {
	Name string `json:"name"`
	ProjectId string `json:"projectId"`
	ParentId NullableString `json:"parentId,omitempty"`
	PreconditionSteps []StepPutModel `json:"preconditionSteps,omitempty"`
	PostconditionSteps []StepPutModel `json:"postconditionSteps,omitempty"`
}

// NewCreateSectionRequest instantiates a new CreateSectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSectionRequest(name string, projectId string) *CreateSectionRequest {
	this := CreateSectionRequest{}
	this.Name = name
	this.ProjectId = projectId
	return &this
}

// NewCreateSectionRequestWithDefaults instantiates a new CreateSectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSectionRequestWithDefaults() *CreateSectionRequest {
	this := CreateSectionRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateSectionRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateSectionRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateSectionRequest) SetName(v string) {
	o.Name = v
}

// GetProjectId returns the ProjectId field value
func (o *CreateSectionRequest) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *CreateSectionRequest) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *CreateSectionRequest) SetProjectId(v string) {
	o.ProjectId = v
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSectionRequest) GetParentId() string {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSectionRequest) GetParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *CreateSectionRequest) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableString and assigns it to the ParentId field.
func (o *CreateSectionRequest) SetParentId(v string) {
	o.ParentId.Set(&v)
}
// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *CreateSectionRequest) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *CreateSectionRequest) UnsetParentId() {
	o.ParentId.Unset()
}

// GetPreconditionSteps returns the PreconditionSteps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSectionRequest) GetPreconditionSteps() []StepPutModel {
	if o == nil {
		var ret []StepPutModel
		return ret
	}
	return o.PreconditionSteps
}

// GetPreconditionStepsOk returns a tuple with the PreconditionSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSectionRequest) GetPreconditionStepsOk() ([]StepPutModel, bool) {
	if o == nil || IsNil(o.PreconditionSteps) {
		return nil, false
	}
	return o.PreconditionSteps, true
}

// HasPreconditionSteps returns a boolean if a field has been set.
func (o *CreateSectionRequest) HasPreconditionSteps() bool {
	if o != nil && IsNil(o.PreconditionSteps) {
		return true
	}

	return false
}

// SetPreconditionSteps gets a reference to the given []StepPutModel and assigns it to the PreconditionSteps field.
func (o *CreateSectionRequest) SetPreconditionSteps(v []StepPutModel) {
	o.PreconditionSteps = v
}

// GetPostconditionSteps returns the PostconditionSteps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateSectionRequest) GetPostconditionSteps() []StepPutModel {
	if o == nil {
		var ret []StepPutModel
		return ret
	}
	return o.PostconditionSteps
}

// GetPostconditionStepsOk returns a tuple with the PostconditionSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateSectionRequest) GetPostconditionStepsOk() ([]StepPutModel, bool) {
	if o == nil || IsNil(o.PostconditionSteps) {
		return nil, false
	}
	return o.PostconditionSteps, true
}

// HasPostconditionSteps returns a boolean if a field has been set.
func (o *CreateSectionRequest) HasPostconditionSteps() bool {
	if o != nil && IsNil(o.PostconditionSteps) {
		return true
	}

	return false
}

// SetPostconditionSteps gets a reference to the given []StepPutModel and assigns it to the PostconditionSteps field.
func (o *CreateSectionRequest) SetPostconditionSteps(v []StepPutModel) {
	o.PostconditionSteps = v
}

func (o CreateSectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSectionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["projectId"] = o.ProjectId
	if o.ParentId.IsSet() {
		toSerialize["parentId"] = o.ParentId.Get()
	}
	if o.PreconditionSteps != nil {
		toSerialize["preconditionSteps"] = o.PreconditionSteps
	}
	if o.PostconditionSteps != nil {
		toSerialize["postconditionSteps"] = o.PostconditionSteps
	}
	return toSerialize, nil
}

type NullableCreateSectionRequest struct {
	value *CreateSectionRequest
	isSet bool
}

func (v NullableCreateSectionRequest) Get() *CreateSectionRequest {
	return v.value
}

func (v *NullableCreateSectionRequest) Set(val *CreateSectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSectionRequest(val *CreateSectionRequest) *NullableCreateSectionRequest {
	return &NullableCreateSectionRequest{value: val, isSet: true}
}

func (v NullableCreateSectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


