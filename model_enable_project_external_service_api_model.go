/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the EnableProjectExternalServiceApiModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnableProjectExternalServiceApiModel{}

// EnableProjectExternalServiceApiModel struct for EnableProjectExternalServiceApiModel
type EnableProjectExternalServiceApiModel struct {
	// External service settings
	Settings interface{} `json:"settings,omitempty"`
}

// NewEnableProjectExternalServiceApiModel instantiates a new EnableProjectExternalServiceApiModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnableProjectExternalServiceApiModel() *EnableProjectExternalServiceApiModel {
	this := EnableProjectExternalServiceApiModel{}
	return &this
}

// NewEnableProjectExternalServiceApiModelWithDefaults instantiates a new EnableProjectExternalServiceApiModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnableProjectExternalServiceApiModelWithDefaults() *EnableProjectExternalServiceApiModel {
	this := EnableProjectExternalServiceApiModel{}
	return &this
}

// GetSettings returns the Settings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnableProjectExternalServiceApiModel) GetSettings() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnableProjectExternalServiceApiModel) GetSettingsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return &o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *EnableProjectExternalServiceApiModel) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given interface{} and assigns it to the Settings field.
func (o *EnableProjectExternalServiceApiModel) SetSettings(v interface{}) {
	o.Settings = v
}

func (o EnableProjectExternalServiceApiModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnableProjectExternalServiceApiModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Settings != nil {
		toSerialize["settings"] = o.Settings
	}
	return toSerialize, nil
}

type NullableEnableProjectExternalServiceApiModel struct {
	value *EnableProjectExternalServiceApiModel
	isSet bool
}

func (v NullableEnableProjectExternalServiceApiModel) Get() *EnableProjectExternalServiceApiModel {
	return v.value
}

func (v *NullableEnableProjectExternalServiceApiModel) Set(val *EnableProjectExternalServiceApiModel) {
	v.value = val
	v.isSet = true
}

func (v NullableEnableProjectExternalServiceApiModel) IsSet() bool {
	return v.isSet
}

func (v *NullableEnableProjectExternalServiceApiModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnableProjectExternalServiceApiModel(val *EnableProjectExternalServiceApiModel) *NullableEnableProjectExternalServiceApiModel {
	return &NullableEnableProjectExternalServiceApiModel{value: val, isSet: true}
}

func (v NullableEnableProjectExternalServiceApiModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnableProjectExternalServiceApiModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


