/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"fmt"
)

// CustomAttributeType the model 'CustomAttributeType'
type CustomAttributeType string

// List of CustomAttributeType
const (
	CUSTOMATTRIBUTETYPE_STRING CustomAttributeType = "string"
	CUSTOMATTRIBUTETYPE_DATETIME CustomAttributeType = "datetime"
	CUSTOMATTRIBUTETYPE_OPTIONS CustomAttributeType = "options"
	CUSTOMATTRIBUTETYPE_USER CustomAttributeType = "user"
	CUSTOMATTRIBUTETYPE_MULTIPLE_OPTIONS CustomAttributeType = "multipleOptions"
	CUSTOMATTRIBUTETYPE_CHECKBOX CustomAttributeType = "checkbox"
)

// All allowed values of CustomAttributeType enum
var AllowedCustomAttributeTypeEnumValues = []CustomAttributeType{
	"string",
	"datetime",
	"options",
	"user",
	"multipleOptions",
	"checkbox",
}

func (v *CustomAttributeType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CustomAttributeType(value)
	for _, existing := range AllowedCustomAttributeTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CustomAttributeType", value)
}

// NewCustomAttributeTypeFromValue returns a pointer to a valid CustomAttributeType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCustomAttributeTypeFromValue(v string) (*CustomAttributeType, error) {
	ev := CustomAttributeType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CustomAttributeType: valid values are %v", v, AllowedCustomAttributeTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CustomAttributeType) IsValid() bool {
	for _, existing := range AllowedCustomAttributeTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CustomAttributeType value
func (v CustomAttributeType) Ptr() *CustomAttributeType {
	return &v
}

type NullableCustomAttributeType struct {
	value *CustomAttributeType
	isSet bool
}

func (v NullableCustomAttributeType) Get() *CustomAttributeType {
	return v.value
}

func (v *NullableCustomAttributeType) Set(val *CustomAttributeType) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomAttributeType) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomAttributeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomAttributeType(val *CustomAttributeType) *NullableCustomAttributeType {
	return &NullableCustomAttributeType{value: val, isSet: true}
}

func (v NullableCustomAttributeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomAttributeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

