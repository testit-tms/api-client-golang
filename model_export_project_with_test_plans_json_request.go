/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the ExportProjectWithTestPlansJsonRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportProjectWithTestPlansJsonRequest{}

// ExportProjectWithTestPlansJsonRequest struct for ExportProjectWithTestPlansJsonRequest
type ExportProjectWithTestPlansJsonRequest struct {
	// Specifies the IDs of test plans to be exported with the project.<br />  In this parameter, \"<b>string</b>\" values are IDs of the test plans.<br />  To get the test plan IDs, use the `GET /api/v2/projects/{projectId}/testPlans` method.
	TestPlansIds []string `json:"testPlansIds,omitempty"`
}

// NewExportProjectWithTestPlansJsonRequest instantiates a new ExportProjectWithTestPlansJsonRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportProjectWithTestPlansJsonRequest() *ExportProjectWithTestPlansJsonRequest {
	this := ExportProjectWithTestPlansJsonRequest{}
	return &this
}

// NewExportProjectWithTestPlansJsonRequestWithDefaults instantiates a new ExportProjectWithTestPlansJsonRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportProjectWithTestPlansJsonRequestWithDefaults() *ExportProjectWithTestPlansJsonRequest {
	this := ExportProjectWithTestPlansJsonRequest{}
	return &this
}

// GetTestPlansIds returns the TestPlansIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportProjectWithTestPlansJsonRequest) GetTestPlansIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.TestPlansIds
}

// GetTestPlansIdsOk returns a tuple with the TestPlansIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportProjectWithTestPlansJsonRequest) GetTestPlansIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TestPlansIds) {
		return nil, false
	}
	return o.TestPlansIds, true
}

// HasTestPlansIds returns a boolean if a field has been set.
func (o *ExportProjectWithTestPlansJsonRequest) HasTestPlansIds() bool {
	if o != nil && IsNil(o.TestPlansIds) {
		return true
	}

	return false
}

// SetTestPlansIds gets a reference to the given []string and assigns it to the TestPlansIds field.
func (o *ExportProjectWithTestPlansJsonRequest) SetTestPlansIds(v []string) {
	o.TestPlansIds = v
}

func (o ExportProjectWithTestPlansJsonRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportProjectWithTestPlansJsonRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TestPlansIds != nil {
		toSerialize["testPlansIds"] = o.TestPlansIds
	}
	return toSerialize, nil
}

type NullableExportProjectWithTestPlansJsonRequest struct {
	value *ExportProjectWithTestPlansJsonRequest
	isSet bool
}

func (v NullableExportProjectWithTestPlansJsonRequest) Get() *ExportProjectWithTestPlansJsonRequest {
	return v.value
}

func (v *NullableExportProjectWithTestPlansJsonRequest) Set(val *ExportProjectWithTestPlansJsonRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableExportProjectWithTestPlansJsonRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableExportProjectWithTestPlansJsonRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportProjectWithTestPlansJsonRequest(val *ExportProjectWithTestPlansJsonRequest) *NullableExportProjectWithTestPlansJsonRequest {
	return &NullableExportProjectWithTestPlansJsonRequest{value: val, isSet: true}
}

func (v NullableExportProjectWithTestPlansJsonRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportProjectWithTestPlansJsonRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


