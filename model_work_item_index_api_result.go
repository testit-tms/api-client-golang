/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WorkItemIndexApiResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkItemIndexApiResult{}

// WorkItemIndexApiResult struct for WorkItemIndexApiResult
type WorkItemIndexApiResult struct {
	// Current index (position) of the element in a collection
	CurrentIndex int64 `json:"currentIndex"`
	// Total count of elements in a collection
	TotalCount int64 `json:"totalCount"`
}

type _WorkItemIndexApiResult WorkItemIndexApiResult

// NewWorkItemIndexApiResult instantiates a new WorkItemIndexApiResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkItemIndexApiResult(currentIndex int64, totalCount int64) *WorkItemIndexApiResult {
	this := WorkItemIndexApiResult{}
	this.CurrentIndex = currentIndex
	this.TotalCount = totalCount
	return &this
}

// NewWorkItemIndexApiResultWithDefaults instantiates a new WorkItemIndexApiResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkItemIndexApiResultWithDefaults() *WorkItemIndexApiResult {
	this := WorkItemIndexApiResult{}
	return &this
}

// GetCurrentIndex returns the CurrentIndex field value
func (o *WorkItemIndexApiResult) GetCurrentIndex() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CurrentIndex
}

// GetCurrentIndexOk returns a tuple with the CurrentIndex field value
// and a boolean to check if the value has been set.
func (o *WorkItemIndexApiResult) GetCurrentIndexOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentIndex, true
}

// SetCurrentIndex sets field value
func (o *WorkItemIndexApiResult) SetCurrentIndex(v int64) {
	o.CurrentIndex = v
}

// GetTotalCount returns the TotalCount field value
func (o *WorkItemIndexApiResult) GetTotalCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *WorkItemIndexApiResult) GetTotalCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *WorkItemIndexApiResult) SetTotalCount(v int64) {
	o.TotalCount = v
}

func (o WorkItemIndexApiResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkItemIndexApiResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["currentIndex"] = o.CurrentIndex
	toSerialize["totalCount"] = o.TotalCount
	return toSerialize, nil
}

func (o *WorkItemIndexApiResult) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"currentIndex",
		"totalCount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWorkItemIndexApiResult := _WorkItemIndexApiResult{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWorkItemIndexApiResult)

	if err != nil {
		return err
	}

	*o = WorkItemIndexApiResult(varWorkItemIndexApiResult)

	return err
}

type NullableWorkItemIndexApiResult struct {
	value *WorkItemIndexApiResult
	isSet bool
}

func (v NullableWorkItemIndexApiResult) Get() *WorkItemIndexApiResult {
	return v.value
}

func (v *NullableWorkItemIndexApiResult) Set(val *WorkItemIndexApiResult) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkItemIndexApiResult) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkItemIndexApiResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkItemIndexApiResult(val *WorkItemIndexApiResult) *NullableWorkItemIndexApiResult {
	return &NullableWorkItemIndexApiResult{value: val, isSet: true}
}

func (v NullableWorkItemIndexApiResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkItemIndexApiResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


