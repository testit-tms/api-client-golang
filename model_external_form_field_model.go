/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExternalFormFieldModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalFormFieldModel{}

// ExternalFormFieldModel struct for ExternalFormFieldModel
type ExternalFormFieldModel struct {
	FieldId NullableString `json:"fieldId,omitempty"`
	FieldName NullableString `json:"fieldName,omitempty"`
	HelpText NullableString `json:"helpText,omitempty"`
	Type NullableString `json:"type,omitempty"`
	ArrayValuesType NullableString `json:"arrayValuesType,omitempty"`
	DefaultValue interface{} `json:"defaultValue,omitempty"`
	IsCustomValueAllowed bool `json:"isCustomValueAllowed"`
	AutoCompleteUrl NullableString `json:"autoCompleteUrl,omitempty"`
	ControlType NullableString `json:"controlType,omitempty"`
	MinLength NullableInt32 `json:"minLength,omitempty"`
	MaxLength NullableInt32 `json:"maxLength,omitempty"`
	IsRequired NullableBool `json:"isRequired,omitempty"`
	Min interface{} `json:"min,omitempty"`
	Max interface{} `json:"max,omitempty"`
}

type _ExternalFormFieldModel ExternalFormFieldModel

// NewExternalFormFieldModel instantiates a new ExternalFormFieldModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalFormFieldModel(isCustomValueAllowed bool) *ExternalFormFieldModel {
	this := ExternalFormFieldModel{}
	this.IsCustomValueAllowed = isCustomValueAllowed
	return &this
}

// NewExternalFormFieldModelWithDefaults instantiates a new ExternalFormFieldModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalFormFieldModelWithDefaults() *ExternalFormFieldModel {
	this := ExternalFormFieldModel{}
	return &this
}

// GetFieldId returns the FieldId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormFieldModel) GetFieldId() string {
	if o == nil || IsNil(o.FieldId.Get()) {
		var ret string
		return ret
	}
	return *o.FieldId.Get()
}

// GetFieldIdOk returns a tuple with the FieldId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormFieldModel) GetFieldIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FieldId.Get(), o.FieldId.IsSet()
}

// HasFieldId returns a boolean if a field has been set.
func (o *ExternalFormFieldModel) HasFieldId() bool {
	if o != nil && o.FieldId.IsSet() {
		return true
	}

	return false
}

// SetFieldId gets a reference to the given NullableString and assigns it to the FieldId field.
func (o *ExternalFormFieldModel) SetFieldId(v string) {
	o.FieldId.Set(&v)
}
// SetFieldIdNil sets the value for FieldId to be an explicit nil
func (o *ExternalFormFieldModel) SetFieldIdNil() {
	o.FieldId.Set(nil)
}

// UnsetFieldId ensures that no value is present for FieldId, not even an explicit nil
func (o *ExternalFormFieldModel) UnsetFieldId() {
	o.FieldId.Unset()
}

// GetFieldName returns the FieldName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormFieldModel) GetFieldName() string {
	if o == nil || IsNil(o.FieldName.Get()) {
		var ret string
		return ret
	}
	return *o.FieldName.Get()
}

// GetFieldNameOk returns a tuple with the FieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormFieldModel) GetFieldNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FieldName.Get(), o.FieldName.IsSet()
}

// HasFieldName returns a boolean if a field has been set.
func (o *ExternalFormFieldModel) HasFieldName() bool {
	if o != nil && o.FieldName.IsSet() {
		return true
	}

	return false
}

// SetFieldName gets a reference to the given NullableString and assigns it to the FieldName field.
func (o *ExternalFormFieldModel) SetFieldName(v string) {
	o.FieldName.Set(&v)
}
// SetFieldNameNil sets the value for FieldName to be an explicit nil
func (o *ExternalFormFieldModel) SetFieldNameNil() {
	o.FieldName.Set(nil)
}

// UnsetFieldName ensures that no value is present for FieldName, not even an explicit nil
func (o *ExternalFormFieldModel) UnsetFieldName() {
	o.FieldName.Unset()
}

// GetHelpText returns the HelpText field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormFieldModel) GetHelpText() string {
	if o == nil || IsNil(o.HelpText.Get()) {
		var ret string
		return ret
	}
	return *o.HelpText.Get()
}

// GetHelpTextOk returns a tuple with the HelpText field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormFieldModel) GetHelpTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HelpText.Get(), o.HelpText.IsSet()
}

// HasHelpText returns a boolean if a field has been set.
func (o *ExternalFormFieldModel) HasHelpText() bool {
	if o != nil && o.HelpText.IsSet() {
		return true
	}

	return false
}

// SetHelpText gets a reference to the given NullableString and assigns it to the HelpText field.
func (o *ExternalFormFieldModel) SetHelpText(v string) {
	o.HelpText.Set(&v)
}
// SetHelpTextNil sets the value for HelpText to be an explicit nil
func (o *ExternalFormFieldModel) SetHelpTextNil() {
	o.HelpText.Set(nil)
}

// UnsetHelpText ensures that no value is present for HelpText, not even an explicit nil
func (o *ExternalFormFieldModel) UnsetHelpText() {
	o.HelpText.Unset()
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormFieldModel) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormFieldModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *ExternalFormFieldModel) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *ExternalFormFieldModel) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *ExternalFormFieldModel) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *ExternalFormFieldModel) UnsetType() {
	o.Type.Unset()
}

// GetArrayValuesType returns the ArrayValuesType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormFieldModel) GetArrayValuesType() string {
	if o == nil || IsNil(o.ArrayValuesType.Get()) {
		var ret string
		return ret
	}
	return *o.ArrayValuesType.Get()
}

// GetArrayValuesTypeOk returns a tuple with the ArrayValuesType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormFieldModel) GetArrayValuesTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ArrayValuesType.Get(), o.ArrayValuesType.IsSet()
}

// HasArrayValuesType returns a boolean if a field has been set.
func (o *ExternalFormFieldModel) HasArrayValuesType() bool {
	if o != nil && o.ArrayValuesType.IsSet() {
		return true
	}

	return false
}

// SetArrayValuesType gets a reference to the given NullableString and assigns it to the ArrayValuesType field.
func (o *ExternalFormFieldModel) SetArrayValuesType(v string) {
	o.ArrayValuesType.Set(&v)
}
// SetArrayValuesTypeNil sets the value for ArrayValuesType to be an explicit nil
func (o *ExternalFormFieldModel) SetArrayValuesTypeNil() {
	o.ArrayValuesType.Set(nil)
}

// UnsetArrayValuesType ensures that no value is present for ArrayValuesType, not even an explicit nil
func (o *ExternalFormFieldModel) UnsetArrayValuesType() {
	o.ArrayValuesType.Unset()
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormFieldModel) GetDefaultValue() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormFieldModel) GetDefaultValueOk() (*interface{}, bool) {
	if o == nil || IsNil(o.DefaultValue) {
		return nil, false
	}
	return &o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *ExternalFormFieldModel) HasDefaultValue() bool {
	if o != nil && !IsNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given interface{} and assigns it to the DefaultValue field.
func (o *ExternalFormFieldModel) SetDefaultValue(v interface{}) {
	o.DefaultValue = v
}

// GetIsCustomValueAllowed returns the IsCustomValueAllowed field value
func (o *ExternalFormFieldModel) GetIsCustomValueAllowed() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsCustomValueAllowed
}

// GetIsCustomValueAllowedOk returns a tuple with the IsCustomValueAllowed field value
// and a boolean to check if the value has been set.
func (o *ExternalFormFieldModel) GetIsCustomValueAllowedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsCustomValueAllowed, true
}

// SetIsCustomValueAllowed sets field value
func (o *ExternalFormFieldModel) SetIsCustomValueAllowed(v bool) {
	o.IsCustomValueAllowed = v
}

// GetAutoCompleteUrl returns the AutoCompleteUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormFieldModel) GetAutoCompleteUrl() string {
	if o == nil || IsNil(o.AutoCompleteUrl.Get()) {
		var ret string
		return ret
	}
	return *o.AutoCompleteUrl.Get()
}

// GetAutoCompleteUrlOk returns a tuple with the AutoCompleteUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormFieldModel) GetAutoCompleteUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AutoCompleteUrl.Get(), o.AutoCompleteUrl.IsSet()
}

// HasAutoCompleteUrl returns a boolean if a field has been set.
func (o *ExternalFormFieldModel) HasAutoCompleteUrl() bool {
	if o != nil && o.AutoCompleteUrl.IsSet() {
		return true
	}

	return false
}

// SetAutoCompleteUrl gets a reference to the given NullableString and assigns it to the AutoCompleteUrl field.
func (o *ExternalFormFieldModel) SetAutoCompleteUrl(v string) {
	o.AutoCompleteUrl.Set(&v)
}
// SetAutoCompleteUrlNil sets the value for AutoCompleteUrl to be an explicit nil
func (o *ExternalFormFieldModel) SetAutoCompleteUrlNil() {
	o.AutoCompleteUrl.Set(nil)
}

// UnsetAutoCompleteUrl ensures that no value is present for AutoCompleteUrl, not even an explicit nil
func (o *ExternalFormFieldModel) UnsetAutoCompleteUrl() {
	o.AutoCompleteUrl.Unset()
}

// GetControlType returns the ControlType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormFieldModel) GetControlType() string {
	if o == nil || IsNil(o.ControlType.Get()) {
		var ret string
		return ret
	}
	return *o.ControlType.Get()
}

// GetControlTypeOk returns a tuple with the ControlType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormFieldModel) GetControlTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ControlType.Get(), o.ControlType.IsSet()
}

// HasControlType returns a boolean if a field has been set.
func (o *ExternalFormFieldModel) HasControlType() bool {
	if o != nil && o.ControlType.IsSet() {
		return true
	}

	return false
}

// SetControlType gets a reference to the given NullableString and assigns it to the ControlType field.
func (o *ExternalFormFieldModel) SetControlType(v string) {
	o.ControlType.Set(&v)
}
// SetControlTypeNil sets the value for ControlType to be an explicit nil
func (o *ExternalFormFieldModel) SetControlTypeNil() {
	o.ControlType.Set(nil)
}

// UnsetControlType ensures that no value is present for ControlType, not even an explicit nil
func (o *ExternalFormFieldModel) UnsetControlType() {
	o.ControlType.Unset()
}

// GetMinLength returns the MinLength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormFieldModel) GetMinLength() int32 {
	if o == nil || IsNil(o.MinLength.Get()) {
		var ret int32
		return ret
	}
	return *o.MinLength.Get()
}

// GetMinLengthOk returns a tuple with the MinLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormFieldModel) GetMinLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinLength.Get(), o.MinLength.IsSet()
}

// HasMinLength returns a boolean if a field has been set.
func (o *ExternalFormFieldModel) HasMinLength() bool {
	if o != nil && o.MinLength.IsSet() {
		return true
	}

	return false
}

// SetMinLength gets a reference to the given NullableInt32 and assigns it to the MinLength field.
func (o *ExternalFormFieldModel) SetMinLength(v int32) {
	o.MinLength.Set(&v)
}
// SetMinLengthNil sets the value for MinLength to be an explicit nil
func (o *ExternalFormFieldModel) SetMinLengthNil() {
	o.MinLength.Set(nil)
}

// UnsetMinLength ensures that no value is present for MinLength, not even an explicit nil
func (o *ExternalFormFieldModel) UnsetMinLength() {
	o.MinLength.Unset()
}

// GetMaxLength returns the MaxLength field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormFieldModel) GetMaxLength() int32 {
	if o == nil || IsNil(o.MaxLength.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxLength.Get()
}

// GetMaxLengthOk returns a tuple with the MaxLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormFieldModel) GetMaxLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxLength.Get(), o.MaxLength.IsSet()
}

// HasMaxLength returns a boolean if a field has been set.
func (o *ExternalFormFieldModel) HasMaxLength() bool {
	if o != nil && o.MaxLength.IsSet() {
		return true
	}

	return false
}

// SetMaxLength gets a reference to the given NullableInt32 and assigns it to the MaxLength field.
func (o *ExternalFormFieldModel) SetMaxLength(v int32) {
	o.MaxLength.Set(&v)
}
// SetMaxLengthNil sets the value for MaxLength to be an explicit nil
func (o *ExternalFormFieldModel) SetMaxLengthNil() {
	o.MaxLength.Set(nil)
}

// UnsetMaxLength ensures that no value is present for MaxLength, not even an explicit nil
func (o *ExternalFormFieldModel) UnsetMaxLength() {
	o.MaxLength.Unset()
}

// GetIsRequired returns the IsRequired field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormFieldModel) GetIsRequired() bool {
	if o == nil || IsNil(o.IsRequired.Get()) {
		var ret bool
		return ret
	}
	return *o.IsRequired.Get()
}

// GetIsRequiredOk returns a tuple with the IsRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormFieldModel) GetIsRequiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsRequired.Get(), o.IsRequired.IsSet()
}

// HasIsRequired returns a boolean if a field has been set.
func (o *ExternalFormFieldModel) HasIsRequired() bool {
	if o != nil && o.IsRequired.IsSet() {
		return true
	}

	return false
}

// SetIsRequired gets a reference to the given NullableBool and assigns it to the IsRequired field.
func (o *ExternalFormFieldModel) SetIsRequired(v bool) {
	o.IsRequired.Set(&v)
}
// SetIsRequiredNil sets the value for IsRequired to be an explicit nil
func (o *ExternalFormFieldModel) SetIsRequiredNil() {
	o.IsRequired.Set(nil)
}

// UnsetIsRequired ensures that no value is present for IsRequired, not even an explicit nil
func (o *ExternalFormFieldModel) UnsetIsRequired() {
	o.IsRequired.Unset()
}

// GetMin returns the Min field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormFieldModel) GetMin() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Min
}

// GetMinOk returns a tuple with the Min field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormFieldModel) GetMinOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Min) {
		return nil, false
	}
	return &o.Min, true
}

// HasMin returns a boolean if a field has been set.
func (o *ExternalFormFieldModel) HasMin() bool {
	if o != nil && !IsNil(o.Min) {
		return true
	}

	return false
}

// SetMin gets a reference to the given interface{} and assigns it to the Min field.
func (o *ExternalFormFieldModel) SetMin(v interface{}) {
	o.Min = v
}

// GetMax returns the Max field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExternalFormFieldModel) GetMax() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Max
}

// GetMaxOk returns a tuple with the Max field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExternalFormFieldModel) GetMaxOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Max) {
		return nil, false
	}
	return &o.Max, true
}

// HasMax returns a boolean if a field has been set.
func (o *ExternalFormFieldModel) HasMax() bool {
	if o != nil && !IsNil(o.Max) {
		return true
	}

	return false
}

// SetMax gets a reference to the given interface{} and assigns it to the Max field.
func (o *ExternalFormFieldModel) SetMax(v interface{}) {
	o.Max = v
}

func (o ExternalFormFieldModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalFormFieldModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FieldId.IsSet() {
		toSerialize["fieldId"] = o.FieldId.Get()
	}
	if o.FieldName.IsSet() {
		toSerialize["fieldName"] = o.FieldName.Get()
	}
	if o.HelpText.IsSet() {
		toSerialize["helpText"] = o.HelpText.Get()
	}
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	if o.ArrayValuesType.IsSet() {
		toSerialize["arrayValuesType"] = o.ArrayValuesType.Get()
	}
	if o.DefaultValue != nil {
		toSerialize["defaultValue"] = o.DefaultValue
	}
	toSerialize["isCustomValueAllowed"] = o.IsCustomValueAllowed
	if o.AutoCompleteUrl.IsSet() {
		toSerialize["autoCompleteUrl"] = o.AutoCompleteUrl.Get()
	}
	if o.ControlType.IsSet() {
		toSerialize["controlType"] = o.ControlType.Get()
	}
	if o.MinLength.IsSet() {
		toSerialize["minLength"] = o.MinLength.Get()
	}
	if o.MaxLength.IsSet() {
		toSerialize["maxLength"] = o.MaxLength.Get()
	}
	if o.IsRequired.IsSet() {
		toSerialize["isRequired"] = o.IsRequired.Get()
	}
	if o.Min != nil {
		toSerialize["min"] = o.Min
	}
	if o.Max != nil {
		toSerialize["max"] = o.Max
	}
	return toSerialize, nil
}

func (o *ExternalFormFieldModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"isCustomValueAllowed",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalFormFieldModel := _ExternalFormFieldModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalFormFieldModel)

	if err != nil {
		return err
	}

	*o = ExternalFormFieldModel(varExternalFormFieldModel)

	return err
}

type NullableExternalFormFieldModel struct {
	value *ExternalFormFieldModel
	isSet bool
}

func (v NullableExternalFormFieldModel) Get() *ExternalFormFieldModel {
	return v.value
}

func (v *NullableExternalFormFieldModel) Set(val *ExternalFormFieldModel) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalFormFieldModel) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalFormFieldModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalFormFieldModel(val *ExternalFormFieldModel) *NullableExternalFormFieldModel {
	return &NullableExternalFormFieldModel{value: val, isSet: true}
}

func (v NullableExternalFormFieldModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalFormFieldModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


