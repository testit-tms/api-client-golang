/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the SectionPutModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SectionPutModel{}

// SectionPutModel struct for SectionPutModel
type SectionPutModel struct {
	Id string `json:"id"`
	Name string `json:"name"`
	ProjectId string `json:"projectId"`
	ParentId NullableString `json:"parentId,omitempty"`
	PreconditionSteps []StepPutModel `json:"preconditionSteps,omitempty"`
	PostconditionSteps []StepPutModel `json:"postconditionSteps,omitempty"`
}

// NewSectionPutModel instantiates a new SectionPutModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSectionPutModel(id string, name string, projectId string) *SectionPutModel {
	this := SectionPutModel{}
	this.Id = id
	this.Name = name
	this.ProjectId = projectId
	return &this
}

// NewSectionPutModelWithDefaults instantiates a new SectionPutModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSectionPutModelWithDefaults() *SectionPutModel {
	this := SectionPutModel{}
	return &this
}

// GetId returns the Id field value
func (o *SectionPutModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SectionPutModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SectionPutModel) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *SectionPutModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SectionPutModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SectionPutModel) SetName(v string) {
	o.Name = v
}

// GetProjectId returns the ProjectId field value
func (o *SectionPutModel) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *SectionPutModel) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *SectionPutModel) SetProjectId(v string) {
	o.ProjectId = v
}

// GetParentId returns the ParentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SectionPutModel) GetParentId() string {
	if o == nil || IsNil(o.ParentId.Get()) {
		var ret string
		return ret
	}
	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SectionPutModel) GetParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// HasParentId returns a boolean if a field has been set.
func (o *SectionPutModel) HasParentId() bool {
	if o != nil && o.ParentId.IsSet() {
		return true
	}

	return false
}

// SetParentId gets a reference to the given NullableString and assigns it to the ParentId field.
func (o *SectionPutModel) SetParentId(v string) {
	o.ParentId.Set(&v)
}
// SetParentIdNil sets the value for ParentId to be an explicit nil
func (o *SectionPutModel) SetParentIdNil() {
	o.ParentId.Set(nil)
}

// UnsetParentId ensures that no value is present for ParentId, not even an explicit nil
func (o *SectionPutModel) UnsetParentId() {
	o.ParentId.Unset()
}

// GetPreconditionSteps returns the PreconditionSteps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SectionPutModel) GetPreconditionSteps() []StepPutModel {
	if o == nil {
		var ret []StepPutModel
		return ret
	}
	return o.PreconditionSteps
}

// GetPreconditionStepsOk returns a tuple with the PreconditionSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SectionPutModel) GetPreconditionStepsOk() ([]StepPutModel, bool) {
	if o == nil || IsNil(o.PreconditionSteps) {
		return nil, false
	}
	return o.PreconditionSteps, true
}

// HasPreconditionSteps returns a boolean if a field has been set.
func (o *SectionPutModel) HasPreconditionSteps() bool {
	if o != nil && IsNil(o.PreconditionSteps) {
		return true
	}

	return false
}

// SetPreconditionSteps gets a reference to the given []StepPutModel and assigns it to the PreconditionSteps field.
func (o *SectionPutModel) SetPreconditionSteps(v []StepPutModel) {
	o.PreconditionSteps = v
}

// GetPostconditionSteps returns the PostconditionSteps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SectionPutModel) GetPostconditionSteps() []StepPutModel {
	if o == nil {
		var ret []StepPutModel
		return ret
	}
	return o.PostconditionSteps
}

// GetPostconditionStepsOk returns a tuple with the PostconditionSteps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SectionPutModel) GetPostconditionStepsOk() ([]StepPutModel, bool) {
	if o == nil || IsNil(o.PostconditionSteps) {
		return nil, false
	}
	return o.PostconditionSteps, true
}

// HasPostconditionSteps returns a boolean if a field has been set.
func (o *SectionPutModel) HasPostconditionSteps() bool {
	if o != nil && IsNil(o.PostconditionSteps) {
		return true
	}

	return false
}

// SetPostconditionSteps gets a reference to the given []StepPutModel and assigns it to the PostconditionSteps field.
func (o *SectionPutModel) SetPostconditionSteps(v []StepPutModel) {
	o.PostconditionSteps = v
}

func (o SectionPutModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SectionPutModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["projectId"] = o.ProjectId
	if o.ParentId.IsSet() {
		toSerialize["parentId"] = o.ParentId.Get()
	}
	if o.PreconditionSteps != nil {
		toSerialize["preconditionSteps"] = o.PreconditionSteps
	}
	if o.PostconditionSteps != nil {
		toSerialize["postconditionSteps"] = o.PostconditionSteps
	}
	return toSerialize, nil
}

type NullableSectionPutModel struct {
	value *SectionPutModel
	isSet bool
}

func (v NullableSectionPutModel) Get() *SectionPutModel {
	return v.value
}

func (v *NullableSectionPutModel) Set(val *SectionPutModel) {
	v.value = val
	v.isSet = true
}

func (v NullableSectionPutModel) IsSet() bool {
	return v.isSet
}

func (v *NullableSectionPutModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSectionPutModel(val *SectionPutModel) *NullableSectionPutModel {
	return &NullableSectionPutModel{value: val, isSet: true}
}

func (v NullableSectionPutModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSectionPutModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


