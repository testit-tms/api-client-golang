/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExternalIssueModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalIssueModel{}

// ExternalIssueModel struct for ExternalIssueModel
type ExternalIssueModel struct {
	Id string `json:"id"`
	ExternalId string `json:"externalId"`
	Url string `json:"url"`
	Metadata ExternalIssueMetadataModel `json:"metadata"`
}

type _ExternalIssueModel ExternalIssueModel

// NewExternalIssueModel instantiates a new ExternalIssueModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalIssueModel(id string, externalId string, url string, metadata ExternalIssueMetadataModel) *ExternalIssueModel {
	this := ExternalIssueModel{}
	this.Id = id
	this.ExternalId = externalId
	this.Url = url
	this.Metadata = metadata
	return &this
}

// NewExternalIssueModelWithDefaults instantiates a new ExternalIssueModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalIssueModelWithDefaults() *ExternalIssueModel {
	this := ExternalIssueModel{}
	return &this
}

// GetId returns the Id field value
func (o *ExternalIssueModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ExternalIssueModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ExternalIssueModel) SetId(v string) {
	o.Id = v
}

// GetExternalId returns the ExternalId field value
func (o *ExternalIssueModel) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *ExternalIssueModel) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *ExternalIssueModel) SetExternalId(v string) {
	o.ExternalId = v
}

// GetUrl returns the Url field value
func (o *ExternalIssueModel) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ExternalIssueModel) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ExternalIssueModel) SetUrl(v string) {
	o.Url = v
}

// GetMetadata returns the Metadata field value
func (o *ExternalIssueModel) GetMetadata() ExternalIssueMetadataModel {
	if o == nil {
		var ret ExternalIssueMetadataModel
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *ExternalIssueModel) GetMetadataOk() (*ExternalIssueMetadataModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *ExternalIssueModel) SetMetadata(v ExternalIssueMetadataModel) {
	o.Metadata = v
}

func (o ExternalIssueModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalIssueModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["externalId"] = o.ExternalId
	toSerialize["url"] = o.Url
	toSerialize["metadata"] = o.Metadata
	return toSerialize, nil
}

func (o *ExternalIssueModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"externalId",
		"url",
		"metadata",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalIssueModel := _ExternalIssueModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExternalIssueModel)

	if err != nil {
		return err
	}

	*o = ExternalIssueModel(varExternalIssueModel)

	return err
}

type NullableExternalIssueModel struct {
	value *ExternalIssueModel
	isSet bool
}

func (v NullableExternalIssueModel) Get() *ExternalIssueModel {
	return v.value
}

func (v *NullableExternalIssueModel) Set(val *ExternalIssueModel) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalIssueModel) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalIssueModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalIssueModel(val *ExternalIssueModel) *NullableExternalIssueModel {
	return &NullableExternalIssueModel{value: val, isSet: true}
}

func (v NullableExternalIssueModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalIssueModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


