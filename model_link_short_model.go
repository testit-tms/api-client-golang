/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LinkShortModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinkShortModel{}

// LinkShortModel struct for LinkShortModel
type LinkShortModel struct {
	Id string `json:"id"`
	Title string `json:"title"`
	Type NullableString `json:"type,omitempty"`
	Url string `json:"url"`
}

type _LinkShortModel LinkShortModel

// NewLinkShortModel instantiates a new LinkShortModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinkShortModel(id string, title string, url string) *LinkShortModel {
	this := LinkShortModel{}
	this.Id = id
	this.Title = title
	this.Url = url
	return &this
}

// NewLinkShortModelWithDefaults instantiates a new LinkShortModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinkShortModelWithDefaults() *LinkShortModel {
	this := LinkShortModel{}
	return &this
}

// GetId returns the Id field value
func (o *LinkShortModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LinkShortModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LinkShortModel) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *LinkShortModel) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *LinkShortModel) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *LinkShortModel) SetTitle(v string) {
	o.Title = v
}

// GetType returns the Type field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *LinkShortModel) GetType() string {
	if o == nil || IsNil(o.Type.Get()) {
		var ret string
		return ret
	}
	return *o.Type.Get()
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *LinkShortModel) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type.Get(), o.Type.IsSet()
}

// HasType returns a boolean if a field has been set.
func (o *LinkShortModel) HasType() bool {
	if o != nil && o.Type.IsSet() {
		return true
	}

	return false
}

// SetType gets a reference to the given NullableString and assigns it to the Type field.
func (o *LinkShortModel) SetType(v string) {
	o.Type.Set(&v)
}
// SetTypeNil sets the value for Type to be an explicit nil
func (o *LinkShortModel) SetTypeNil() {
	o.Type.Set(nil)
}

// UnsetType ensures that no value is present for Type, not even an explicit nil
func (o *LinkShortModel) UnsetType() {
	o.Type.Unset()
}

// GetUrl returns the Url field value
func (o *LinkShortModel) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *LinkShortModel) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *LinkShortModel) SetUrl(v string) {
	o.Url = v
}

func (o LinkShortModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinkShortModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["title"] = o.Title
	if o.Type.IsSet() {
		toSerialize["type"] = o.Type.Get()
	}
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

func (o *LinkShortModel) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"title",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLinkShortModel := _LinkShortModel{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLinkShortModel)

	if err != nil {
		return err
	}

	*o = LinkShortModel(varLinkShortModel)

	return err
}

type NullableLinkShortModel struct {
	value *LinkShortModel
	isSet bool
}

func (v NullableLinkShortModel) Get() *LinkShortModel {
	return v.value
}

func (v *NullableLinkShortModel) Set(val *LinkShortModel) {
	v.value = val
	v.isSet = true
}

func (v NullableLinkShortModel) IsSet() bool {
	return v.isSet
}

func (v *NullableLinkShortModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinkShortModel(val *LinkShortModel) *NullableLinkShortModel {
	return &NullableLinkShortModel{value: val, isSet: true}
}

func (v NullableLinkShortModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinkShortModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


