/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the TestPlanShortModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestPlanShortModel{}

// TestPlanShortModel struct for TestPlanShortModel
type TestPlanShortModel struct {
	Id string `json:"id"`
	ProjectId string `json:"projectId"`
	Name string `json:"name"`
}

// NewTestPlanShortModel instantiates a new TestPlanShortModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestPlanShortModel(id string, projectId string, name string) *TestPlanShortModel {
	this := TestPlanShortModel{}
	this.Id = id
	this.ProjectId = projectId
	this.Name = name
	return &this
}

// NewTestPlanShortModelWithDefaults instantiates a new TestPlanShortModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestPlanShortModelWithDefaults() *TestPlanShortModel {
	this := TestPlanShortModel{}
	return &this
}

// GetId returns the Id field value
func (o *TestPlanShortModel) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TestPlanShortModel) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TestPlanShortModel) SetId(v string) {
	o.Id = v
}

// GetProjectId returns the ProjectId field value
func (o *TestPlanShortModel) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *TestPlanShortModel) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *TestPlanShortModel) SetProjectId(v string) {
	o.ProjectId = v
}

// GetName returns the Name field value
func (o *TestPlanShortModel) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TestPlanShortModel) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TestPlanShortModel) SetName(v string) {
	o.Name = v
}

func (o TestPlanShortModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestPlanShortModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["projectId"] = o.ProjectId
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableTestPlanShortModel struct {
	value *TestPlanShortModel
	isSet bool
}

func (v NullableTestPlanShortModel) Get() *TestPlanShortModel {
	return v.value
}

func (v *NullableTestPlanShortModel) Set(val *TestPlanShortModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestPlanShortModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestPlanShortModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestPlanShortModel(val *TestPlanShortModel) *NullableTestPlanShortModel {
	return &NullableTestPlanShortModel{value: val, isSet: true}
}

func (v NullableTestPlanShortModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestPlanShortModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


