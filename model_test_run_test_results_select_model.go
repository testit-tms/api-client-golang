/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the TestRunTestResultsSelectModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TestRunTestResultsSelectModel{}

// TestRunTestResultsSelectModel struct for TestRunTestResultsSelectModel
type TestRunTestResultsSelectModel struct {
	// Collection of filters to apply to search
	Filter NullableTestResultsLocalFilterModel `json:"filter,omitempty"`
	// Rules to include and exclude certain entities in result
	TestResultIdsExtractionModel NullableGuidExtractionModel `json:"testResultIdsExtractionModel,omitempty"`
}

// NewTestRunTestResultsSelectModel instantiates a new TestRunTestResultsSelectModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTestRunTestResultsSelectModel() *TestRunTestResultsSelectModel {
	this := TestRunTestResultsSelectModel{}
	return &this
}

// NewTestRunTestResultsSelectModelWithDefaults instantiates a new TestRunTestResultsSelectModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTestRunTestResultsSelectModelWithDefaults() *TestRunTestResultsSelectModel {
	this := TestRunTestResultsSelectModel{}
	return &this
}

// GetFilter returns the Filter field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunTestResultsSelectModel) GetFilter() TestResultsLocalFilterModel {
	if o == nil || IsNil(o.Filter.Get()) {
		var ret TestResultsLocalFilterModel
		return ret
	}
	return *o.Filter.Get()
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunTestResultsSelectModel) GetFilterOk() (*TestResultsLocalFilterModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.Filter.Get(), o.Filter.IsSet()
}

// HasFilter returns a boolean if a field has been set.
func (o *TestRunTestResultsSelectModel) HasFilter() bool {
	if o != nil && o.Filter.IsSet() {
		return true
	}

	return false
}

// SetFilter gets a reference to the given NullableTestResultsLocalFilterModel and assigns it to the Filter field.
func (o *TestRunTestResultsSelectModel) SetFilter(v TestResultsLocalFilterModel) {
	o.Filter.Set(&v)
}
// SetFilterNil sets the value for Filter to be an explicit nil
func (o *TestRunTestResultsSelectModel) SetFilterNil() {
	o.Filter.Set(nil)
}

// UnsetFilter ensures that no value is present for Filter, not even an explicit nil
func (o *TestRunTestResultsSelectModel) UnsetFilter() {
	o.Filter.Unset()
}

// GetTestResultIdsExtractionModel returns the TestResultIdsExtractionModel field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TestRunTestResultsSelectModel) GetTestResultIdsExtractionModel() GuidExtractionModel {
	if o == nil || IsNil(o.TestResultIdsExtractionModel.Get()) {
		var ret GuidExtractionModel
		return ret
	}
	return *o.TestResultIdsExtractionModel.Get()
}

// GetTestResultIdsExtractionModelOk returns a tuple with the TestResultIdsExtractionModel field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TestRunTestResultsSelectModel) GetTestResultIdsExtractionModelOk() (*GuidExtractionModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.TestResultIdsExtractionModel.Get(), o.TestResultIdsExtractionModel.IsSet()
}

// HasTestResultIdsExtractionModel returns a boolean if a field has been set.
func (o *TestRunTestResultsSelectModel) HasTestResultIdsExtractionModel() bool {
	if o != nil && o.TestResultIdsExtractionModel.IsSet() {
		return true
	}

	return false
}

// SetTestResultIdsExtractionModel gets a reference to the given NullableGuidExtractionModel and assigns it to the TestResultIdsExtractionModel field.
func (o *TestRunTestResultsSelectModel) SetTestResultIdsExtractionModel(v GuidExtractionModel) {
	o.TestResultIdsExtractionModel.Set(&v)
}
// SetTestResultIdsExtractionModelNil sets the value for TestResultIdsExtractionModel to be an explicit nil
func (o *TestRunTestResultsSelectModel) SetTestResultIdsExtractionModelNil() {
	o.TestResultIdsExtractionModel.Set(nil)
}

// UnsetTestResultIdsExtractionModel ensures that no value is present for TestResultIdsExtractionModel, not even an explicit nil
func (o *TestRunTestResultsSelectModel) UnsetTestResultIdsExtractionModel() {
	o.TestResultIdsExtractionModel.Unset()
}

func (o TestRunTestResultsSelectModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TestRunTestResultsSelectModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Filter.IsSet() {
		toSerialize["filter"] = o.Filter.Get()
	}
	if o.TestResultIdsExtractionModel.IsSet() {
		toSerialize["testResultIdsExtractionModel"] = o.TestResultIdsExtractionModel.Get()
	}
	return toSerialize, nil
}

type NullableTestRunTestResultsSelectModel struct {
	value *TestRunTestResultsSelectModel
	isSet bool
}

func (v NullableTestRunTestResultsSelectModel) Get() *TestRunTestResultsSelectModel {
	return v.value
}

func (v *NullableTestRunTestResultsSelectModel) Set(val *TestRunTestResultsSelectModel) {
	v.value = val
	v.isSet = true
}

func (v NullableTestRunTestResultsSelectModel) IsSet() bool {
	return v.isSet
}

func (v *NullableTestRunTestResultsSelectModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTestRunTestResultsSelectModel(val *TestRunTestResultsSelectModel) *NullableTestRunTestResultsSelectModel {
	return &NullableTestRunTestResultsSelectModel{value: val, isSet: true}
}

func (v NullableTestRunTestResultsSelectModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTestRunTestResultsSelectModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


