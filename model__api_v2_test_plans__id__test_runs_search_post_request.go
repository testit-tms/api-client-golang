/*
API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package tmsclient

import (
	"encoding/json"
)

// checks if the ApiV2TestPlansIdTestRunsSearchPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiV2TestPlansIdTestRunsSearchPostRequest{}

// ApiV2TestPlansIdTestRunsSearchPostRequest struct for ApiV2TestPlansIdTestRunsSearchPostRequest
type ApiV2TestPlansIdTestRunsSearchPostRequest struct {
	Name NullableString `json:"name,omitempty"`
	States []TestRunState `json:"states,omitempty"`
	StartedDate NullableDateTimeRangeSelectorModel `json:"startedDate,omitempty"`
	CompletedDate NullableDateTimeRangeSelectorModel `json:"completedDate,omitempty"`
	CreatedByIds []string `json:"createdByIds,omitempty"`
	ModifiedByIds []string `json:"modifiedByIds,omitempty"`
}

// NewApiV2TestPlansIdTestRunsSearchPostRequest instantiates a new ApiV2TestPlansIdTestRunsSearchPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiV2TestPlansIdTestRunsSearchPostRequest() *ApiV2TestPlansIdTestRunsSearchPostRequest {
	this := ApiV2TestPlansIdTestRunsSearchPostRequest{}
	return &this
}

// NewApiV2TestPlansIdTestRunsSearchPostRequestWithDefaults instantiates a new ApiV2TestPlansIdTestRunsSearchPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiV2TestPlansIdTestRunsSearchPostRequestWithDefaults() *ApiV2TestPlansIdTestRunsSearchPostRequest {
	this := ApiV2TestPlansIdTestRunsSearchPostRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) UnsetName() {
	o.Name.Unset()
}

// GetStates returns the States field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) GetStates() []TestRunState {
	if o == nil {
		var ret []TestRunState
		return ret
	}
	return o.States
}

// GetStatesOk returns a tuple with the States field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) GetStatesOk() ([]TestRunState, bool) {
	if o == nil || IsNil(o.States) {
		return nil, false
	}
	return o.States, true
}

// HasStates returns a boolean if a field has been set.
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) HasStates() bool {
	if o != nil && IsNil(o.States) {
		return true
	}

	return false
}

// SetStates gets a reference to the given []TestRunState and assigns it to the States field.
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) SetStates(v []TestRunState) {
	o.States = v
}

// GetStartedDate returns the StartedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) GetStartedDate() DateTimeRangeSelectorModel {
	if o == nil || IsNil(o.StartedDate.Get()) {
		var ret DateTimeRangeSelectorModel
		return ret
	}
	return *o.StartedDate.Get()
}

// GetStartedDateOk returns a tuple with the StartedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) GetStartedDateOk() (*DateTimeRangeSelectorModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedDate.Get(), o.StartedDate.IsSet()
}

// HasStartedDate returns a boolean if a field has been set.
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) HasStartedDate() bool {
	if o != nil && o.StartedDate.IsSet() {
		return true
	}

	return false
}

// SetStartedDate gets a reference to the given NullableDateTimeRangeSelectorModel and assigns it to the StartedDate field.
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) SetStartedDate(v DateTimeRangeSelectorModel) {
	o.StartedDate.Set(&v)
}
// SetStartedDateNil sets the value for StartedDate to be an explicit nil
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) SetStartedDateNil() {
	o.StartedDate.Set(nil)
}

// UnsetStartedDate ensures that no value is present for StartedDate, not even an explicit nil
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) UnsetStartedDate() {
	o.StartedDate.Unset()
}

// GetCompletedDate returns the CompletedDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) GetCompletedDate() DateTimeRangeSelectorModel {
	if o == nil || IsNil(o.CompletedDate.Get()) {
		var ret DateTimeRangeSelectorModel
		return ret
	}
	return *o.CompletedDate.Get()
}

// GetCompletedDateOk returns a tuple with the CompletedDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) GetCompletedDateOk() (*DateTimeRangeSelectorModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedDate.Get(), o.CompletedDate.IsSet()
}

// HasCompletedDate returns a boolean if a field has been set.
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) HasCompletedDate() bool {
	if o != nil && o.CompletedDate.IsSet() {
		return true
	}

	return false
}

// SetCompletedDate gets a reference to the given NullableDateTimeRangeSelectorModel and assigns it to the CompletedDate field.
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) SetCompletedDate(v DateTimeRangeSelectorModel) {
	o.CompletedDate.Set(&v)
}
// SetCompletedDateNil sets the value for CompletedDate to be an explicit nil
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) SetCompletedDateNil() {
	o.CompletedDate.Set(nil)
}

// UnsetCompletedDate ensures that no value is present for CompletedDate, not even an explicit nil
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) UnsetCompletedDate() {
	o.CompletedDate.Unset()
}

// GetCreatedByIds returns the CreatedByIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) GetCreatedByIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.CreatedByIds
}

// GetCreatedByIdsOk returns a tuple with the CreatedByIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) GetCreatedByIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.CreatedByIds) {
		return nil, false
	}
	return o.CreatedByIds, true
}

// HasCreatedByIds returns a boolean if a field has been set.
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) HasCreatedByIds() bool {
	if o != nil && IsNil(o.CreatedByIds) {
		return true
	}

	return false
}

// SetCreatedByIds gets a reference to the given []string and assigns it to the CreatedByIds field.
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) SetCreatedByIds(v []string) {
	o.CreatedByIds = v
}

// GetModifiedByIds returns the ModifiedByIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) GetModifiedByIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ModifiedByIds
}

// GetModifiedByIdsOk returns a tuple with the ModifiedByIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) GetModifiedByIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ModifiedByIds) {
		return nil, false
	}
	return o.ModifiedByIds, true
}

// HasModifiedByIds returns a boolean if a field has been set.
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) HasModifiedByIds() bool {
	if o != nil && IsNil(o.ModifiedByIds) {
		return true
	}

	return false
}

// SetModifiedByIds gets a reference to the given []string and assigns it to the ModifiedByIds field.
func (o *ApiV2TestPlansIdTestRunsSearchPostRequest) SetModifiedByIds(v []string) {
	o.ModifiedByIds = v
}

func (o ApiV2TestPlansIdTestRunsSearchPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiV2TestPlansIdTestRunsSearchPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.States != nil {
		toSerialize["states"] = o.States
	}
	if o.StartedDate.IsSet() {
		toSerialize["startedDate"] = o.StartedDate.Get()
	}
	if o.CompletedDate.IsSet() {
		toSerialize["completedDate"] = o.CompletedDate.Get()
	}
	if o.CreatedByIds != nil {
		toSerialize["createdByIds"] = o.CreatedByIds
	}
	if o.ModifiedByIds != nil {
		toSerialize["modifiedByIds"] = o.ModifiedByIds
	}
	return toSerialize, nil
}

type NullableApiV2TestPlansIdTestRunsSearchPostRequest struct {
	value *ApiV2TestPlansIdTestRunsSearchPostRequest
	isSet bool
}

func (v NullableApiV2TestPlansIdTestRunsSearchPostRequest) Get() *ApiV2TestPlansIdTestRunsSearchPostRequest {
	return v.value
}

func (v *NullableApiV2TestPlansIdTestRunsSearchPostRequest) Set(val *ApiV2TestPlansIdTestRunsSearchPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApiV2TestPlansIdTestRunsSearchPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApiV2TestPlansIdTestRunsSearchPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiV2TestPlansIdTestRunsSearchPostRequest(val *ApiV2TestPlansIdTestRunsSearchPostRequest) *NullableApiV2TestPlansIdTestRunsSearchPostRequest {
	return &NullableApiV2TestPlansIdTestRunsSearchPostRequest{value: val, isSet: true}
}

func (v NullableApiV2TestPlansIdTestRunsSearchPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiV2TestPlansIdTestRunsSearchPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


